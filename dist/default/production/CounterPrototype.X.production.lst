

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 04 10:30:23 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16LF1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16LF1509 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0015                     	;# 
    94     0016                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001C                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     0111                     	;# 
   123     0112                     	;# 
   124     0113                     	;# 
   125     0114                     	;# 
   126     0115                     	;# 
   127     0116                     	;# 
   128     0117                     	;# 
   129     0118                     	;# 
   130     0119                     	;# 
   131     011D                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     018E                     	;# 
   135     0191                     	;# 
   136     0191                     	;# 
   137     0192                     	;# 
   138     0193                     	;# 
   139     0193                     	;# 
   140     0194                     	;# 
   141     0195                     	;# 
   142     0196                     	;# 
   143     0199                     	;# 
   144     019A                     	;# 
   145     019B                     	;# 
   146     019B                     	;# 
   147     019C                     	;# 
   148     019D                     	;# 
   149     019E                     	;# 
   150     019F                     	;# 
   151     020C                     	;# 
   152     020D                     	;# 
   153     0211                     	;# 
   154     0211                     	;# 
   155     0212                     	;# 
   156     0212                     	;# 
   157     0213                     	;# 
   158     0213                     	;# 
   159     0214                     	;# 
   160     0214                     	;# 
   161     0215                     	;# 
   162     0215                     	;# 
   163     0215                     	;# 
   164     0216                     	;# 
   165     0216                     	;# 
   166     0217                     	;# 
   167     0217                     	;# 
   168     0391                     	;# 
   169     0392                     	;# 
   170     0393                     	;# 
   171     0394                     	;# 
   172     0395                     	;# 
   173     0396                     	;# 
   174     0498                     	;# 
   175     0498                     	;# 
   176     0499                     	;# 
   177     049A                     	;# 
   178     049B                     	;# 
   179     049B                     	;# 
   180     049C                     	;# 
   181     049D                     	;# 
   182     049E                     	;# 
   183     049F                     	;# 
   184     0611                     	;# 
   185     0612                     	;# 
   186     0613                     	;# 
   187     0613                     	;# 
   188     0614                     	;# 
   189     0615                     	;# 
   190     0616                     	;# 
   191     0616                     	;# 
   192     0617                     	;# 
   193     0618                     	;# 
   194     0619                     	;# 
   195     0619                     	;# 
   196     061A                     	;# 
   197     061B                     	;# 
   198     061C                     	;# 
   199     061C                     	;# 
   200     0691                     	;# 
   201     0692                     	;# 
   202     0693                     	;# 
   203     0694                     	;# 
   204     0695                     	;# 
   205     0F0F                     	;# 
   206     0F10                     	;# 
   207     0F11                     	;# 
   208     0F12                     	;# 
   209     0F13                     	;# 
   210     0F14                     	;# 
   211     0F15                     	;# 
   212     0F16                     	;# 
   213     0F17                     	;# 
   214     0F18                     	;# 
   215     0F19                     	;# 
   216     0F1A                     	;# 
   217     0F1B                     	;# 
   218     0F1C                     	;# 
   219     0F1D                     	;# 
   220     0F1E                     	;# 
   221     0F1F                     	;# 
   222     0F20                     	;# 
   223     0F21                     	;# 
   224     0F22                     	;# 
   225     0F23                     	;# 
   226     0F24                     	;# 
   227     0F25                     	;# 
   228     0F26                     	;# 
   229     0F27                     	;# 
   230     0F28                     	;# 
   231     0F29                     	;# 
   232     0F2A                     	;# 
   233     0F2B                     	;# 
   234     0F2C                     	;# 
   235     0F2D                     	;# 
   236     0F2E                     	;# 
   237     0F2F                     	;# 
   238     0F8C                     	;# 
   239     0F8D                     	;# 
   240     0F91                     	;# 
   241     0F95                     	;# 
   242     0F96                     	;# 
   243     0F97                     	;# 
   244     0F9C                     	;# 
   245     0F9D                     	;# 
   246     0F9E                     	;# 
   247     0FE3                     	;# 
   248     0FE4                     	;# 
   249     0FE5                     	;# 
   250     0FE6                     	;# 
   251     0FE7                     	;# 
   252     0FE8                     	;# 
   253     0FE9                     	;# 
   254     0FEA                     	;# 
   255     0FEB                     	;# 
   256     0FED                     	;# 
   257     0FEE                     	;# 
   258     0FEF                     	;# 
   259     0000                     	;# 
   260     0001                     	;# 
   261     0002                     	;# 
   262     0003                     	;# 
   263     0004                     	;# 
   264     0005                     	;# 
   265     0006                     	;# 
   266     0007                     	;# 
   267     0008                     	;# 
   268     0009                     	;# 
   269     000A                     	;# 
   270     000B                     	;# 
   271     000C                     	;# 
   272     000D                     	;# 
   273     000E                     	;# 
   274     0011                     	;# 
   275     0012                     	;# 
   276     0013                     	;# 
   277     0015                     	;# 
   278     0016                     	;# 
   279     0016                     	;# 
   280     0017                     	;# 
   281     0018                     	;# 
   282     0019                     	;# 
   283     001A                     	;# 
   284     001B                     	;# 
   285     001C                     	;# 
   286     008C                     	;# 
   287     008D                     	;# 
   288     008E                     	;# 
   289     0091                     	;# 
   290     0092                     	;# 
   291     0093                     	;# 
   292     0095                     	;# 
   293     0096                     	;# 
   294     0097                     	;# 
   295     0099                     	;# 
   296     009A                     	;# 
   297     009B                     	;# 
   298     009B                     	;# 
   299     009C                     	;# 
   300     009D                     	;# 
   301     009E                     	;# 
   302     009F                     	;# 
   303     010C                     	;# 
   304     010D                     	;# 
   305     010E                     	;# 
   306     0111                     	;# 
   307     0112                     	;# 
   308     0113                     	;# 
   309     0114                     	;# 
   310     0115                     	;# 
   311     0116                     	;# 
   312     0117                     	;# 
   313     0118                     	;# 
   314     0119                     	;# 
   315     011D                     	;# 
   316     018C                     	;# 
   317     018D                     	;# 
   318     018E                     	;# 
   319     0191                     	;# 
   320     0191                     	;# 
   321     0192                     	;# 
   322     0193                     	;# 
   323     0193                     	;# 
   324     0194                     	;# 
   325     0195                     	;# 
   326     0196                     	;# 
   327     0199                     	;# 
   328     019A                     	;# 
   329     019B                     	;# 
   330     019B                     	;# 
   331     019C                     	;# 
   332     019D                     	;# 
   333     019E                     	;# 
   334     019F                     	;# 
   335     020C                     	;# 
   336     020D                     	;# 
   337     0211                     	;# 
   338     0211                     	;# 
   339     0212                     	;# 
   340     0212                     	;# 
   341     0213                     	;# 
   342     0213                     	;# 
   343     0214                     	;# 
   344     0214                     	;# 
   345     0215                     	;# 
   346     0215                     	;# 
   347     0215                     	;# 
   348     0216                     	;# 
   349     0216                     	;# 
   350     0217                     	;# 
   351     0217                     	;# 
   352     0391                     	;# 
   353     0392                     	;# 
   354     0393                     	;# 
   355     0394                     	;# 
   356     0395                     	;# 
   357     0396                     	;# 
   358     0498                     	;# 
   359     0498                     	;# 
   360     0499                     	;# 
   361     049A                     	;# 
   362     049B                     	;# 
   363     049B                     	;# 
   364     049C                     	;# 
   365     049D                     	;# 
   366     049E                     	;# 
   367     049F                     	;# 
   368     0611                     	;# 
   369     0612                     	;# 
   370     0613                     	;# 
   371     0613                     	;# 
   372     0614                     	;# 
   373     0615                     	;# 
   374     0616                     	;# 
   375     0616                     	;# 
   376     0617                     	;# 
   377     0618                     	;# 
   378     0619                     	;# 
   379     0619                     	;# 
   380     061A                     	;# 
   381     061B                     	;# 
   382     061C                     	;# 
   383     061C                     	;# 
   384     0691                     	;# 
   385     0692                     	;# 
   386     0693                     	;# 
   387     0694                     	;# 
   388     0695                     	;# 
   389     0F0F                     	;# 
   390     0F10                     	;# 
   391     0F11                     	;# 
   392     0F12                     	;# 
   393     0F13                     	;# 
   394     0F14                     	;# 
   395     0F15                     	;# 
   396     0F16                     	;# 
   397     0F17                     	;# 
   398     0F18                     	;# 
   399     0F19                     	;# 
   400     0F1A                     	;# 
   401     0F1B                     	;# 
   402     0F1C                     	;# 
   403     0F1D                     	;# 
   404     0F1E                     	;# 
   405     0F1F                     	;# 
   406     0F20                     	;# 
   407     0F21                     	;# 
   408     0F22                     	;# 
   409     0F23                     	;# 
   410     0F24                     	;# 
   411     0F25                     	;# 
   412     0F26                     	;# 
   413     0F27                     	;# 
   414     0F28                     	;# 
   415     0F29                     	;# 
   416     0F2A                     	;# 
   417     0F2B                     	;# 
   418     0F2C                     	;# 
   419     0F2D                     	;# 
   420     0F2E                     	;# 
   421     0F2F                     	;# 
   422     0F8C                     	;# 
   423     0F8D                     	;# 
   424     0F91                     	;# 
   425     0F95                     	;# 
   426     0F96                     	;# 
   427     0F97                     	;# 
   428     0F9C                     	;# 
   429     0F9D                     	;# 
   430     0F9E                     	;# 
   431     0FE3                     	;# 
   432     0FE4                     	;# 
   433     0FE5                     	;# 
   434     0FE6                     	;# 
   435     0FE7                     	;# 
   436     0FE8                     	;# 
   437     0FE9                     	;# 
   438     0FEA                     	;# 
   439     0FEB                     	;# 
   440     0FED                     	;# 
   441     0FEE                     	;# 
   442     0FEF                     	;# 
   443     0000                     	;# 
   444     0001                     	;# 
   445     0002                     	;# 
   446     0003                     	;# 
   447     0004                     	;# 
   448     0005                     	;# 
   449     0006                     	;# 
   450     0007                     	;# 
   451     0008                     	;# 
   452     0009                     	;# 
   453     000A                     	;# 
   454     000B                     	;# 
   455     000C                     	;# 
   456     000D                     	;# 
   457     000E                     	;# 
   458     0011                     	;# 
   459     0012                     	;# 
   460     0013                     	;# 
   461     0015                     	;# 
   462     0016                     	;# 
   463     0016                     	;# 
   464     0017                     	;# 
   465     0018                     	;# 
   466     0019                     	;# 
   467     001A                     	;# 
   468     001B                     	;# 
   469     001C                     	;# 
   470     008C                     	;# 
   471     008D                     	;# 
   472     008E                     	;# 
   473     0091                     	;# 
   474     0092                     	;# 
   475     0093                     	;# 
   476     0095                     	;# 
   477     0096                     	;# 
   478     0097                     	;# 
   479     0099                     	;# 
   480     009A                     	;# 
   481     009B                     	;# 
   482     009B                     	;# 
   483     009C                     	;# 
   484     009D                     	;# 
   485     009E                     	;# 
   486     009F                     	;# 
   487     010C                     	;# 
   488     010D                     	;# 
   489     010E                     	;# 
   490     0111                     	;# 
   491     0112                     	;# 
   492     0113                     	;# 
   493     0114                     	;# 
   494     0115                     	;# 
   495     0116                     	;# 
   496     0117                     	;# 
   497     0118                     	;# 
   498     0119                     	;# 
   499     011D                     	;# 
   500     018C                     	;# 
   501     018D                     	;# 
   502     018E                     	;# 
   503     0191                     	;# 
   504     0191                     	;# 
   505     0192                     	;# 
   506     0193                     	;# 
   507     0193                     	;# 
   508     0194                     	;# 
   509     0195                     	;# 
   510     0196                     	;# 
   511     0199                     	;# 
   512     019A                     	;# 
   513     019B                     	;# 
   514     019B                     	;# 
   515     019C                     	;# 
   516     019D                     	;# 
   517     019E                     	;# 
   518     019F                     	;# 
   519     020C                     	;# 
   520     020D                     	;# 
   521     0211                     	;# 
   522     0211                     	;# 
   523     0212                     	;# 
   524     0212                     	;# 
   525     0213                     	;# 
   526     0213                     	;# 
   527     0214                     	;# 
   528     0214                     	;# 
   529     0215                     	;# 
   530     0215                     	;# 
   531     0215                     	;# 
   532     0216                     	;# 
   533     0216                     	;# 
   534     0217                     	;# 
   535     0217                     	;# 
   536     0391                     	;# 
   537     0392                     	;# 
   538     0393                     	;# 
   539     0394                     	;# 
   540     0395                     	;# 
   541     0396                     	;# 
   542     0498                     	;# 
   543     0498                     	;# 
   544     0499                     	;# 
   545     049A                     	;# 
   546     049B                     	;# 
   547     049B                     	;# 
   548     049C                     	;# 
   549     049D                     	;# 
   550     049E                     	;# 
   551     049F                     	;# 
   552     0611                     	;# 
   553     0612                     	;# 
   554     0613                     	;# 
   555     0613                     	;# 
   556     0614                     	;# 
   557     0615                     	;# 
   558     0616                     	;# 
   559     0616                     	;# 
   560     0617                     	;# 
   561     0618                     	;# 
   562     0619                     	;# 
   563     0619                     	;# 
   564     061A                     	;# 
   565     061B                     	;# 
   566     061C                     	;# 
   567     061C                     	;# 
   568     0691                     	;# 
   569     0692                     	;# 
   570     0693                     	;# 
   571     0694                     	;# 
   572     0695                     	;# 
   573     0F0F                     	;# 
   574     0F10                     	;# 
   575     0F11                     	;# 
   576     0F12                     	;# 
   577     0F13                     	;# 
   578     0F14                     	;# 
   579     0F15                     	;# 
   580     0F16                     	;# 
   581     0F17                     	;# 
   582     0F18                     	;# 
   583     0F19                     	;# 
   584     0F1A                     	;# 
   585     0F1B                     	;# 
   586     0F1C                     	;# 
   587     0F1D                     	;# 
   588     0F1E                     	;# 
   589     0F1F                     	;# 
   590     0F20                     	;# 
   591     0F21                     	;# 
   592     0F22                     	;# 
   593     0F23                     	;# 
   594     0F24                     	;# 
   595     0F25                     	;# 
   596     0F26                     	;# 
   597     0F27                     	;# 
   598     0F28                     	;# 
   599     0F29                     	;# 
   600     0F2A                     	;# 
   601     0F2B                     	;# 
   602     0F2C                     	;# 
   603     0F2D                     	;# 
   604     0F2E                     	;# 
   605     0F2F                     	;# 
   606     0F8C                     	;# 
   607     0F8D                     	;# 
   608     0F91                     	;# 
   609     0F95                     	;# 
   610     0F96                     	;# 
   611     0F97                     	;# 
   612     0F9C                     	;# 
   613     0F9D                     	;# 
   614     0F9E                     	;# 
   615     0FE3                     	;# 
   616     0FE4                     	;# 
   617     0FE5                     	;# 
   618     0FE6                     	;# 
   619     0FE7                     	;# 
   620     0FE8                     	;# 
   621     0FE9                     	;# 
   622     0FEA                     	;# 
   623     0FEB                     	;# 
   624     0FED                     	;# 
   625     0FEE                     	;# 
   626     0FEF                     	;# 
   627     0000                     	;# 
   628     0001                     	;# 
   629     0002                     	;# 
   630     0003                     	;# 
   631     0004                     	;# 
   632     0005                     	;# 
   633     0006                     	;# 
   634     0007                     	;# 
   635     0008                     	;# 
   636     0009                     	;# 
   637     000A                     	;# 
   638     000B                     	;# 
   639     000C                     	;# 
   640     000D                     	;# 
   641     000E                     	;# 
   642     0011                     	;# 
   643     0012                     	;# 
   644     0013                     	;# 
   645     0015                     	;# 
   646     0016                     	;# 
   647     0016                     	;# 
   648     0017                     	;# 
   649     0018                     	;# 
   650     0019                     	;# 
   651     001A                     	;# 
   652     001B                     	;# 
   653     001C                     	;# 
   654     008C                     	;# 
   655     008D                     	;# 
   656     008E                     	;# 
   657     0091                     	;# 
   658     0092                     	;# 
   659     0093                     	;# 
   660     0095                     	;# 
   661     0096                     	;# 
   662     0097                     	;# 
   663     0099                     	;# 
   664     009A                     	;# 
   665     009B                     	;# 
   666     009B                     	;# 
   667     009C                     	;# 
   668     009D                     	;# 
   669     009E                     	;# 
   670     009F                     	;# 
   671     010C                     	;# 
   672     010D                     	;# 
   673     010E                     	;# 
   674     0111                     	;# 
   675     0112                     	;# 
   676     0113                     	;# 
   677     0114                     	;# 
   678     0115                     	;# 
   679     0116                     	;# 
   680     0117                     	;# 
   681     0118                     	;# 
   682     0119                     	;# 
   683     011D                     	;# 
   684     018C                     	;# 
   685     018D                     	;# 
   686     018E                     	;# 
   687     0191                     	;# 
   688     0191                     	;# 
   689     0192                     	;# 
   690     0193                     	;# 
   691     0193                     	;# 
   692     0194                     	;# 
   693     0195                     	;# 
   694     0196                     	;# 
   695     0199                     	;# 
   696     019A                     	;# 
   697     019B                     	;# 
   698     019B                     	;# 
   699     019C                     	;# 
   700     019D                     	;# 
   701     019E                     	;# 
   702     019F                     	;# 
   703     020C                     	;# 
   704     020D                     	;# 
   705     0211                     	;# 
   706     0211                     	;# 
   707     0212                     	;# 
   708     0212                     	;# 
   709     0213                     	;# 
   710     0213                     	;# 
   711     0214                     	;# 
   712     0214                     	;# 
   713     0215                     	;# 
   714     0215                     	;# 
   715     0215                     	;# 
   716     0216                     	;# 
   717     0216                     	;# 
   718     0217                     	;# 
   719     0217                     	;# 
   720     0391                     	;# 
   721     0392                     	;# 
   722     0393                     	;# 
   723     0394                     	;# 
   724     0395                     	;# 
   725     0396                     	;# 
   726     0498                     	;# 
   727     0498                     	;# 
   728     0499                     	;# 
   729     049A                     	;# 
   730     049B                     	;# 
   731     049B                     	;# 
   732     049C                     	;# 
   733     049D                     	;# 
   734     049E                     	;# 
   735     049F                     	;# 
   736     0611                     	;# 
   737     0612                     	;# 
   738     0613                     	;# 
   739     0613                     	;# 
   740     0614                     	;# 
   741     0615                     	;# 
   742     0616                     	;# 
   743     0616                     	;# 
   744     0617                     	;# 
   745     0618                     	;# 
   746     0619                     	;# 
   747     0619                     	;# 
   748     061A                     	;# 
   749     061B                     	;# 
   750     061C                     	;# 
   751     061C                     	;# 
   752     0691                     	;# 
   753     0692                     	;# 
   754     0693                     	;# 
   755     0694                     	;# 
   756     0695                     	;# 
   757     0F0F                     	;# 
   758     0F10                     	;# 
   759     0F11                     	;# 
   760     0F12                     	;# 
   761     0F13                     	;# 
   762     0F14                     	;# 
   763     0F15                     	;# 
   764     0F16                     	;# 
   765     0F17                     	;# 
   766     0F18                     	;# 
   767     0F19                     	;# 
   768     0F1A                     	;# 
   769     0F1B                     	;# 
   770     0F1C                     	;# 
   771     0F1D                     	;# 
   772     0F1E                     	;# 
   773     0F1F                     	;# 
   774     0F20                     	;# 
   775     0F21                     	;# 
   776     0F22                     	;# 
   777     0F23                     	;# 
   778     0F24                     	;# 
   779     0F25                     	;# 
   780     0F26                     	;# 
   781     0F27                     	;# 
   782     0F28                     	;# 
   783     0F29                     	;# 
   784     0F2A                     	;# 
   785     0F2B                     	;# 
   786     0F2C                     	;# 
   787     0F2D                     	;# 
   788     0F2E                     	;# 
   789     0F2F                     	;# 
   790     0F8C                     	;# 
   791     0F8D                     	;# 
   792     0F91                     	;# 
   793     0F95                     	;# 
   794     0F96                     	;# 
   795     0F97                     	;# 
   796     0F9C                     	;# 
   797     0F9D                     	;# 
   798     0F9E                     	;# 
   799     0FE3                     	;# 
   800     0FE4                     	;# 
   801     0FE5                     	;# 
   802     0FE6                     	;# 
   803     0FE7                     	;# 
   804     0FE8                     	;# 
   805     0FE9                     	;# 
   806     0FEA                     	;# 
   807     0FEB                     	;# 
   808     0FED                     	;# 
   809     0FEE                     	;# 
   810     0FEF                     	;# 
   811     0000                     	;# 
   812     0001                     	;# 
   813     0002                     	;# 
   814     0003                     	;# 
   815     0004                     	;# 
   816     0005                     	;# 
   817     0006                     	;# 
   818     0007                     	;# 
   819     0008                     	;# 
   820     0009                     	;# 
   821     000A                     	;# 
   822     000B                     	;# 
   823     000C                     	;# 
   824     000D                     	;# 
   825     000E                     	;# 
   826     0011                     	;# 
   827     0012                     	;# 
   828     0013                     	;# 
   829     0015                     	;# 
   830     0016                     	;# 
   831     0016                     	;# 
   832     0017                     	;# 
   833     0018                     	;# 
   834     0019                     	;# 
   835     001A                     	;# 
   836     001B                     	;# 
   837     001C                     	;# 
   838     008C                     	;# 
   839     008D                     	;# 
   840     008E                     	;# 
   841     0091                     	;# 
   842     0092                     	;# 
   843     0093                     	;# 
   844     0095                     	;# 
   845     0096                     	;# 
   846     0097                     	;# 
   847     0099                     	;# 
   848     009A                     	;# 
   849     009B                     	;# 
   850     009B                     	;# 
   851     009C                     	;# 
   852     009D                     	;# 
   853     009E                     	;# 
   854     009F                     	;# 
   855     010C                     	;# 
   856     010D                     	;# 
   857     010E                     	;# 
   858     0111                     	;# 
   859     0112                     	;# 
   860     0113                     	;# 
   861     0114                     	;# 
   862     0115                     	;# 
   863     0116                     	;# 
   864     0117                     	;# 
   865     0118                     	;# 
   866     0119                     	;# 
   867     011D                     	;# 
   868     018C                     	;# 
   869     018D                     	;# 
   870     018E                     	;# 
   871     0191                     	;# 
   872     0191                     	;# 
   873     0192                     	;# 
   874     0193                     	;# 
   875     0193                     	;# 
   876     0194                     	;# 
   877     0195                     	;# 
   878     0196                     	;# 
   879     0199                     	;# 
   880     019A                     	;# 
   881     019B                     	;# 
   882     019B                     	;# 
   883     019C                     	;# 
   884     019D                     	;# 
   885     019E                     	;# 
   886     019F                     	;# 
   887     020C                     	;# 
   888     020D                     	;# 
   889     0211                     	;# 
   890     0211                     	;# 
   891     0212                     	;# 
   892     0212                     	;# 
   893     0213                     	;# 
   894     0213                     	;# 
   895     0214                     	;# 
   896     0214                     	;# 
   897     0215                     	;# 
   898     0215                     	;# 
   899     0215                     	;# 
   900     0216                     	;# 
   901     0216                     	;# 
   902     0217                     	;# 
   903     0217                     	;# 
   904     0391                     	;# 
   905     0392                     	;# 
   906     0393                     	;# 
   907     0394                     	;# 
   908     0395                     	;# 
   909     0396                     	;# 
   910     0498                     	;# 
   911     0498                     	;# 
   912     0499                     	;# 
   913     049A                     	;# 
   914     049B                     	;# 
   915     049B                     	;# 
   916     049C                     	;# 
   917     049D                     	;# 
   918     049E                     	;# 
   919     049F                     	;# 
   920     0611                     	;# 
   921     0612                     	;# 
   922     0613                     	;# 
   923     0613                     	;# 
   924     0614                     	;# 
   925     0615                     	;# 
   926     0616                     	;# 
   927     0616                     	;# 
   928     0617                     	;# 
   929     0618                     	;# 
   930     0619                     	;# 
   931     0619                     	;# 
   932     061A                     	;# 
   933     061B                     	;# 
   934     061C                     	;# 
   935     061C                     	;# 
   936     0691                     	;# 
   937     0692                     	;# 
   938     0693                     	;# 
   939     0694                     	;# 
   940     0695                     	;# 
   941     0F0F                     	;# 
   942     0F10                     	;# 
   943     0F11                     	;# 
   944     0F12                     	;# 
   945     0F13                     	;# 
   946     0F14                     	;# 
   947     0F15                     	;# 
   948     0F16                     	;# 
   949     0F17                     	;# 
   950     0F18                     	;# 
   951     0F19                     	;# 
   952     0F1A                     	;# 
   953     0F1B                     	;# 
   954     0F1C                     	;# 
   955     0F1D                     	;# 
   956     0F1E                     	;# 
   957     0F1F                     	;# 
   958     0F20                     	;# 
   959     0F21                     	;# 
   960     0F22                     	;# 
   961     0F23                     	;# 
   962     0F24                     	;# 
   963     0F25                     	;# 
   964     0F26                     	;# 
   965     0F27                     	;# 
   966     0F28                     	;# 
   967     0F29                     	;# 
   968     0F2A                     	;# 
   969     0F2B                     	;# 
   970     0F2C                     	;# 
   971     0F2D                     	;# 
   972     0F2E                     	;# 
   973     0F2F                     	;# 
   974     0F8C                     	;# 
   975     0F8D                     	;# 
   976     0F91                     	;# 
   977     0F95                     	;# 
   978     0F96                     	;# 
   979     0F97                     	;# 
   980     0F9C                     	;# 
   981     0F9D                     	;# 
   982     0F9E                     	;# 
   983     0FE3                     	;# 
   984     0FE4                     	;# 
   985     0FE5                     	;# 
   986     0FE6                     	;# 
   987     0FE7                     	;# 
   988     0FE8                     	;# 
   989     0FE9                     	;# 
   990     0FEA                     	;# 
   991     0FEB                     	;# 
   992     0FED                     	;# 
   993     0FEE                     	;# 
   994     0FEF                     	;# 
   995     0000                     	;# 
   996     0001                     	;# 
   997     0002                     	;# 
   998     0003                     	;# 
   999     0004                     	;# 
  1000     0005                     	;# 
  1001     0006                     	;# 
  1002     0007                     	;# 
  1003     0008                     	;# 
  1004     0009                     	;# 
  1005     000A                     	;# 
  1006     000B                     	;# 
  1007     000C                     	;# 
  1008     000D                     	;# 
  1009     000E                     	;# 
  1010     0011                     	;# 
  1011     0012                     	;# 
  1012     0013                     	;# 
  1013     0015                     	;# 
  1014     0016                     	;# 
  1015     0016                     	;# 
  1016     0017                     	;# 
  1017     0018                     	;# 
  1018     0019                     	;# 
  1019     001A                     	;# 
  1020     001B                     	;# 
  1021     001C                     	;# 
  1022     008C                     	;# 
  1023     008D                     	;# 
  1024     008E                     	;# 
  1025     0091                     	;# 
  1026     0092                     	;# 
  1027     0093                     	;# 
  1028     0095                     	;# 
  1029     0096                     	;# 
  1030     0097                     	;# 
  1031     0099                     	;# 
  1032     009A                     	;# 
  1033     009B                     	;# 
  1034     009B                     	;# 
  1035     009C                     	;# 
  1036     009D                     	;# 
  1037     009E                     	;# 
  1038     009F                     	;# 
  1039     010C                     	;# 
  1040     010D                     	;# 
  1041     010E                     	;# 
  1042     0111                     	;# 
  1043     0112                     	;# 
  1044     0113                     	;# 
  1045     0114                     	;# 
  1046     0115                     	;# 
  1047     0116                     	;# 
  1048     0117                     	;# 
  1049     0118                     	;# 
  1050     0119                     	;# 
  1051     011D                     	;# 
  1052     018C                     	;# 
  1053     018D                     	;# 
  1054     018E                     	;# 
  1055     0191                     	;# 
  1056     0191                     	;# 
  1057     0192                     	;# 
  1058     0193                     	;# 
  1059     0193                     	;# 
  1060     0194                     	;# 
  1061     0195                     	;# 
  1062     0196                     	;# 
  1063     0199                     	;# 
  1064     019A                     	;# 
  1065     019B                     	;# 
  1066     019B                     	;# 
  1067     019C                     	;# 
  1068     019D                     	;# 
  1069     019E                     	;# 
  1070     019F                     	;# 
  1071     020C                     	;# 
  1072     020D                     	;# 
  1073     0211                     	;# 
  1074     0211                     	;# 
  1075     0212                     	;# 
  1076     0212                     	;# 
  1077     0213                     	;# 
  1078     0213                     	;# 
  1079     0214                     	;# 
  1080     0214                     	;# 
  1081     0215                     	;# 
  1082     0215                     	;# 
  1083     0215                     	;# 
  1084     0216                     	;# 
  1085     0216                     	;# 
  1086     0217                     	;# 
  1087     0217                     	;# 
  1088     0391                     	;# 
  1089     0392                     	;# 
  1090     0393                     	;# 
  1091     0394                     	;# 
  1092     0395                     	;# 
  1093     0396                     	;# 
  1094     0498                     	;# 
  1095     0498                     	;# 
  1096     0499                     	;# 
  1097     049A                     	;# 
  1098     049B                     	;# 
  1099     049B                     	;# 
  1100     049C                     	;# 
  1101     049D                     	;# 
  1102     049E                     	;# 
  1103     049F                     	;# 
  1104     0611                     	;# 
  1105     0612                     	;# 
  1106     0613                     	;# 
  1107     0613                     	;# 
  1108     0614                     	;# 
  1109     0615                     	;# 
  1110     0616                     	;# 
  1111     0616                     	;# 
  1112     0617                     	;# 
  1113     0618                     	;# 
  1114     0619                     	;# 
  1115     0619                     	;# 
  1116     061A                     	;# 
  1117     061B                     	;# 
  1118     061C                     	;# 
  1119     061C                     	;# 
  1120     0691                     	;# 
  1121     0692                     	;# 
  1122     0693                     	;# 
  1123     0694                     	;# 
  1124     0695                     	;# 
  1125     0F0F                     	;# 
  1126     0F10                     	;# 
  1127     0F11                     	;# 
  1128     0F12                     	;# 
  1129     0F13                     	;# 
  1130     0F14                     	;# 
  1131     0F15                     	;# 
  1132     0F16                     	;# 
  1133     0F17                     	;# 
  1134     0F18                     	;# 
  1135     0F19                     	;# 
  1136     0F1A                     	;# 
  1137     0F1B                     	;# 
  1138     0F1C                     	;# 
  1139     0F1D                     	;# 
  1140     0F1E                     	;# 
  1141     0F1F                     	;# 
  1142     0F20                     	;# 
  1143     0F21                     	;# 
  1144     0F22                     	;# 
  1145     0F23                     	;# 
  1146     0F24                     	;# 
  1147     0F25                     	;# 
  1148     0F26                     	;# 
  1149     0F27                     	;# 
  1150     0F28                     	;# 
  1151     0F29                     	;# 
  1152     0F2A                     	;# 
  1153     0F2B                     	;# 
  1154     0F2C                     	;# 
  1155     0F2D                     	;# 
  1156     0F2E                     	;# 
  1157     0F2F                     	;# 
  1158     0F8C                     	;# 
  1159     0F8D                     	;# 
  1160     0F91                     	;# 
  1161     0F95                     	;# 
  1162     0F96                     	;# 
  1163     0F97                     	;# 
  1164     0F9C                     	;# 
  1165     0F9D                     	;# 
  1166     0F9E                     	;# 
  1167     0FE3                     	;# 
  1168     0FE4                     	;# 
  1169     0FE5                     	;# 
  1170     0FE6                     	;# 
  1171     0FE7                     	;# 
  1172     0FE8                     	;# 
  1173     0FE9                     	;# 
  1174     0FEA                     	;# 
  1175     0FEB                     	;# 
  1176     0FED                     	;# 
  1177     0FEE                     	;# 
  1178     0FEF                     	;# 
  1179                           
  1180 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1181     0000                     
  1182 ;; Function _TMR1_Start is unused but had its address taken
  1183     0000                     
  1184 ;; Function _TMR1_Stop is unused but had its address taken
  1185     0000                     
  1186 ;; Function _TMR1_PeriodCountSet is unused but had its address taken
  1187     0000                     
  1188                           	psect	idataBANK0
  1189     07FF                     __pidataBANK0:
  1190                           
  1191                           ;initializer for _RA0Value
  1192     07FF  3401               	retlw	1
  1193                           
  1194                           	psect	stringtext1
  1195     07DB                     __pstringtext1:
  1196     07DB                     _tmr1:
  1197     07DB  348E               	retlw	low _TMR1_Initialize
  1198     07DC  3407               	retlw	high _TMR1_Initialize
  1199     07DD  3400               	retlw	0
  1200     07DE  3400               	retlw	0
  1201     07DF  3400               	retlw	0
  1202     07E0  3400               	retlw	0
  1203     07E1  3400               	retlw	0
  1204     07E2  3400               	retlw	0
  1205     07E3  34F9               	retlw	low _TMR1_OverflowCallbackRegister
  1206     07E4  3407               	retlw	high _TMR1_OverflowCallbackRegister
  1207     07E5  3400               	retlw	0
  1208     07E6  3400               	retlw	0
  1209     07E7                     __end_of_tmr1:
  1210                           
  1211                           	psect	nvBANK0
  1212     0058                     __pnvBANK0:
  1213     0058                     _TMR1_OverflowCallback:
  1214     0058                     	ds	2
  1215     005A                     _timer1ReloadVal:
  1216     005A                     	ds	2
  1217     005C                     _INT_InterruptHandler:
  1218     005C                     	ds	2
  1219     000D                     _PORTBbits	set	13
  1220     000E                     _PORTCbits	set	14
  1221     000C                     _PORTAbits	set	12
  1222     0019                     _T1GCONbits	set	25
  1223     0018                     _T1CONbits	set	24
  1224     0018                     _T1CON	set	24
  1225     0016                     _TMR1L	set	22
  1226     0017                     _TMR1H	set	23
  1227     0019                     _T1GCON	set	25
  1228     0011                     _PIR1bits	set	17
  1229     000B                     _INTCONbits	set	11
  1230     0060                     _RA0	set	96
  1231     0091                     _PIE1bits	set	145
  1232     0095                     _OPTION_REGbits	set	149
  1233     008E                     _TRISC	set	142
  1234     008D                     _TRISB	set	141
  1235     008C                     _TRISA	set	140
  1236     0099                     _OSCCON	set	153
  1237     010E                     _LATC	set	270
  1238     010D                     _LATB	set	269
  1239     010C                     _LATA	set	268
  1240     0116                     _BORCON	set	278
  1241     018E                     _ANSELC	set	398
  1242     018D                     _ANSELB	set	397
  1243     018C                     _ANSELA	set	396
  1244     020D                     _WPUB	set	525
  1245     020C                     _WPUA	set	524
  1246     0396                     _IOCBF	set	918
  1247     0395                     _IOCBN	set	917
  1248     0394                     _IOCBP	set	916
  1249     0393                     _IOCAF	set	915
  1250     0392                     _IOCAN	set	914
  1251     0391                     _IOCAP	set	913
  1252                           
  1253                           	psect	cinit
  1254     001B                     start_initialization:	
  1255                           ; #config settings
  1256                           
  1257     001B                     __initialization:
  1258                           
  1259                           ; Initialize objects allocated to BANK0
  1260     001B  3187  27FF  3180   	fcall	__pidataBANK0	;fetch initializer
  1261     001E  00DE               	movwf	__pdataBANK0& (0+127)
  1262                           
  1263                           ; Clear objects allocated to BANK0
  1264     001F  303F               	movlw	low __pbssBANK0
  1265     0020  0084               	movwf	4
  1266     0021  3000               	movlw	high __pbssBANK0
  1267     0022  0085               	movwf	5
  1268     0023  3019               	movlw	25
  1269     0024  3187  27F3  3180   	fcall	clear_ram0
  1270     0027                     end_of_initialization:	
  1271                           ;End of C runtime variable initialization code
  1272                           
  1273     0027                     __end_of__initialization:
  1274     0027  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1275     0028  0020               	movlb	0
  1276     0029  3187  2F0B         	ljmp	_main	;jump to C main() function
  1277                           
  1278                           	psect	bssBANK0
  1279     003F                     __pbssBANK0:
  1280     003F                     _TMR1_InterruptHandler:
  1281     003F                     	ds	2
  1282     0041                     _counter:
  1283     0041                     	ds	1
  1284     0042                     _toggle:
  1285     0042                     	ds	1
  1286     0043                     _hundred:
  1287     0043                     	ds	7
  1288     004A                     _ten:
  1289     004A                     	ds	7
  1290     0051                     _one:
  1291     0051                     	ds	7
  1292                           
  1293                           	psect	dataBANK0
  1294     005E                     __pdataBANK0:
  1295     005E                     _RA0Value:
  1296     005E                     	ds	1
  1297                           
  1298                           	psect	clrtext
  1299     07F3                     clear_ram0:	
  1300                           ;	Called with FSR0 containing the base address, and
  1301                           ;	WREG with the size to clear
  1302                           
  1303     07F3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1304     07F4                     clrloop0:
  1305     07F4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1306     07F5  3101               	addfsr 0,1
  1307     07F6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1308     07F7  2FF4               	goto	clrloop0	;have we reached the end yet?
  1309     07F8  3400               	retlw	0	;all done for this memory range, return
  1310                           
  1311                           	psect	cstackBANK1
  1312     00A0                     __pcstackBANK1:
  1313     00A0                     ___awmod@counter:
  1314                           
  1315                           ; 1 bytes @ 0x0
  1316     00A0                     	ds	1
  1317     00A1                     ___awmod@sign:
  1318                           
  1319                           ; 1 bytes @ 0x1
  1320     00A1                     	ds	1
  1321     00A2                     ?_Display:
  1322     00A2                     Display@a:	
  1323                           ; 1 bytes @ 0x2
  1324                           
  1325                           
  1326                           ; 2 bytes @ 0x2
  1327     00A2                     	ds	2
  1328     00A4                     ??_Display:
  1329                           
  1330                           ; 1 bytes @ 0x4
  1331     00A4                     	ds	3
  1332     00A7                     Display@ones:
  1333                           
  1334                           ; 2 bytes @ 0x7
  1335     00A7                     	ds	2
  1336     00A9                     Display@tens:
  1337                           
  1338                           ; 2 bytes @ 0x9
  1339     00A9                     	ds	2
  1340     00AB                     Display@hundreds:
  1341                           
  1342                           ; 2 bytes @ 0xB
  1343     00AB                     	ds	2
  1344     00AD                     ??_main:
  1345                           
  1346                           ; 1 bytes @ 0xD
  1347     00AD                     	ds	2
  1348                           
  1349                           	psect	cstackCOMMON
  1350     0070                     __pcstackCOMMON:
  1351     0070                     ?_TMR1_Initialize:
  1352     0070                     ?_INTERRUPT_Initialize:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355     0070                     ?_TMR1_OverflowISR:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358     0070                     ?_TMR1_DefaultOverflowCallback:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361     0070                     ??_TMR1_DefaultOverflowCallback:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364     0070                     ?_CLOCK_Initialize:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367     0070                     ?_PIN_MANAGER_Initialize:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370     0070                     ?_SYSTEM_Initialize:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373     0070                     ?_INTERRUPT_InterruptManager:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376     0070                     ?_TMR1_Write:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379     0070                     ?_ClearDigit:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382     0070                     ?_Tmr1CallBack:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385     0070                     ?i1_SetSegments:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388     0070                     ?_main:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391     0070                     ?i1___awdiv:	
  1392                           ; 2 bytes @ 0x0
  1393                           
  1394     0070                     TMR1_Write@timerVal:	
  1395                           ; 2 bytes @ 0x0
  1396                           
  1397     0070                     i1SetSegments@a:	
  1398                           ; 2 bytes @ 0x0
  1399                           
  1400     0070                     i1___awdiv@divisor:	
  1401                           ; 2 bytes @ 0x0
  1402                           
  1403                           
  1404                           ; 2 bytes @ 0x0
  1405     0070                     	ds	2
  1406     0072                     ??_TMR1_Write:
  1407     0072                     i1SetSegments@blank:	
  1408                           ; 1 bytes @ 0x2
  1409                           
  1410     0072                     i1___awdiv@dividend:	
  1411                           ; 1 bytes @ 0x2
  1412                           
  1413                           
  1414                           ; 2 bytes @ 0x2
  1415     0072                     	ds	1
  1416     0073                     ??i1_SetSegments:
  1417     0073                     i1SetSegments@digit:	
  1418                           ; 1 bytes @ 0x3
  1419                           
  1420                           
  1421                           ; 1 bytes @ 0x3
  1422     0073                     	ds	1
  1423     0074                     ??i1___awdiv:
  1424                           
  1425                           ; 1 bytes @ 0x4
  1426     0074                     	ds	1
  1427     0075                     i1___awdiv@counter:
  1428                           
  1429                           ; 1 bytes @ 0x5
  1430     0075                     	ds	1
  1431     0076                     i1___awdiv@sign:
  1432                           
  1433                           ; 1 bytes @ 0x6
  1434     0076                     	ds	1
  1435     0077                     i1___awdiv@quotient:
  1436                           
  1437                           ; 2 bytes @ 0x7
  1438     0077                     	ds	2
  1439     0079                     ?i1___awmod:
  1440     0079                     i1___awmod@divisor:	
  1441                           ; 2 bytes @ 0x9
  1442                           
  1443                           
  1444                           ; 2 bytes @ 0x9
  1445     0079                     	ds	2
  1446     007B                     i1___awmod@dividend:
  1447                           
  1448                           ; 2 bytes @ 0xB
  1449     007B                     	ds	2
  1450     007D                     ??i1___awmod:
  1451                           
  1452                           ; 1 bytes @ 0xD
  1453     007D                     	ds	1
  1454     007E                     ??_TMR1_OverflowISR:
  1455     007E                     ??_INTERRUPT_InterruptManager:	
  1456                           ; 1 bytes @ 0xE
  1457                           
  1458                           
  1459                           	psect	cstackBANK0
  1460     0020                     __pcstackBANK0:	
  1461                           ; 1 bytes @ 0xE
  1462                           
  1463     0020                     i1___awmod@counter:
  1464                           
  1465                           ; 1 bytes @ 0x0
  1466     0020                     	ds	1
  1467     0021                     i1___awmod@sign:
  1468                           
  1469                           ; 1 bytes @ 0x1
  1470     0021                     	ds	1
  1471     0022                     ?i1_Display:
  1472     0022                     i1Display@a:	
  1473                           ; 1 bytes @ 0x2
  1474                           
  1475                           
  1476                           ; 2 bytes @ 0x2
  1477     0022                     	ds	2
  1478     0024                     ??i1_Display:
  1479                           
  1480                           ; 1 bytes @ 0x4
  1481     0024                     	ds	3
  1482     0027                     i1Display@ones:
  1483                           
  1484                           ; 2 bytes @ 0x7
  1485     0027                     	ds	2
  1486     0029                     i1Display@tens:
  1487                           
  1488                           ; 2 bytes @ 0x9
  1489     0029                     	ds	2
  1490     002B                     i1Display@hundreds:
  1491                           
  1492                           ; 2 bytes @ 0xB
  1493     002B                     	ds	2
  1494     002D                     ??_Tmr1CallBack:
  1495                           
  1496                           ; 1 bytes @ 0xD
  1497     002D                     	ds	3
  1498     0030                     _Tmr1CallBack$1085:
  1499                           
  1500                           ; 1 bytes @ 0x10
  1501     0030                     	ds	1
  1502     0031                     ?_INT_SetInterruptHandler:
  1503     0031                     ?_TMR1_OverflowCallbackRegister:	
  1504                           ; 1 bytes @ 0x11
  1505                           
  1506     0031                     ??_CLOCK_Initialize:	
  1507                           ; 1 bytes @ 0x11
  1508                           
  1509     0031                     ??_PIN_MANAGER_Initialize:	
  1510                           ; 1 bytes @ 0x11
  1511                           
  1512     0031                     ??_ClearDigit:	
  1513                           ; 1 bytes @ 0x11
  1514                           
  1515     0031                     ?_SetSegments:	
  1516                           ; 1 bytes @ 0x11
  1517                           
  1518     0031                     ?___awdiv:	
  1519                           ; 1 bytes @ 0x11
  1520                           
  1521     0031                     ClearDigit@digit:	
  1522                           ; 2 bytes @ 0x11
  1523                           
  1524     0031                     INT_SetInterruptHandler@InterruptHandler:	
  1525                           ; 1 bytes @ 0x11
  1526                           
  1527     0031                     TMR1_OverflowCallbackRegister@CallbackHandler:	
  1528                           ; 2 bytes @ 0x11
  1529                           
  1530     0031                     SetSegments@a:	
  1531                           ; 2 bytes @ 0x11
  1532                           
  1533     0031                     ___awdiv@divisor:	
  1534                           ; 2 bytes @ 0x11
  1535                           
  1536                           
  1537                           ; 2 bytes @ 0x11
  1538     0031                     	ds	2
  1539     0033                     ??_TMR1_Initialize:
  1540     0033                     ??_INTERRUPT_Initialize:	
  1541                           ; 1 bytes @ 0x13
  1542                           
  1543     0033                     ??_INT_SetInterruptHandler:	
  1544                           ; 1 bytes @ 0x13
  1545                           
  1546     0033                     ??_TMR1_OverflowCallbackRegister:	
  1547                           ; 1 bytes @ 0x13
  1548                           
  1549     0033                     ??_SYSTEM_Initialize:	
  1550                           ; 1 bytes @ 0x13
  1551                           
  1552     0033                     SetSegments@blank:	
  1553                           ; 1 bytes @ 0x13
  1554                           
  1555     0033                     ___awdiv@dividend:	
  1556                           ; 1 bytes @ 0x13
  1557                           
  1558                           
  1559                           ; 2 bytes @ 0x13
  1560     0033                     	ds	1
  1561     0034                     ??_SetSegments:
  1562     0034                     SetSegments@digit:	
  1563                           ; 1 bytes @ 0x14
  1564                           
  1565                           
  1566                           ; 1 bytes @ 0x14
  1567     0034                     	ds	1
  1568     0035                     ??___awdiv:
  1569                           
  1570                           ; 1 bytes @ 0x15
  1571     0035                     	ds	1
  1572     0036                     ___awdiv@counter:
  1573                           
  1574                           ; 1 bytes @ 0x16
  1575     0036                     	ds	1
  1576     0037                     ___awdiv@sign:
  1577                           
  1578                           ; 1 bytes @ 0x17
  1579     0037                     	ds	1
  1580     0038                     ___awdiv@quotient:
  1581                           
  1582                           ; 2 bytes @ 0x18
  1583     0038                     	ds	2
  1584     003A                     ?___awmod:
  1585     003A                     ___awmod@divisor:	
  1586                           ; 2 bytes @ 0x1A
  1587                           
  1588                           
  1589                           ; 2 bytes @ 0x1A
  1590     003A                     	ds	2
  1591     003C                     ___awmod@dividend:
  1592                           
  1593                           ; 2 bytes @ 0x1C
  1594     003C                     	ds	2
  1595     003E                     ??___awmod:
  1596                           
  1597                           ; 1 bytes @ 0x1E
  1598     003E                     	ds	1
  1599                           
  1600                           	psect	maintext
  1601     070B                     __pmaintext:	
  1602 ;;
  1603 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1604 ;;
  1605 ;; *************** function _main *****************
  1606 ;; Defined at:
  1607 ;;		line 253 in file "main.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  2  247[None  ] int 
  1614 ;; Registers used:
  1615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : B1F/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1621 ;;      Params:         0       0       0       0       0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0       0       0       0
  1623 ;;      Temps:          0       0       2       0       0       0       0       0
  1624 ;;      Totals:         0       0       2       0       0       0       0       0
  1625 ;;Total ram usage:        2 bytes
  1626 ;; Hardware stack levels required when called: 8
  1627 ;; This function calls:
  1628 ;;		_ClearDigit
  1629 ;;		_Display
  1630 ;;		_SYSTEM_Initialize
  1631 ;;		_TMR1_OverflowCallbackRegister
  1632 ;; This function is called by:
  1633 ;;		Startup code after reset
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637     070B                     _main:	
  1638                           ;psect for function _main
  1639                           
  1640     070B                     l2449:	
  1641                           ;incstack = 0
  1642                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1643                           
  1644                           
  1645                           ;main.c: 254:     SYSTEM_Initialize();
  1646     070B  3187  27CE  3187   	fcall	_SYSTEM_Initialize
  1647     070E                     l2451:
  1648                           
  1649                           ;main.c: 256:     PORTAbits.RA5 = 1;
  1650     070E  0020               	movlb	0	; select bank0
  1651     070F  168C               	bsf	12,5	;volatile
  1652     0710                     l2453:
  1653                           
  1654                           ;main.c: 258:     ClearDigit(&one);
  1655     0710  3051               	movlw	(low (_one| 0))& (0+255)
  1656     0711  3187  274E  3187   	fcall	_ClearDigit
  1657     0714                     l2455:
  1658                           
  1659                           ;main.c: 259:     ClearDigit(&ten);
  1660     0714  304A               	movlw	(low (_ten| 0))& (0+255)
  1661     0715  3187  274E  3187   	fcall	_ClearDigit
  1662     0718                     l2457:
  1663                           
  1664                           ;main.c: 260:     ClearDigit(&hundred);
  1665     0718  3043               	movlw	(low (_hundred| 0))& (0+255)
  1666     0719  3187  274E  3187   	fcall	_ClearDigit
  1667     071C                     l2459:
  1668                           
  1669                           ;main.c: 262:     one.b = 1;
  1670     071C  0020               	movlb	0	; select bank0
  1671     071D  01D2               	clrf	_one+1
  1672     071E  0AD2               	incf	_one+1,f
  1673     071F                     l2461:
  1674                           
  1675                           ;main.c: 263:     one.c = 1;
  1676     071F  01D3               	clrf	_one+2
  1677     0720  0AD3               	incf	_one+2,f
  1678     0721                     l2463:
  1679                           
  1680                           ;main.c: 269:     TMR1_OverflowCallbackRegister(Tmr1CallBack);
  1681     0721  30D2               	movlw	low _Tmr1CallBack
  1682     0722  00B1               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler
  1683     0723  3003               	movlw	high _Tmr1CallBack
  1684     0724  00B2               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler+1
  1685     0725  3187  27F9  3187   	fcall	_TMR1_OverflowCallbackRegister
  1686     0728                     l2465:
  1687                           
  1688                           ;main.c: 272:     (INTCONbits.GIE = 1);
  1689     0728  178B               	bsf	11,7	;volatile
  1690     0729                     l2467:
  1691                           
  1692                           ;main.c: 278:     (INTCONbits.PEIE = 1);
  1693     0729  170B               	bsf	11,6	;volatile
  1694     072A                     l2469:
  1695                           
  1696                           ;main.c: 295:     Display(counter);
  1697     072A  0020               	movlb	0	; select bank0
  1698     072B  0841               	movf	_counter,w
  1699     072C  0021               	movlb	1	; select bank1
  1700     072D  00AD               	movwf	??_main^(0+128)
  1701     072E  01AE               	clrf	(??_main^(0+128)+1)
  1702     072F  082D               	movf	??_main^(0+128),w
  1703     0730  00A2               	movwf	Display@a^(0+128)
  1704     0731  082E               	movf	(??_main+1)^(0+128),w
  1705     0732  00A3               	movwf	(Display@a+1)^(0+128)
  1706     0733  3184  24A0  3187   	fcall	_Display
  1707     0736                     l2471:
  1708                           
  1709                           ;main.c: 298:     {;main.c: 299:         if (!RA0)
  1710     0736  0020               	movlb	0	; select bank0
  1711     0737  180C               	btfsc	12,0	;volatile
  1712     0738  2F3A               	goto	u1491
  1713     0739  2F3B               	goto	u1490
  1714     073A                     u1491:
  1715     073A  2F36               	goto	l2471
  1716     073B                     u1490:
  1717     073B                     l2473:
  1718                           
  1719                           ;main.c: 300:         {;main.c: 301:           RA0Value = 1;
  1720     073B  01DE               	clrf	_RA0Value
  1721     073C  0ADE               	incf	_RA0Value,f
  1722                           
  1723                           ;main.c: 302:           while (!RA0)
  1724     073D  2F46               	goto	l2477
  1725     073E                     l2475:
  1726                           
  1727                           ;main.c: 303:           {;main.c: 304:               _delay((unsigned long)((30)*(160000
      +                          00/4000.0)));
  1728     073E  309C               	movlw	156
  1729     073F  0021               	movlb	1	; select bank1
  1730     0740  00AD               	movwf	??_main^(0+128)
  1731     0741  30D7               	movlw	215
  1732     0742                     u1517:
  1733     0742  0B89               	decfsz	9,f
  1734     0743  2F42               	goto	u1517
  1735     0744  0BAD               	decfsz	??_main^(0+128),f
  1736     0745  2F42               	goto	u1517
  1737     0746                     l2477:
  1738                           
  1739                           ;main.c: 302:           while (!RA0)
  1740     0746  0020               	movlb	0	; select bank0
  1741     0747  1C0C               	btfss	12,0	;volatile
  1742     0748  2F4A               	goto	u1501
  1743     0749  2F4B               	goto	u1500
  1744     074A                     u1501:
  1745     074A  2F3E               	goto	l2475
  1746     074B                     u1500:
  1747     074B  2F36               	goto	l2471
  1748     074C  3180  2819         	ljmp	start
  1749     074E                     __end_of_main:
  1750                           
  1751                           	psect	text1
  1752     07CE                     __ptext1:	
  1753 ;; *************** function _SYSTEM_Initialize *****************
  1754 ;; Defined at:
  1755 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, pclath, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1769 ;;      Params:         0       0       0       0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0
  1772 ;;      Totals:         0       0       0       0       0       0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 7
  1776 ;; This function calls:
  1777 ;;		_CLOCK_Initialize
  1778 ;;		_INTERRUPT_Initialize
  1779 ;;		_PIN_MANAGER_Initialize
  1780 ;;		_TMR1_Initialize
  1781 ;; This function is called by:
  1782 ;;		_main
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786     07CE                     _SYSTEM_Initialize:	
  1787                           ;psect for function _SYSTEM_Initialize
  1788                           
  1789     07CE                     l2085:	
  1790                           ;incstack = 0
  1791                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1792                           
  1793                           
  1794                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  1795     07CE  318F  27F4  3187   	fcall	_CLOCK_Initialize
  1796                           
  1797                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  1798     07D1  3187  2772  3187   	fcall	_PIN_MANAGER_Initialize
  1799                           
  1800                           ;mcc_generated_files/system/src/system.c: 43:     TMR1_Initialize();
  1801     07D4  3187  278E  3187   	fcall	_TMR1_Initialize
  1802                           
  1803                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  1804     07D7  3187  27E7  3187   	fcall	_INTERRUPT_Initialize
  1805     07DA                     l62:
  1806     07DA  0008               	return
  1807     07DB                     __end_of_SYSTEM_Initialize:
  1808                           
  1809                           	psect	text2
  1810     078E                     __ptext2:	
  1811 ;; *************** function _TMR1_Initialize *****************
  1812 ;; Defined at:
  1813 ;;		line 57 in file "mcc_generated_files/timer/src/tmr1.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1827 ;;      Params:         0       0       0       0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 6
  1834 ;; This function calls:
  1835 ;;		_TMR1_OverflowCallbackRegister
  1836 ;; This function is called by:
  1837 ;;		_SYSTEM_Initialize
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841     078E                     _TMR1_Initialize:	
  1842                           ;psect for function _TMR1_Initialize
  1843                           
  1844     078E                     l1797:	
  1845                           ;incstack = 0
  1846                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1847                           
  1848                           
  1849                           ;mcc_generated_files/timer/src/tmr1.c: 60:     T1GCON = 0x0;
  1850     078E  0020               	movlb	0	; select bank0
  1851     078F  0199               	clrf	25	;volatile
  1852     0790                     l1799:
  1853                           
  1854                           ;mcc_generated_files/timer/src/tmr1.c: 62:     TMR1H = 0xEC;
  1855     0790  30EC               	movlw	236
  1856     0791  0097               	movwf	23	;volatile
  1857     0792                     l1801:
  1858                           
  1859                           ;mcc_generated_files/timer/src/tmr1.c: 64:     TMR1L = 0x77;
  1860     0792  3077               	movlw	119
  1861     0793  0096               	movwf	22	;volatile
  1862     0794                     l1803:
  1863                           
  1864                           ;mcc_generated_files/timer/src/tmr1.c: 67:     timer1ReloadVal=((uint16_t)TMR1H << 8) | 
      +                          TMR1L;
  1865     0794  0817               	movf	23,w	;volatile
  1866     0795  00DB               	movwf	_timer1ReloadVal+1	;volatile
  1867     0796  0816               	movf	22,w	;volatile
  1868     0797  00DA               	movwf	_timer1ReloadVal	;volatile
  1869     0798                     l1805:
  1870                           
  1871                           ;mcc_generated_files/timer/src/tmr1.c: 70:     TMR1_OverflowCallbackRegister(TMR1_Defaul
      +                          tOverflowCallback);
  1872     0798  3003               	movlw	low _TMR1_DefaultOverflowCallback
  1873     0799  00B1               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler
  1874     079A  3000               	movlw	high _TMR1_DefaultOverflowCallback
  1875     079B  00B2               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler+1
  1876     079C  3187  27F9  3187   	fcall	_TMR1_OverflowCallbackRegister
  1877     079F                     l1807:
  1878                           
  1879                           ;mcc_generated_files/timer/src/tmr1.c: 73:      PIR1bits.TMR1IF = 0;
  1880     079F  0020               	movlb	0	; select bank0
  1881     07A0  1011               	bcf	17,0	;volatile
  1882     07A1                     l1809:
  1883                           
  1884                           ;mcc_generated_files/timer/src/tmr1.c: 75:      PIE1bits.TMR1IE = 1;
  1885     07A1  0021               	movlb	1	; select bank1
  1886     07A2  1411               	bsf	17,0	;volatile
  1887     07A3                     l1811:
  1888                           
  1889                           ;mcc_generated_files/timer/src/tmr1.c: 78:     T1CON = 0x31;
  1890     07A3  3031               	movlw	49
  1891     07A4  0020               	movlb	0	; select bank0
  1892     07A5  0098               	movwf	24	;volatile
  1893     07A6                     l144:
  1894     07A6  0008               	return
  1895     07A7                     __end_of_TMR1_Initialize:
  1896                           
  1897                           	psect	text3
  1898     07F9                     __ptext3:	
  1899 ;; *************** function _TMR1_OverflowCallbackRegister *****************
  1900 ;; Defined at:
  1901 ;;		line 163 in file "mcc_generated_files/timer/src/tmr1.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  CallbackHand    2   17[BANK0 ] PTR FTN()void 
  1904 ;;		 -> Tmr1CallBack(1), TMR1_DefaultOverflowCallback(1), 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1916 ;;      Params:         0       2       0       0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0
  1919 ;;      Totals:         0       2       0       0       0       0       0       0
  1920 ;;Total ram usage:        2 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 5
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_TMR1_Initialize
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931     07F9                     _TMR1_OverflowCallbackRegister:	
  1932                           ;psect for function _TMR1_OverflowCallbackRegister
  1933                           
  1934     07F9                     l1749:	
  1935                           ;incstack = 0
  1936                           ; Regs used in _TMR1_OverflowCallbackRegister: [wreg]
  1937                           
  1938                           
  1939                           ;mcc_generated_files/timer/src/tmr1.c: 163: void TMR1_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 164: {;mcc_generated_files/
      +                          timer/src/tmr1.c: 165:     TMR1_OverflowCallback = CallbackHandler;
  1940     07F9  0020               	movlb	0	; select bank0
  1941     07FA  0832               	movf	TMR1_OverflowCallbackRegister@CallbackHandler+1,w
  1942     07FB  00D9               	movwf	_TMR1_OverflowCallback+1
  1943     07FC  0831               	movf	TMR1_OverflowCallbackRegister@CallbackHandler,w
  1944     07FD  00D8               	movwf	_TMR1_OverflowCallback
  1945     07FE                     l177:
  1946     07FE  0008               	return
  1947     07FF                     __end_of_TMR1_OverflowCallbackRegister:
  1948                           
  1949                           	psect	text4
  1950     0772                     __ptext4:	
  1951 ;; *************** function _PIN_MANAGER_Initialize *****************
  1952 ;; Defined at:
  1953 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1967 ;;      Params:         0       0       0       0       0       0       0       0
  1968 ;;      Locals:         0       0       0       0       0       0       0       0
  1969 ;;      Temps:          0       0       0       0       0       0       0       0
  1970 ;;      Totals:         0       0       0       0       0       0       0       0
  1971 ;;Total ram usage:        0 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 5
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_SYSTEM_Initialize
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981     0772                     _PIN_MANAGER_Initialize:	
  1982                           ;psect for function _PIN_MANAGER_Initialize
  1983                           
  1984     0772                     l1765:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1987                           
  1988                           
  1989                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  1990     0772  0022               	movlb	2	; select bank2
  1991     0773  018C               	clrf	12	;volatile
  1992                           
  1993                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  1994     0774  018D               	clrf	13	;volatile
  1995                           
  1996                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  1997     0775  018E               	clrf	14	;volatile
  1998     0776                     l1767:
  1999                           
  2000                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x9;
  2001     0776  3009               	movlw	9
  2002     0777  0021               	movlb	1	; select bank1
  2003     0778  008C               	movwf	12	;volatile
  2004     0779                     l1769:
  2005                           
  2006                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x0;
  2007     0779  018D               	clrf	13	;volatile
  2008     077A                     l1771:
  2009                           
  2010                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x0;
  2011     077A  018E               	clrf	14	;volatile
  2012     077B                     l1773:
  2013                           
  2014                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x0;
  2015     077B  0023               	movlb	3	; select bank3
  2016     077C  018C               	clrf	12	;volatile
  2017     077D                     l1775:
  2018                           
  2019                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x0;
  2020     077D  018D               	clrf	13	;volatile
  2021     077E                     l1777:
  2022                           
  2023                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0x0;
  2024     077E  018E               	clrf	14	;volatile
  2025                           
  2026                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x9;
  2027     077F  3009               	movlw	9
  2028     0780  0024               	movlb	4	; select bank4
  2029     0781  008C               	movwf	12	;volatile
  2030     0782                     l1779:
  2031                           
  2032                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
  2033     0782  018D               	clrf	13	;volatile
  2034     0783                     l1781:
  2035                           
  2036                           ;mcc_generated_files/system/src/pins.c: 66:     OPTION_REGbits.nWPUEN = 0x0;
  2037     0783  0021               	movlb	1	; select bank1
  2038     0784  1395               	bcf	21,7	;volatile
  2039     0785                     l1783:
  2040                           
  2041                           ;mcc_generated_files/system/src/pins.c: 90:     IOCAP = 0x0;
  2042     0785  0027               	movlb	7	; select bank7
  2043     0786  0191               	clrf	17	;volatile
  2044     0787                     l1785:
  2045                           
  2046                           ;mcc_generated_files/system/src/pins.c: 91:     IOCAN = 0x0;
  2047     0787  0192               	clrf	18	;volatile
  2048     0788                     l1787:
  2049                           
  2050                           ;mcc_generated_files/system/src/pins.c: 92:     IOCAF = 0x0;
  2051     0788  0193               	clrf	19	;volatile
  2052     0789                     l1789:
  2053                           
  2054                           ;mcc_generated_files/system/src/pins.c: 93:     IOCBP = 0x0;
  2055     0789  0194               	clrf	20	;volatile
  2056     078A                     l1791:
  2057                           
  2058                           ;mcc_generated_files/system/src/pins.c: 94:     IOCBN = 0x0;
  2059     078A  0195               	clrf	21	;volatile
  2060     078B                     l1793:
  2061                           
  2062                           ;mcc_generated_files/system/src/pins.c: 95:     IOCBF = 0x0;
  2063     078B  0196               	clrf	22	;volatile
  2064     078C                     l1795:
  2065                           
  2066                           ;mcc_generated_files/system/src/pins.c: 99:     INTCONbits.IOCIE = 1;
  2067     078C  158B               	bsf	11,3	;volatile
  2068     078D                     l48:
  2069     078D  0008               	return
  2070     078E                     __end_of_PIN_MANAGER_Initialize:
  2071                           
  2072                           	psect	text5
  2073     07E7                     __ptext5:	
  2074 ;; *************** function _INTERRUPT_Initialize *****************
  2075 ;; Defined at:
  2076 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, pclath, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2090 ;;      Params:         0       0       0       0       0       0       0       0
  2091 ;;      Locals:         0       0       0       0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0
  2093 ;;      Totals:         0       0       0       0       0       0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 6
  2097 ;; This function calls:
  2098 ;;		_INT_SetInterruptHandler
  2099 ;; This function is called by:
  2100 ;;		_SYSTEM_Initialize
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104     07E7                     _INTERRUPT_Initialize:	
  2105                           ;psect for function _INTERRUPT_Initialize
  2106                           
  2107     07E7                     l1813:	
  2108                           ;incstack = 0
  2109                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2110                           
  2111                           
  2112                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  2113     07E7  108B               	bcf	11,1	;volatile
  2114                           
  2115                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  2116     07E8  0021               	movlb	1	; select bank1
  2117     07E9  1715               	bsf	21,6	;volatile
  2118     07EA                     l1815:
  2119                           
  2120                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2121     07EA  3000               	movlw	0
  2122     07EB  0020               	movlb	0	; select bank0
  2123     07EC  00B1               	movwf	INT_SetInterruptHandler@InterruptHandler
  2124     07ED  3000               	movlw	0
  2125     07EE  00B2               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2126     07EF  318F  27FA  3187   	fcall	_INT_SetInterruptHandler
  2127     07F2                     l83:
  2128     07F2  0008               	return
  2129     07F3                     __end_of_INTERRUPT_Initialize:
  2130                           
  2131                           	psect	text6
  2132     0FFA                     __ptext6:	
  2133 ;; *************** function _INT_SetInterruptHandler *****************
  2134 ;; Defined at:
  2135 ;;		line 97 in file "mcc_generated_files/system/src/interrupt.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
  2138 ;;		 -> INT_DefaultInterruptHandler(1), 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2150 ;;      Params:         0       2       0       0       0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0
  2153 ;;      Totals:         0       2       0       0       0       0       0       0
  2154 ;;Total ram usage:        2 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 5
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_INTERRUPT_Initialize
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164     0FFA                     _INT_SetInterruptHandler:	
  2165                           ;psect for function _INT_SetInterruptHandler
  2166                           
  2167     0FFA                     l1747:	
  2168                           ;incstack = 0
  2169                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2170                           
  2171                           
  2172                           ;mcc_generated_files/system/src/interrupt.c: 98:     INT_InterruptHandler = InterruptHan
      +                          dler;
  2173     0FFA  0020               	movlb	0	; select bank0
  2174     0FFB  0832               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2175     0FFC  00DD               	movwf	_INT_InterruptHandler+1
  2176     0FFD  0831               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2177     0FFE  00DC               	movwf	_INT_InterruptHandler
  2178     0FFF                     l102:
  2179     0FFF  0008               	return
  2180     1000                     __end_of_INT_SetInterruptHandler:
  2181                           
  2182                           	psect	text7
  2183     0FF4                     __ptext7:	
  2184 ;; *************** function _CLOCK_Initialize *****************
  2185 ;; Defined at:
  2186 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2200 ;;      Params:         0       0       0       0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0
  2203 ;;      Totals:         0       0       0       0       0       0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 5
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_SYSTEM_Initialize
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214     0FF4                     _CLOCK_Initialize:	
  2215                           ;psect for function _CLOCK_Initialize
  2216                           
  2217     0FF4                     l1761:	
  2218                           ;incstack = 0
  2219                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  2220                           
  2221                           
  2222                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  2223     0FF4  3078               	movlw	120
  2224     0FF5  0021               	movlb	1	; select bank1
  2225     0FF6  0099               	movwf	25	;volatile
  2226     0FF7                     l1763:
  2227                           
  2228                           ;mcc_generated_files/system/src/clock.c: 43:     BORCON = (0 << 0x7)
  2229     0FF7  0022               	movlb	2	; select bank2
  2230     0FF8  0196               	clrf	22	;volatile
  2231     0FF9                     l7:
  2232     0FF9  0008               	return
  2233     0FFA                     __end_of_CLOCK_Initialize:
  2234                           
  2235                           	psect	text8
  2236     04A0                     __ptext8:	
  2237 ;; *************** function _Display *****************
  2238 ;; Defined at:
  2239 ;;		line 243 in file "main.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  a               2    2[BANK1 ] int 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  hundreds        2   11[BANK1 ] int 
  2244 ;;  tens            2    9[BANK1 ] int 
  2245 ;;  ones            2    7[BANK1 ] int 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2255 ;;      Params:         0       0       2       0       0       0       0       0
  2256 ;;      Locals:         0       0       6       0       0       0       0       0
  2257 ;;      Temps:          0       0       3       0       0       0       0       0
  2258 ;;      Totals:         0       0      11       0       0       0       0       0
  2259 ;;Total ram usage:       11 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 6
  2262 ;; This function calls:
  2263 ;;		_SetSegments
  2264 ;;		___awdiv
  2265 ;;		___awmod
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271     04A0                     _Display:	
  2272                           ;psect for function _Display
  2273                           
  2274     04A0                     l2439:	
  2275                           ;incstack = 0
  2276                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2277                           
  2278                           
  2279                           ;main.c: 244:     int ones = a % 10;
  2280     04A0  300A               	movlw	10
  2281     04A1  0020               	movlb	0	; select bank0
  2282     04A2  00BA               	movwf	___awmod@divisor
  2283     04A3  3000               	movlw	0
  2284     04A4  00BB               	movwf	___awmod@divisor+1
  2285     04A5  0021               	movlb	1	; select bank1
  2286     04A6  0823               	movf	(Display@a+1)^(0+128),w
  2287     04A7  0020               	movlb	0	; select bank0
  2288     04A8  00BD               	movwf	___awmod@dividend+1
  2289     04A9  0021               	movlb	1	; select bank1
  2290     04AA  0822               	movf	Display@a^(0+128),w
  2291     04AB  0020               	movlb	0	; select bank0
  2292     04AC  00BC               	movwf	___awmod@dividend
  2293     04AD  3185  25F9  3184   	fcall	___awmod
  2294     04B0  0020               	movlb	0	; select bank0
  2295     04B1  083B               	movf	?___awmod+1,w
  2296     04B2  0021               	movlb	1	; select bank1
  2297     04B3  00A8               	movwf	(Display@ones+1)^(0+128)
  2298     04B4  0020               	movlb	0	; select bank0
  2299     04B5  083A               	movf	?___awmod,w
  2300     04B6  0021               	movlb	1	; select bank1
  2301     04B7  00A7               	movwf	Display@ones^(0+128)
  2302                           
  2303                           ;main.c: 245:     int tens = (a / 10) % 10;
  2304     04B8  300A               	movlw	10
  2305     04B9  0020               	movlb	0	; select bank0
  2306     04BA  00BA               	movwf	___awmod@divisor
  2307     04BB  3000               	movlw	0
  2308     04BC  00BB               	movwf	___awmod@divisor+1
  2309     04BD  300A               	movlw	10
  2310     04BE  00B1               	movwf	___awdiv@divisor
  2311     04BF  3000               	movlw	0
  2312     04C0  00B2               	movwf	___awdiv@divisor+1
  2313     04C1  0021               	movlb	1	; select bank1
  2314     04C2  0823               	movf	(Display@a+1)^(0+128),w
  2315     04C3  0020               	movlb	0	; select bank0
  2316     04C4  00B4               	movwf	___awdiv@dividend+1
  2317     04C5  0021               	movlb	1	; select bank1
  2318     04C6  0822               	movf	Display@a^(0+128),w
  2319     04C7  0020               	movlb	0	; select bank0
  2320     04C8  00B3               	movwf	___awdiv@dividend
  2321     04C9  3185  2599  3184   	fcall	___awdiv
  2322     04CC  0020               	movlb	0	; select bank0
  2323     04CD  0832               	movf	?___awdiv+1,w
  2324     04CE  00BD               	movwf	___awmod@dividend+1
  2325     04CF  0831               	movf	?___awdiv,w
  2326     04D0  00BC               	movwf	___awmod@dividend
  2327     04D1  3185  25F9  3184   	fcall	___awmod
  2328     04D4  0020               	movlb	0	; select bank0
  2329     04D5  083B               	movf	?___awmod+1,w
  2330     04D6  0021               	movlb	1	; select bank1
  2331     04D7  00AA               	movwf	(Display@tens+1)^(0+128)
  2332     04D8  0020               	movlb	0	; select bank0
  2333     04D9  083A               	movf	?___awmod,w
  2334     04DA  0021               	movlb	1	; select bank1
  2335     04DB  00A9               	movwf	Display@tens^(0+128)
  2336     04DC                     l2441:
  2337                           
  2338                           ;main.c: 246:     int hundreds = a > 99;
  2339     04DC  0823               	movf	(Display@a+1)^(0+128),w
  2340     04DD  3A80               	xorlw	128
  2341     04DE  00A4               	movwf	??_Display^(0+128)
  2342     04DF  3080               	movlw	128
  2343     04E0  0224               	subwf	??_Display^(0+128),w
  2344     04E1  1D03               	skipz
  2345     04E2  2CE5               	goto	u1455
  2346     04E3  3064               	movlw	100
  2347     04E4  0222               	subwf	Display@a^(0+128),w
  2348     04E5                     u1455:
  2349     04E5  1803               	skipnc
  2350     04E6  2CE8               	goto	u1451
  2351     04E7  2CEA               	goto	u1450
  2352     04E8                     u1451:
  2353     04E8  3001               	movlw	1
  2354     04E9  2CEB               	goto	u1460
  2355     04EA                     u1450:
  2356     04EA  3000               	movlw	0
  2357     04EB                     u1460:
  2358     04EB  0021               	movlb	1	; select bank1
  2359     04EC  00A5               	movwf	(??_Display+1)^(0+128)
  2360     04ED  01A6               	clrf	((??_Display+1)^(0+128)+1)
  2361     04EE  0825               	movf	(??_Display+1)^(0+128),w
  2362     04EF  00AB               	movwf	Display@hundreds^(0+128)
  2363     04F0  0826               	movf	(??_Display+2)^(0+128),w
  2364     04F1  00AC               	movwf	(Display@hundreds+1)^(0+128)
  2365     04F2                     l2443:
  2366                           
  2367                           ;main.c: 248:     SetSegments(&one, ones, 0);
  2368     04F2  0828               	movf	(Display@ones+1)^(0+128),w
  2369     04F3  0020               	movlb	0	; select bank0
  2370     04F4  00B2               	movwf	SetSegments@a+1
  2371     04F5  0021               	movlb	1	; select bank1
  2372     04F6  0827               	movf	Display@ones^(0+128),w
  2373     04F7  0020               	movlb	0	; select bank0
  2374     04F8  00B1               	movwf	SetSegments@a
  2375     04F9  01B3               	clrf	SetSegments@blank
  2376     04FA  3051               	movlw	(low (_one| 0))& (0+255)
  2377     04FB  3180  202B  3184   	fcall	_SetSegments
  2378     04FE                     l2445:
  2379                           
  2380                           ;main.c: 249:     SetSegments(&ten, tens, (a < 10));
  2381     04FE  0021               	movlb	1	; select bank1
  2382     04FF  082A               	movf	(Display@tens+1)^(0+128),w
  2383     0500  0020               	movlb	0	; select bank0
  2384     0501  00B2               	movwf	SetSegments@a+1
  2385     0502  0021               	movlb	1	; select bank1
  2386     0503  0829               	movf	Display@tens^(0+128),w
  2387     0504  0020               	movlb	0	; select bank0
  2388     0505  00B1               	movwf	SetSegments@a
  2389     0506  0021               	movlb	1	; select bank1
  2390     0507  0823               	movf	(Display@a+1)^(0+128),w
  2391     0508  3A80               	xorlw	128
  2392     0509  00A4               	movwf	??_Display^(0+128)
  2393     050A  3080               	movlw	128
  2394     050B  0224               	subwf	??_Display^(0+128),w
  2395     050C  1D03               	skipz
  2396     050D  2D10               	goto	u1475
  2397     050E  300A               	movlw	10
  2398     050F  0222               	subwf	Display@a^(0+128),w
  2399     0510                     u1475:
  2400     0510  1C03               	skipc
  2401     0511  2D13               	goto	u1471
  2402     0512  2D15               	goto	u1470
  2403     0513                     u1471:
  2404     0513  3001               	movlw	1
  2405     0514  2D16               	goto	u1480
  2406     0515                     u1470:
  2407     0515  3000               	movlw	0
  2408     0516                     u1480:
  2409     0516  0020               	movlb	0	; select bank0
  2410     0517  00B3               	movwf	SetSegments@blank
  2411     0518  304A               	movlw	(low (_ten| 0))& (0+255)
  2412     0519  3180  202B  3184   	fcall	_SetSegments
  2413     051C                     l2447:
  2414                           
  2415                           ;main.c: 250:     SetSegments(&hundred, hundreds, 0);
  2416     051C  0021               	movlb	1	; select bank1
  2417     051D  082C               	movf	(Display@hundreds+1)^(0+128),w
  2418     051E  0020               	movlb	0	; select bank0
  2419     051F  00B2               	movwf	SetSegments@a+1
  2420     0520  0021               	movlb	1	; select bank1
  2421     0521  082B               	movf	Display@hundreds^(0+128),w
  2422     0522  0020               	movlb	0	; select bank0
  2423     0523  00B1               	movwf	SetSegments@a
  2424     0524  01B3               	clrf	SetSegments@blank
  2425     0525  3043               	movlw	(low (_hundred| 0))& (0+255)
  2426     0526  3180  202B  3184   	fcall	_SetSegments
  2427     0529                     l243:
  2428     0529  0008               	return
  2429     052A                     __end_of_Display:
  2430                           
  2431                           	psect	text9
  2432     05F9                     __ptext9:	
  2433 ;; *************** function ___awmod *****************
  2434 ;; Defined at:
  2435 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  divisor         2   26[BANK0 ] int 
  2438 ;;  dividend        2   28[BANK0 ] int 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  sign            1    1[BANK1 ] unsigned char 
  2441 ;;  counter         1    0[BANK1 ] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  2   26[BANK0 ] int 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2451 ;;      Params:         0       4       0       0       0       0       0       0
  2452 ;;      Locals:         0       0       2       0       0       0       0       0
  2453 ;;      Temps:          0       1       0       0       0       0       0       0
  2454 ;;      Totals:         0       5       2       0       0       0       0       0
  2455 ;;Total ram usage:        7 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 5
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_Display
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465     05F9                     ___awmod:	
  2466                           ;psect for function ___awmod
  2467                           
  2468     05F9                     l2401:	
  2469                           ;incstack = 0
  2470                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2471                           
  2472     05F9  0021               	movlb	1	; select bank1
  2473     05FA  01A1               	clrf	___awmod@sign^(0+128)
  2474     05FB                     l2403:
  2475     05FB  0020               	movlb	0	; select bank0
  2476     05FC  1FBD               	btfss	___awmod@dividend+1,7
  2477     05FD  2DFF               	goto	u1361
  2478     05FE  2E00               	goto	u1360
  2479     05FF                     u1361:
  2480     05FF  2E08               	goto	l2409
  2481     0600                     u1360:
  2482     0600                     l2405:
  2483     0600  09BC               	comf	___awmod@dividend,f
  2484     0601  09BD               	comf	___awmod@dividend+1,f
  2485     0602  0ABC               	incf	___awmod@dividend,f
  2486     0603  1903               	skipnz
  2487     0604  0ABD               	incf	___awmod@dividend+1,f
  2488     0605                     l2407:
  2489     0605  0021               	movlb	1	; select bank1
  2490     0606  01A1               	clrf	___awmod@sign^(0+128)
  2491     0607  0AA1               	incf	___awmod@sign^(0+128),f
  2492     0608                     l2409:
  2493     0608  0020               	movlb	0	; select bank0
  2494     0609  1FBB               	btfss	___awmod@divisor+1,7
  2495     060A  2E0C               	goto	u1371
  2496     060B  2E0D               	goto	u1370
  2497     060C                     u1371:
  2498     060C  2E12               	goto	l2413
  2499     060D                     u1370:
  2500     060D                     l2411:
  2501     060D  09BA               	comf	___awmod@divisor,f
  2502     060E  09BB               	comf	___awmod@divisor+1,f
  2503     060F  0ABA               	incf	___awmod@divisor,f
  2504     0610  1903               	skipnz
  2505     0611  0ABB               	incf	___awmod@divisor+1,f
  2506     0612                     l2413:
  2507     0612  083A               	movf	___awmod@divisor,w
  2508     0613  043B               	iorwf	___awmod@divisor+1,w
  2509     0614  1903               	btfsc	3,2
  2510     0615  2E17               	goto	u1381
  2511     0616  2E18               	goto	u1380
  2512     0617                     u1381:
  2513     0617  2E46               	goto	l2431
  2514     0618                     u1380:
  2515     0618                     l2415:
  2516     0618  0021               	movlb	1	; select bank1
  2517     0619  01A0               	clrf	___awmod@counter^(0+128)
  2518     061A  0AA0               	incf	___awmod@counter^(0+128),f
  2519     061B  2E26               	goto	l2421
  2520     061C                     l2417:
  2521     061C  3001               	movlw	1
  2522     061D                     u1395:
  2523     061D  35BA               	lslf	___awmod@divisor,f
  2524     061E  0DBB               	rlf	___awmod@divisor+1,f
  2525     061F  0B89               	decfsz	9,f
  2526     0620  2E1D               	goto	u1395
  2527     0621                     l2419:
  2528     0621  3001               	movlw	1
  2529     0622  00BE               	movwf	??___awmod
  2530     0623  083E               	movf	??___awmod,w
  2531     0624  0021               	movlb	1	; select bank1
  2532     0625  07A0               	addwf	___awmod@counter^(0+128),f
  2533     0626                     l2421:
  2534     0626  0020               	movlb	0	; select bank0
  2535     0627  1FBB               	btfss	___awmod@divisor+1,7
  2536     0628  2E2A               	goto	u1401
  2537     0629  2E2B               	goto	u1400
  2538     062A                     u1401:
  2539     062A  2E1C               	goto	l2417
  2540     062B                     u1400:
  2541     062B                     l2423:
  2542     062B  0020               	movlb	0	; select bank0
  2543     062C  083B               	movf	___awmod@divisor+1,w
  2544     062D  023D               	subwf	___awmod@dividend+1,w
  2545     062E  1D03               	skipz
  2546     062F  2E32               	goto	u1415
  2547     0630  083A               	movf	___awmod@divisor,w
  2548     0631  023C               	subwf	___awmod@dividend,w
  2549     0632                     u1415:
  2550     0632  1C03               	skipc
  2551     0633  2E35               	goto	u1411
  2552     0634  2E36               	goto	u1410
  2553     0635                     u1411:
  2554     0635  2E3A               	goto	l2427
  2555     0636                     u1410:
  2556     0636                     l2425:
  2557     0636  083A               	movf	___awmod@divisor,w
  2558     0637  02BC               	subwf	___awmod@dividend,f
  2559     0638  083B               	movf	___awmod@divisor+1,w
  2560     0639  3BBD               	subwfb	___awmod@dividend+1,f
  2561     063A                     l2427:
  2562     063A  3001               	movlw	1
  2563     063B                     u1425:
  2564     063B  36BB               	lsrf	___awmod@divisor+1,f
  2565     063C  0CBA               	rrf	___awmod@divisor,f
  2566     063D  0B89               	decfsz	9,f
  2567     063E  2E3B               	goto	u1425
  2568     063F                     l2429:
  2569     063F  3001               	movlw	1
  2570     0640  0021               	movlb	1	; select bank1
  2571     0641  02A0               	subwf	___awmod@counter^(0+128),f
  2572     0642  1D03               	btfss	3,2
  2573     0643  2E45               	goto	u1431
  2574     0644  2E46               	goto	u1430
  2575     0645                     u1431:
  2576     0645  2E2B               	goto	l2423
  2577     0646                     u1430:
  2578     0646                     l2431:
  2579     0646  0021               	movlb	1	; select bank1
  2580     0647  0821               	movf	___awmod@sign^(0+128),w
  2581     0648  1903               	btfsc	3,2
  2582     0649  2E4B               	goto	u1441
  2583     064A  2E4C               	goto	u1440
  2584     064B                     u1441:
  2585     064B  2E52               	goto	l2435
  2586     064C                     u1440:
  2587     064C                     l2433:
  2588     064C  0020               	movlb	0	; select bank0
  2589     064D  09BC               	comf	___awmod@dividend,f
  2590     064E  09BD               	comf	___awmod@dividend+1,f
  2591     064F  0ABC               	incf	___awmod@dividend,f
  2592     0650  1903               	skipnz
  2593     0651  0ABD               	incf	___awmod@dividend+1,f
  2594     0652                     l2435:
  2595     0652  0020               	movlb	0	; select bank0
  2596     0653  083D               	movf	___awmod@dividend+1,w
  2597     0654  00BB               	movwf	?___awmod+1
  2598     0655  083C               	movf	___awmod@dividend,w
  2599     0656  00BA               	movwf	?___awmod
  2600     0657                     l489:
  2601     0657  0008               	return
  2602     0658                     __end_of___awmod:
  2603                           
  2604                           	psect	text10
  2605     0599                     __ptext10:	
  2606 ;; *************** function ___awdiv *****************
  2607 ;; Defined at:
  2608 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  divisor         2   17[BANK0 ] int 
  2611 ;;  dividend        2   19[BANK0 ] int 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  quotient        2   24[BANK0 ] int 
  2614 ;;  sign            1   23[BANK0 ] unsigned char 
  2615 ;;  counter         1   22[BANK0 ] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  2   17[BANK0 ] int 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2625 ;;      Params:         0       4       0       0       0       0       0       0
  2626 ;;      Locals:         0       4       0       0       0       0       0       0
  2627 ;;      Temps:          0       1       0       0       0       0       0       0
  2628 ;;      Totals:         0       9       0       0       0       0       0       0
  2629 ;;Total ram usage:        9 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; Hardware stack levels required when called: 5
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_Display
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639     0599                     ___awdiv:	
  2640                           ;psect for function ___awdiv
  2641                           
  2642     0599                     l2357:	
  2643                           ;incstack = 0
  2644                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2645                           
  2646     0599  0020               	movlb	0	; select bank0
  2647     059A  01B7               	clrf	___awdiv@sign
  2648     059B                     l2359:
  2649     059B  1FB2               	btfss	___awdiv@divisor+1,7
  2650     059C  2D9E               	goto	u1261
  2651     059D  2D9F               	goto	u1260
  2652     059E                     u1261:
  2653     059E  2DA6               	goto	l2365
  2654     059F                     u1260:
  2655     059F                     l2361:
  2656     059F  09B1               	comf	___awdiv@divisor,f
  2657     05A0  09B2               	comf	___awdiv@divisor+1,f
  2658     05A1  0AB1               	incf	___awdiv@divisor,f
  2659     05A2  1903               	skipnz
  2660     05A3  0AB2               	incf	___awdiv@divisor+1,f
  2661     05A4                     l2363:
  2662     05A4  01B7               	clrf	___awdiv@sign
  2663     05A5  0AB7               	incf	___awdiv@sign,f
  2664     05A6                     l2365:
  2665     05A6  1FB4               	btfss	___awdiv@dividend+1,7
  2666     05A7  2DA9               	goto	u1271
  2667     05A8  2DAA               	goto	u1270
  2668     05A9                     u1271:
  2669     05A9  2DB3               	goto	l2371
  2670     05AA                     u1270:
  2671     05AA                     l2367:
  2672     05AA  09B3               	comf	___awdiv@dividend,f
  2673     05AB  09B4               	comf	___awdiv@dividend+1,f
  2674     05AC  0AB3               	incf	___awdiv@dividend,f
  2675     05AD  1903               	skipnz
  2676     05AE  0AB4               	incf	___awdiv@dividend+1,f
  2677     05AF                     l2369:
  2678     05AF  3001               	movlw	1
  2679     05B0  00B5               	movwf	??___awdiv
  2680     05B1  0835               	movf	??___awdiv,w
  2681     05B2  06B7               	xorwf	___awdiv@sign,f
  2682     05B3                     l2371:
  2683     05B3  01B8               	clrf	___awdiv@quotient
  2684     05B4  01B9               	clrf	___awdiv@quotient+1
  2685     05B5                     l2373:
  2686     05B5  0831               	movf	___awdiv@divisor,w
  2687     05B6  0432               	iorwf	___awdiv@divisor+1,w
  2688     05B7  1903               	btfsc	3,2
  2689     05B8  2DBA               	goto	u1281
  2690     05B9  2DBB               	goto	u1280
  2691     05BA                     u1281:
  2692     05BA  2DEA               	goto	l2393
  2693     05BB                     u1280:
  2694     05BB                     l2375:
  2695     05BB  01B6               	clrf	___awdiv@counter
  2696     05BC  0AB6               	incf	___awdiv@counter,f
  2697     05BD  2DC7               	goto	l2381
  2698     05BE                     l2377:
  2699     05BE  3001               	movlw	1
  2700     05BF                     u1295:
  2701     05BF  35B1               	lslf	___awdiv@divisor,f
  2702     05C0  0DB2               	rlf	___awdiv@divisor+1,f
  2703     05C1  0B89               	decfsz	9,f
  2704     05C2  2DBF               	goto	u1295
  2705     05C3                     l2379:
  2706     05C3  3001               	movlw	1
  2707     05C4  00B5               	movwf	??___awdiv
  2708     05C5  0835               	movf	??___awdiv,w
  2709     05C6  07B6               	addwf	___awdiv@counter,f
  2710     05C7                     l2381:
  2711     05C7  1FB2               	btfss	___awdiv@divisor+1,7
  2712     05C8  2DCA               	goto	u1301
  2713     05C9  2DCB               	goto	u1300
  2714     05CA                     u1301:
  2715     05CA  2DBE               	goto	l2377
  2716     05CB                     u1300:
  2717     05CB                     l2383:
  2718     05CB  3001               	movlw	1
  2719     05CC                     u1315:
  2720     05CC  35B8               	lslf	___awdiv@quotient,f
  2721     05CD  0DB9               	rlf	___awdiv@quotient+1,f
  2722     05CE  0B89               	decfsz	9,f
  2723     05CF  2DCC               	goto	u1315
  2724     05D0  0832               	movf	___awdiv@divisor+1,w
  2725     05D1  0234               	subwf	___awdiv@dividend+1,w
  2726     05D2  1D03               	skipz
  2727     05D3  2DD6               	goto	u1325
  2728     05D4  0831               	movf	___awdiv@divisor,w
  2729     05D5  0233               	subwf	___awdiv@dividend,w
  2730     05D6                     u1325:
  2731     05D6  1C03               	skipc
  2732     05D7  2DD9               	goto	u1321
  2733     05D8  2DDA               	goto	u1320
  2734     05D9                     u1321:
  2735     05D9  2DDF               	goto	l2389
  2736     05DA                     u1320:
  2737     05DA                     l2385:
  2738     05DA  0831               	movf	___awdiv@divisor,w
  2739     05DB  02B3               	subwf	___awdiv@dividend,f
  2740     05DC  0832               	movf	___awdiv@divisor+1,w
  2741     05DD  3BB4               	subwfb	___awdiv@dividend+1,f
  2742     05DE                     l2387:
  2743     05DE  1438               	bsf	___awdiv@quotient,0
  2744     05DF                     l2389:
  2745     05DF  3001               	movlw	1
  2746     05E0                     u1335:
  2747     05E0  36B2               	lsrf	___awdiv@divisor+1,f
  2748     05E1  0CB1               	rrf	___awdiv@divisor,f
  2749     05E2  0B89               	decfsz	9,f
  2750     05E3  2DE0               	goto	u1335
  2751     05E4                     l2391:
  2752     05E4  3001               	movlw	1
  2753     05E5  02B6               	subwf	___awdiv@counter,f
  2754     05E6  1D03               	btfss	3,2
  2755     05E7  2DE9               	goto	u1341
  2756     05E8  2DEA               	goto	u1340
  2757     05E9                     u1341:
  2758     05E9  2DCB               	goto	l2383
  2759     05EA                     u1340:
  2760     05EA                     l2393:
  2761     05EA  0837               	movf	___awdiv@sign,w
  2762     05EB  1903               	btfsc	3,2
  2763     05EC  2DEE               	goto	u1351
  2764     05ED  2DEF               	goto	u1350
  2765     05EE                     u1351:
  2766     05EE  2DF4               	goto	l2397
  2767     05EF                     u1350:
  2768     05EF                     l2395:
  2769     05EF  09B8               	comf	___awdiv@quotient,f
  2770     05F0  09B9               	comf	___awdiv@quotient+1,f
  2771     05F1  0AB8               	incf	___awdiv@quotient,f
  2772     05F2  1903               	skipnz
  2773     05F3  0AB9               	incf	___awdiv@quotient+1,f
  2774     05F4                     l2397:
  2775     05F4  0839               	movf	___awdiv@quotient+1,w
  2776     05F5  00B2               	movwf	?___awdiv+1
  2777     05F6  0838               	movf	___awdiv@quotient,w
  2778     05F7  00B1               	movwf	?___awdiv
  2779     05F8                     l476:
  2780     05F8  0008               	return
  2781     05F9                     __end_of___awdiv:
  2782                           
  2783                           	psect	text11
  2784     002B                     __ptext11:	
  2785 ;; *************** function _SetSegments *****************
  2786 ;; Defined at:
  2787 ;;		line 129 in file "main.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  digit           1    wreg     PTR struct digit
  2790 ;;		 -> one(7), ten(7), hundred(7), 
  2791 ;;  a               2   17[BANK0 ] int 
  2792 ;;  blank           1   19[BANK0 ] unsigned char 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  digit           1   20[BANK0 ] PTR struct digit
  2795 ;;		 -> one(7), ten(7), hundred(7), 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2805 ;;      Params:         0       3       0       0       0       0       0       0
  2806 ;;      Locals:         0       1       0       0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0
  2808 ;;      Totals:         0       4       0       0       0       0       0       0
  2809 ;;Total ram usage:        4 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 5
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_Display
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819     002B                     _SetSegments:	
  2820                           ;psect for function _SetSegments
  2821                           
  2822                           
  2823                           ;incstack = 0
  2824                           ; Regs used in _SetSegments: [wreg-fsr1h+status,2+status,0]
  2825                           ;SetSegments@digit stored from wreg
  2826     002B  0020               	movlb	0	; select bank0
  2827     002C  00B4               	movwf	SetSegments@digit
  2828     002D                     l2207:
  2829                           
  2830                           ;main.c: 130:     if (blank) {
  2831     002D  0833               	movf	SetSegments@blank,w
  2832     002E  1903               	btfsc	3,2
  2833     002F  2831               	goto	u1251
  2834     0030  2832               	goto	u1250
  2835     0031                     u1251:
  2836     0031  29D9               	goto	l2351
  2837     0032                     u1250:
  2838     0032                     l2209:
  2839                           
  2840                           ;main.c: 131:         digit->a = 0;
  2841     0032  0834               	movf	SetSegments@digit,w
  2842     0033  0086               	movwf	6
  2843     0034  0187               	clrf	7
  2844     0035  0181               	clrf	1
  2845                           
  2846                           ;main.c: 132:         digit->b = 0;
  2847     0036  0A34               	incf	SetSegments@digit,w
  2848     0037  0086               	movwf	6
  2849     0038  0187               	clrf	7
  2850     0039  0181               	clrf	1
  2851     003A                     l2211:
  2852                           
  2853                           ;main.c: 133:         digit->c = 0;
  2854     003A  0834               	movf	SetSegments@digit,w
  2855     003B  3E02               	addlw	2
  2856     003C  0086               	movwf	6
  2857     003D  0187               	clrf	7
  2858     003E  0181               	clrf	1
  2859     003F                     l2213:
  2860                           
  2861                           ;main.c: 134:         digit->d = 0;
  2862     003F  0834               	movf	SetSegments@digit,w
  2863     0040  3E03               	addlw	3
  2864     0041  0086               	movwf	6
  2865     0042  0187               	clrf	7
  2866     0043  0181               	clrf	1
  2867     0044                     l2215:
  2868                           
  2869                           ;main.c: 135:         digit->e = 0;
  2870     0044  0834               	movf	SetSegments@digit,w
  2871     0045  3E04               	addlw	4
  2872     0046  0086               	movwf	6
  2873     0047  0187               	clrf	7
  2874     0048  0181               	clrf	1
  2875     0049                     l2217:
  2876                           
  2877                           ;main.c: 136:         digit->f = 0;
  2878     0049  0834               	movf	SetSegments@digit,w
  2879     004A  3E05               	addlw	5
  2880     004B  0086               	movwf	6
  2881     004C  0187               	clrf	7
  2882     004D  0181               	clrf	1
  2883     004E                     l2219:
  2884                           
  2885                           ;main.c: 137:         digit->g = 0;
  2886     004E  0834               	movf	SetSegments@digit,w
  2887     004F  3E06               	addlw	6
  2888     0050  0086               	movwf	6
  2889     0051  0187               	clrf	7
  2890     0052  0181               	clrf	1
  2891                           
  2892                           ;main.c: 138:     } else {
  2893     0053  29FE               	goto	l240
  2894     0054                     l2221:
  2895                           
  2896                           ;main.c: 141:                 digit->a = 1;
  2897     0054  0834               	movf	SetSegments@digit,w
  2898     0055  0086               	movwf	6
  2899     0056  0187               	clrf	7
  2900     0057  0181               	clrf	1
  2901     0058  0A81               	incf	1,f
  2902                           
  2903                           ;main.c: 142:                 digit->b = 1;
  2904     0059  0A34               	incf	SetSegments@digit,w
  2905     005A  0086               	movwf	6
  2906     005B  0187               	clrf	7
  2907     005C  0181               	clrf	1
  2908     005D  0A81               	incf	1,f
  2909     005E                     l2223:
  2910                           
  2911                           ;main.c: 143:                 digit->c = 1;
  2912     005E  0834               	movf	SetSegments@digit,w
  2913     005F  3E02               	addlw	2
  2914     0060  0086               	movwf	6
  2915     0061  0187               	clrf	7
  2916     0062  0181               	clrf	1
  2917     0063  0A81               	incf	1,f
  2918     0064                     l2225:
  2919                           
  2920                           ;main.c: 144:                 digit->d = 1;
  2921     0064  0834               	movf	SetSegments@digit,w
  2922     0065  3E03               	addlw	3
  2923     0066  0086               	movwf	6
  2924     0067  0187               	clrf	7
  2925     0068  0181               	clrf	1
  2926     0069  0A81               	incf	1,f
  2927     006A                     l2227:
  2928                           
  2929                           ;main.c: 145:                 digit->e = 1;
  2930     006A  0834               	movf	SetSegments@digit,w
  2931     006B  3E04               	addlw	4
  2932     006C  0086               	movwf	6
  2933     006D  0187               	clrf	7
  2934     006E  0181               	clrf	1
  2935     006F  0A81               	incf	1,f
  2936     0070                     l2229:
  2937                           
  2938                           ;main.c: 146:                 digit->f = 1;
  2939     0070  0834               	movf	SetSegments@digit,w
  2940     0071  3E05               	addlw	5
  2941     0072  0086               	movwf	6
  2942     0073  0187               	clrf	7
  2943     0074  0181               	clrf	1
  2944     0075  0A81               	incf	1,f
  2945     0076                     l2231:
  2946                           
  2947                           ;main.c: 147:                 digit->g = 0;
  2948     0076  0834               	movf	SetSegments@digit,w
  2949     0077  3E06               	addlw	6
  2950     0078  0086               	movwf	6
  2951     0079  0187               	clrf	7
  2952     007A  0181               	clrf	1
  2953                           
  2954                           ;main.c: 148:                 break;
  2955     007B  29FE               	goto	l240
  2956     007C                     l2233:
  2957                           
  2958                           ;main.c: 151:                 digit->a = 0;
  2959     007C  0834               	movf	SetSegments@digit,w
  2960     007D  0086               	movwf	6
  2961     007E  0187               	clrf	7
  2962     007F  0181               	clrf	1
  2963     0080                     l2235:
  2964                           
  2965                           ;main.c: 152:                 digit->b = 1;
  2966     0080  0A34               	incf	SetSegments@digit,w
  2967     0081  0086               	movwf	6
  2968     0082  0187               	clrf	7
  2969     0083  0181               	clrf	1
  2970     0084  0A81               	incf	1,f
  2971     0085                     l2237:
  2972                           
  2973                           ;main.c: 153:                 digit->c = 1;
  2974     0085  0834               	movf	SetSegments@digit,w
  2975     0086  3E02               	addlw	2
  2976     0087  0086               	movwf	6
  2977     0088  0187               	clrf	7
  2978     0089  0181               	clrf	1
  2979     008A  0A81               	incf	1,f
  2980     008B                     l2239:
  2981                           
  2982                           ;main.c: 154:                 digit->d = 0;
  2983     008B  0834               	movf	SetSegments@digit,w
  2984     008C  3E03               	addlw	3
  2985     008D  0086               	movwf	6
  2986     008E  0187               	clrf	7
  2987     008F  0181               	clrf	1
  2988     0090                     l2241:
  2989                           
  2990                           ;main.c: 155:                 digit->e = 0;
  2991     0090  0834               	movf	SetSegments@digit,w
  2992     0091  3E04               	addlw	4
  2993     0092  0086               	movwf	6
  2994     0093  0187               	clrf	7
  2995     0094  0181               	clrf	1
  2996     0095                     l2243:
  2997                           
  2998                           ;main.c: 156:                 digit->f = 0;
  2999     0095  0834               	movf	SetSegments@digit,w
  3000     0096  3E05               	addlw	5
  3001     0097  0086               	movwf	6
  3002     0098  0187               	clrf	7
  3003     0099  0181               	clrf	1
  3004     009A                     l2245:
  3005                           
  3006                           ;main.c: 157:                 digit->g = 0;
  3007     009A  0834               	movf	SetSegments@digit,w
  3008     009B  3E06               	addlw	6
  3009     009C  0086               	movwf	6
  3010     009D  0187               	clrf	7
  3011     009E  0181               	clrf	1
  3012                           
  3013                           ;main.c: 158:                 break;
  3014     009F  29FE               	goto	l240
  3015     00A0                     l2247:
  3016                           
  3017                           ;main.c: 161:                 digit->a = 1;
  3018     00A0  0834               	movf	SetSegments@digit,w
  3019     00A1  0086               	movwf	6
  3020     00A2  0187               	clrf	7
  3021     00A3  0181               	clrf	1
  3022     00A4  0A81               	incf	1,f
  3023                           
  3024                           ;main.c: 162:                 digit->b = 1;
  3025     00A5  0A34               	incf	SetSegments@digit,w
  3026     00A6  0086               	movwf	6
  3027     00A7  0187               	clrf	7
  3028     00A8  0181               	clrf	1
  3029     00A9  0A81               	incf	1,f
  3030     00AA                     l2249:
  3031                           
  3032                           ;main.c: 163:                 digit->c = 0;
  3033     00AA  0834               	movf	SetSegments@digit,w
  3034     00AB  3E02               	addlw	2
  3035     00AC  0086               	movwf	6
  3036     00AD  0187               	clrf	7
  3037     00AE  0181               	clrf	1
  3038     00AF                     l2251:
  3039                           
  3040                           ;main.c: 164:                 digit->d = 1;
  3041     00AF  0834               	movf	SetSegments@digit,w
  3042     00B0  3E03               	addlw	3
  3043     00B1  0086               	movwf	6
  3044     00B2  0187               	clrf	7
  3045     00B3  0181               	clrf	1
  3046     00B4  0A81               	incf	1,f
  3047     00B5                     l2253:
  3048                           
  3049                           ;main.c: 165:                 digit->e = 1;
  3050     00B5  0834               	movf	SetSegments@digit,w
  3051     00B6  3E04               	addlw	4
  3052     00B7  0086               	movwf	6
  3053     00B8  0187               	clrf	7
  3054     00B9  0181               	clrf	1
  3055     00BA  0A81               	incf	1,f
  3056     00BB                     l2255:
  3057                           
  3058                           ;main.c: 166:                 digit->f = 0;
  3059     00BB  0834               	movf	SetSegments@digit,w
  3060     00BC  3E05               	addlw	5
  3061     00BD  0086               	movwf	6
  3062     00BE  0187               	clrf	7
  3063     00BF  0181               	clrf	1
  3064     00C0                     l2257:
  3065                           
  3066                           ;main.c: 167:                 digit->g = 1;
  3067     00C0  0834               	movf	SetSegments@digit,w
  3068     00C1  3E06               	addlw	6
  3069     00C2  0086               	movwf	6
  3070     00C3  0187               	clrf	7
  3071     00C4  0181               	clrf	1
  3072     00C5  0A81               	incf	1,f
  3073                           
  3074                           ;main.c: 168:                 break;
  3075     00C6  29FE               	goto	l240
  3076     00C7                     l2259:
  3077                           
  3078                           ;main.c: 171:                 digit->a = 1;
  3079     00C7  0834               	movf	SetSegments@digit,w
  3080     00C8  0086               	movwf	6
  3081     00C9  0187               	clrf	7
  3082     00CA  0181               	clrf	1
  3083     00CB  0A81               	incf	1,f
  3084                           
  3085                           ;main.c: 172:                 digit->b = 1;
  3086     00CC  0A34               	incf	SetSegments@digit,w
  3087     00CD  0086               	movwf	6
  3088     00CE  0187               	clrf	7
  3089     00CF  0181               	clrf	1
  3090     00D0  0A81               	incf	1,f
  3091     00D1                     l2261:
  3092                           
  3093                           ;main.c: 173:                 digit->c = 1;
  3094     00D1  0834               	movf	SetSegments@digit,w
  3095     00D2  3E02               	addlw	2
  3096     00D3  0086               	movwf	6
  3097     00D4  0187               	clrf	7
  3098     00D5  0181               	clrf	1
  3099     00D6  0A81               	incf	1,f
  3100     00D7                     l2263:
  3101                           
  3102                           ;main.c: 174:                 digit->d = 1;
  3103     00D7  0834               	movf	SetSegments@digit,w
  3104     00D8  3E03               	addlw	3
  3105     00D9  0086               	movwf	6
  3106     00DA  0187               	clrf	7
  3107     00DB  0181               	clrf	1
  3108     00DC  0A81               	incf	1,f
  3109     00DD                     l2265:
  3110                           
  3111                           ;main.c: 175:                 digit->e = 0;
  3112     00DD  0834               	movf	SetSegments@digit,w
  3113     00DE  3E04               	addlw	4
  3114     00DF  0086               	movwf	6
  3115     00E0  0187               	clrf	7
  3116     00E1  0181               	clrf	1
  3117     00E2                     l2267:
  3118                           
  3119                           ;main.c: 176:                 digit->f = 0;
  3120     00E2  0834               	movf	SetSegments@digit,w
  3121     00E3  3E05               	addlw	5
  3122     00E4  0086               	movwf	6
  3123     00E5  0187               	clrf	7
  3124     00E6  0181               	clrf	1
  3125     00E7                     l2269:
  3126                           
  3127                           ;main.c: 177:                 digit->g = 1;
  3128     00E7  0834               	movf	SetSegments@digit,w
  3129     00E8  3E06               	addlw	6
  3130     00E9  0086               	movwf	6
  3131     00EA  0187               	clrf	7
  3132     00EB  0181               	clrf	1
  3133     00EC  0A81               	incf	1,f
  3134                           
  3135                           ;main.c: 178:                 break;
  3136     00ED  29FE               	goto	l240
  3137     00EE                     l2271:
  3138                           
  3139                           ;main.c: 181:                 digit->a = 0;
  3140     00EE  0834               	movf	SetSegments@digit,w
  3141     00EF  0086               	movwf	6
  3142     00F0  0187               	clrf	7
  3143     00F1  0181               	clrf	1
  3144     00F2                     l2273:
  3145                           
  3146                           ;main.c: 182:                 digit->b = 1;
  3147     00F2  0A34               	incf	SetSegments@digit,w
  3148     00F3  0086               	movwf	6
  3149     00F4  0187               	clrf	7
  3150     00F5  0181               	clrf	1
  3151     00F6  0A81               	incf	1,f
  3152     00F7                     l2275:
  3153                           
  3154                           ;main.c: 183:                 digit->c = 1;
  3155     00F7  0834               	movf	SetSegments@digit,w
  3156     00F8  3E02               	addlw	2
  3157     00F9  0086               	movwf	6
  3158     00FA  0187               	clrf	7
  3159     00FB  0181               	clrf	1
  3160     00FC  0A81               	incf	1,f
  3161     00FD                     l2277:
  3162                           
  3163                           ;main.c: 184:                 digit->d = 0;
  3164     00FD  0834               	movf	SetSegments@digit,w
  3165     00FE  3E03               	addlw	3
  3166     00FF  0086               	movwf	6
  3167     0100  0187               	clrf	7
  3168     0101  0181               	clrf	1
  3169     0102                     l2279:
  3170                           
  3171                           ;main.c: 185:                 digit->e = 0;
  3172     0102  0834               	movf	SetSegments@digit,w
  3173     0103  3E04               	addlw	4
  3174     0104  0086               	movwf	6
  3175     0105  0187               	clrf	7
  3176     0106  0181               	clrf	1
  3177     0107                     l2281:
  3178                           
  3179                           ;main.c: 186:                 digit->f = 1;
  3180     0107  0834               	movf	SetSegments@digit,w
  3181     0108  3E05               	addlw	5
  3182     0109  0086               	movwf	6
  3183     010A  0187               	clrf	7
  3184     010B  0181               	clrf	1
  3185     010C  0A81               	incf	1,f
  3186     010D                     l2283:
  3187                           
  3188                           ;main.c: 187:                 digit->g = 1;
  3189     010D  0834               	movf	SetSegments@digit,w
  3190     010E  3E06               	addlw	6
  3191     010F  0086               	movwf	6
  3192     0110  0187               	clrf	7
  3193     0111  0181               	clrf	1
  3194     0112  0A81               	incf	1,f
  3195                           
  3196                           ;main.c: 188:                 break;
  3197     0113  29FE               	goto	l240
  3198     0114                     l2285:
  3199                           
  3200                           ;main.c: 191:                 digit->a = 1;
  3201     0114  0834               	movf	SetSegments@digit,w
  3202     0115  0086               	movwf	6
  3203     0116  0187               	clrf	7
  3204     0117  0181               	clrf	1
  3205     0118  0A81               	incf	1,f
  3206     0119                     l2287:
  3207                           
  3208                           ;main.c: 192:                 digit->b = 0;
  3209     0119  0A34               	incf	SetSegments@digit,w
  3210     011A  0086               	movwf	6
  3211     011B  0187               	clrf	7
  3212     011C  0181               	clrf	1
  3213     011D                     l2289:
  3214                           
  3215                           ;main.c: 193:                 digit->c = 1;
  3216     011D  0834               	movf	SetSegments@digit,w
  3217     011E  3E02               	addlw	2
  3218     011F  0086               	movwf	6
  3219     0120  0187               	clrf	7
  3220     0121  0181               	clrf	1
  3221     0122  0A81               	incf	1,f
  3222     0123                     l2291:
  3223                           
  3224                           ;main.c: 194:                 digit->d = 1;
  3225     0123  0834               	movf	SetSegments@digit,w
  3226     0124  3E03               	addlw	3
  3227     0125  0086               	movwf	6
  3228     0126  0187               	clrf	7
  3229     0127  0181               	clrf	1
  3230     0128  0A81               	incf	1,f
  3231     0129                     l2293:
  3232                           
  3233                           ;main.c: 195:                 digit->e = 0;
  3234     0129  0834               	movf	SetSegments@digit,w
  3235     012A  3E04               	addlw	4
  3236     012B  0086               	movwf	6
  3237     012C  0187               	clrf	7
  3238     012D  0181               	clrf	1
  3239     012E                     l2295:
  3240                           
  3241                           ;main.c: 196:                 digit->f = 1;
  3242     012E  0834               	movf	SetSegments@digit,w
  3243     012F  3E05               	addlw	5
  3244     0130  0086               	movwf	6
  3245     0131  0187               	clrf	7
  3246     0132  0181               	clrf	1
  3247     0133  0A81               	incf	1,f
  3248     0134                     l2297:
  3249                           
  3250                           ;main.c: 197:                 digit->g = 1;
  3251     0134  0834               	movf	SetSegments@digit,w
  3252     0135  3E06               	addlw	6
  3253     0136  0086               	movwf	6
  3254     0137  0187               	clrf	7
  3255     0138  0181               	clrf	1
  3256     0139  0A81               	incf	1,f
  3257                           
  3258                           ;main.c: 198:                 break;
  3259     013A  29FE               	goto	l240
  3260     013B                     l2299:
  3261                           
  3262                           ;main.c: 201:                 digit->a = 1;
  3263     013B  0834               	movf	SetSegments@digit,w
  3264     013C  0086               	movwf	6
  3265     013D  0187               	clrf	7
  3266     013E  0181               	clrf	1
  3267     013F  0A81               	incf	1,f
  3268     0140                     l2301:
  3269                           
  3270                           ;main.c: 202:                 digit->b = 0;
  3271     0140  0A34               	incf	SetSegments@digit,w
  3272     0141  0086               	movwf	6
  3273     0142  0187               	clrf	7
  3274     0143  0181               	clrf	1
  3275     0144                     l2303:
  3276                           
  3277                           ;main.c: 203:                 digit->c = 1;
  3278     0144  0834               	movf	SetSegments@digit,w
  3279     0145  3E02               	addlw	2
  3280     0146  0086               	movwf	6
  3281     0147  0187               	clrf	7
  3282     0148  0181               	clrf	1
  3283     0149  0A81               	incf	1,f
  3284     014A                     l2305:
  3285                           
  3286                           ;main.c: 204:                 digit->d = 1;
  3287     014A  0834               	movf	SetSegments@digit,w
  3288     014B  3E03               	addlw	3
  3289     014C  0086               	movwf	6
  3290     014D  0187               	clrf	7
  3291     014E  0181               	clrf	1
  3292     014F  0A81               	incf	1,f
  3293     0150                     l2307:
  3294                           
  3295                           ;main.c: 205:                 digit->e = 1;
  3296     0150  0834               	movf	SetSegments@digit,w
  3297     0151  3E04               	addlw	4
  3298     0152  0086               	movwf	6
  3299     0153  0187               	clrf	7
  3300     0154  0181               	clrf	1
  3301     0155  0A81               	incf	1,f
  3302     0156                     l2309:
  3303                           
  3304                           ;main.c: 206:                 digit->f = 1;
  3305     0156  0834               	movf	SetSegments@digit,w
  3306     0157  3E05               	addlw	5
  3307     0158  0086               	movwf	6
  3308     0159  0187               	clrf	7
  3309     015A  0181               	clrf	1
  3310     015B  0A81               	incf	1,f
  3311     015C                     l2311:
  3312                           
  3313                           ;main.c: 207:                 digit->g = 1;
  3314     015C  0834               	movf	SetSegments@digit,w
  3315     015D  3E06               	addlw	6
  3316     015E  0086               	movwf	6
  3317     015F  0187               	clrf	7
  3318     0160  0181               	clrf	1
  3319     0161  0A81               	incf	1,f
  3320                           
  3321                           ;main.c: 208:                 break;
  3322     0162  29FE               	goto	l240
  3323     0163                     l2313:
  3324                           
  3325                           ;main.c: 211:                 digit->a = 1;
  3326     0163  0834               	movf	SetSegments@digit,w
  3327     0164  0086               	movwf	6
  3328     0165  0187               	clrf	7
  3329     0166  0181               	clrf	1
  3330     0167  0A81               	incf	1,f
  3331                           
  3332                           ;main.c: 212:                 digit->b = 1;
  3333     0168  0A34               	incf	SetSegments@digit,w
  3334     0169  0086               	movwf	6
  3335     016A  0187               	clrf	7
  3336     016B  0181               	clrf	1
  3337     016C  0A81               	incf	1,f
  3338     016D                     l2315:
  3339                           
  3340                           ;main.c: 213:                 digit->c = 1;
  3341     016D  0834               	movf	SetSegments@digit,w
  3342     016E  3E02               	addlw	2
  3343     016F  0086               	movwf	6
  3344     0170  0187               	clrf	7
  3345     0171  0181               	clrf	1
  3346     0172  0A81               	incf	1,f
  3347     0173                     l2317:
  3348                           
  3349                           ;main.c: 214:                 digit->d = 0;
  3350     0173  0834               	movf	SetSegments@digit,w
  3351     0174  3E03               	addlw	3
  3352     0175  0086               	movwf	6
  3353     0176  0187               	clrf	7
  3354     0177  0181               	clrf	1
  3355     0178                     l2319:
  3356                           
  3357                           ;main.c: 215:                 digit->e = 0;
  3358     0178  0834               	movf	SetSegments@digit,w
  3359     0179  3E04               	addlw	4
  3360     017A  0086               	movwf	6
  3361     017B  0187               	clrf	7
  3362     017C  0181               	clrf	1
  3363     017D                     l2321:
  3364                           
  3365                           ;main.c: 216:                 digit->f = 0;
  3366     017D  0834               	movf	SetSegments@digit,w
  3367     017E  3E05               	addlw	5
  3368     017F  0086               	movwf	6
  3369     0180  0187               	clrf	7
  3370     0181  0181               	clrf	1
  3371     0182                     l2323:
  3372                           
  3373                           ;main.c: 217:                 digit->g = 0;
  3374     0182  0834               	movf	SetSegments@digit,w
  3375     0183  3E06               	addlw	6
  3376     0184  0086               	movwf	6
  3377     0185  0187               	clrf	7
  3378     0186  0181               	clrf	1
  3379                           
  3380                           ;main.c: 218:                 break;
  3381     0187  29FE               	goto	l240
  3382     0188                     l2325:
  3383                           
  3384                           ;main.c: 221:                 digit->a = 1;
  3385     0188  0834               	movf	SetSegments@digit,w
  3386     0189  0086               	movwf	6
  3387     018A  0187               	clrf	7
  3388     018B  0181               	clrf	1
  3389     018C  0A81               	incf	1,f
  3390                           
  3391                           ;main.c: 222:                 digit->b = 1;
  3392     018D  0A34               	incf	SetSegments@digit,w
  3393     018E  0086               	movwf	6
  3394     018F  0187               	clrf	7
  3395     0190  0181               	clrf	1
  3396     0191  0A81               	incf	1,f
  3397     0192                     l2327:
  3398                           
  3399                           ;main.c: 223:                 digit->c = 1;
  3400     0192  0834               	movf	SetSegments@digit,w
  3401     0193  3E02               	addlw	2
  3402     0194  0086               	movwf	6
  3403     0195  0187               	clrf	7
  3404     0196  0181               	clrf	1
  3405     0197  0A81               	incf	1,f
  3406     0198                     l2329:
  3407                           
  3408                           ;main.c: 224:                 digit->d = 1;
  3409     0198  0834               	movf	SetSegments@digit,w
  3410     0199  3E03               	addlw	3
  3411     019A  0086               	movwf	6
  3412     019B  0187               	clrf	7
  3413     019C  0181               	clrf	1
  3414     019D  0A81               	incf	1,f
  3415     019E                     l2331:
  3416                           
  3417                           ;main.c: 225:                 digit->e = 1;
  3418     019E  0834               	movf	SetSegments@digit,w
  3419     019F  3E04               	addlw	4
  3420     01A0  0086               	movwf	6
  3421     01A1  0187               	clrf	7
  3422     01A2  0181               	clrf	1
  3423     01A3  0A81               	incf	1,f
  3424     01A4                     l2333:
  3425                           
  3426                           ;main.c: 226:                 digit->f = 1;
  3427     01A4  0834               	movf	SetSegments@digit,w
  3428     01A5  3E05               	addlw	5
  3429     01A6  0086               	movwf	6
  3430     01A7  0187               	clrf	7
  3431     01A8  0181               	clrf	1
  3432     01A9  0A81               	incf	1,f
  3433     01AA                     l2335:
  3434                           
  3435                           ;main.c: 227:                 digit->g = 1;
  3436     01AA  0834               	movf	SetSegments@digit,w
  3437     01AB  3E06               	addlw	6
  3438     01AC  0086               	movwf	6
  3439     01AD  0187               	clrf	7
  3440     01AE  0181               	clrf	1
  3441     01AF  0A81               	incf	1,f
  3442                           
  3443                           ;main.c: 228:                 break;
  3444     01B0  29FE               	goto	l240
  3445     01B1                     l2337:
  3446                           
  3447                           ;main.c: 231:                 digit->a = 1;
  3448     01B1  0834               	movf	SetSegments@digit,w
  3449     01B2  0086               	movwf	6
  3450     01B3  0187               	clrf	7
  3451     01B4  0181               	clrf	1
  3452     01B5  0A81               	incf	1,f
  3453                           
  3454                           ;main.c: 232:                 digit->b = 1;
  3455     01B6  0A34               	incf	SetSegments@digit,w
  3456     01B7  0086               	movwf	6
  3457     01B8  0187               	clrf	7
  3458     01B9  0181               	clrf	1
  3459     01BA  0A81               	incf	1,f
  3460     01BB                     l2339:
  3461                           
  3462                           ;main.c: 233:                 digit->c = 1;
  3463     01BB  0834               	movf	SetSegments@digit,w
  3464     01BC  3E02               	addlw	2
  3465     01BD  0086               	movwf	6
  3466     01BE  0187               	clrf	7
  3467     01BF  0181               	clrf	1
  3468     01C0  0A81               	incf	1,f
  3469     01C1                     l2341:
  3470                           
  3471                           ;main.c: 234:                 digit->d = 1;
  3472     01C1  0834               	movf	SetSegments@digit,w
  3473     01C2  3E03               	addlw	3
  3474     01C3  0086               	movwf	6
  3475     01C4  0187               	clrf	7
  3476     01C5  0181               	clrf	1
  3477     01C6  0A81               	incf	1,f
  3478     01C7                     l2343:
  3479                           
  3480                           ;main.c: 235:                 digit->e = 0;
  3481     01C7  0834               	movf	SetSegments@digit,w
  3482     01C8  3E04               	addlw	4
  3483     01C9  0086               	movwf	6
  3484     01CA  0187               	clrf	7
  3485     01CB  0181               	clrf	1
  3486     01CC                     l2345:
  3487                           
  3488                           ;main.c: 236:                 digit->f = 1;
  3489     01CC  0834               	movf	SetSegments@digit,w
  3490     01CD  3E05               	addlw	5
  3491     01CE  0086               	movwf	6
  3492     01CF  0187               	clrf	7
  3493     01D0  0181               	clrf	1
  3494     01D1  0A81               	incf	1,f
  3495     01D2                     l2347:
  3496                           
  3497                           ;main.c: 237:                 digit->g = 1;
  3498     01D2  0834               	movf	SetSegments@digit,w
  3499     01D3  3E06               	addlw	6
  3500     01D4  0086               	movwf	6
  3501     01D5  0187               	clrf	7
  3502     01D6  0181               	clrf	1
  3503     01D7  0A81               	incf	1,f
  3504                           
  3505                           ;main.c: 238:                 break;
  3506     01D8  29FE               	goto	l240
  3507     01D9                     l2351:
  3508                           
  3509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3510                           ; Switch size 1, requested type "simple"
  3511                           ; Number of cases is 1, Range of values is 0 to 0
  3512                           ; switch strategies available:
  3513                           ; Name         Instructions Cycles
  3514                           ; simple_byte            4     3 (average)
  3515                           ; direct_byte            8     6 (fixed)
  3516                           ; jumptable            260     6 (fixed)
  3517                           ;	Chosen strategy is simple_byte
  3518     01D9  0832               	movf	SetSegments@a+1,w
  3519     01DA  3A00               	xorlw	0	; case 0
  3520     01DB  1903               	skipnz
  3521     01DC  29DE               	goto	l2519
  3522     01DD  29FE               	goto	l240
  3523     01DE                     l2519:
  3524                           
  3525                           ; Switch size 1, requested type "simple"
  3526                           ; Number of cases is 10, Range of values is 0 to 9
  3527                           ; switch strategies available:
  3528                           ; Name         Instructions Cycles
  3529                           ; direct_byte           26     6 (fixed)
  3530                           ; simple_byte           31    16 (average)
  3531                           ; jumptable            260     6 (fixed)
  3532                           ;	Chosen strategy is simple_byte
  3533     01DE  0831               	movf	SetSegments@a,w
  3534     01DF  3A00               	xorlw	0	; case 0
  3535     01E0  1903               	skipnz
  3536     01E1  2854               	goto	l2221
  3537     01E2  3A01               	xorlw	1	; case 1
  3538     01E3  1903               	skipnz
  3539     01E4  287C               	goto	l2233
  3540     01E5  3A03               	xorlw	3	; case 2
  3541     01E6  1903               	skipnz
  3542     01E7  28A0               	goto	l2247
  3543     01E8  3A01               	xorlw	1	; case 3
  3544     01E9  1903               	skipnz
  3545     01EA  28C7               	goto	l2259
  3546     01EB  3A07               	xorlw	7	; case 4
  3547     01EC  1903               	skipnz
  3548     01ED  28EE               	goto	l2271
  3549     01EE  3A01               	xorlw	1	; case 5
  3550     01EF  1903               	skipnz
  3551     01F0  2914               	goto	l2285
  3552     01F1  3A03               	xorlw	3	; case 6
  3553     01F2  1903               	skipnz
  3554     01F3  293B               	goto	l2299
  3555     01F4  3A01               	xorlw	1	; case 7
  3556     01F5  1903               	skipnz
  3557     01F6  2963               	goto	l2313
  3558     01F7  3A0F               	xorlw	15	; case 8
  3559     01F8  1903               	skipnz
  3560     01F9  2988               	goto	l2325
  3561     01FA  3A01               	xorlw	1	; case 9
  3562     01FB  1903               	skipnz
  3563     01FC  29B1               	goto	l2337
  3564     01FD  29FE               	goto	l240
  3565     01FE                     l240:
  3566     01FE  0008               	return
  3567     01FF                     __end_of_SetSegments:
  3568                           
  3569                           	psect	text12
  3570     074E                     __ptext12:	
  3571 ;; *************** function _ClearDigit *****************
  3572 ;; Defined at:
  3573 ;;		line 82 in file "main.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  digit           1    wreg     PTR struct digit
  3576 ;;		 -> one(7), ten(7), hundred(7), 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  digit           1   17[BANK0 ] PTR struct digit
  3579 ;;		 -> one(7), ten(7), hundred(7), 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3589 ;;      Params:         0       0       0       0       0       0       0       0
  3590 ;;      Locals:         0       1       0       0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0
  3592 ;;      Totals:         0       1       0       0       0       0       0       0
  3593 ;;Total ram usage:        1 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 5
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_main
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603     074E                     _ClearDigit:	
  3604                           ;psect for function _ClearDigit
  3605                           
  3606                           
  3607                           ;incstack = 0
  3608                           ; Regs used in _ClearDigit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3609                           ;ClearDigit@digit stored from wreg
  3610     074E  0020               	movlb	0	; select bank0
  3611     074F  00B1               	movwf	ClearDigit@digit
  3612     0750                     l2095:
  3613                           
  3614                           ;main.c: 83:     digit->a = 0;
  3615     0750  0831               	movf	ClearDigit@digit,w
  3616     0751  0086               	movwf	6
  3617     0752  0187               	clrf	7
  3618     0753  0181               	clrf	1
  3619                           
  3620                           ;main.c: 84:     digit->b = 0;
  3621     0754  0A31               	incf	ClearDigit@digit,w
  3622     0755  0086               	movwf	6
  3623     0756  0187               	clrf	7
  3624     0757  0181               	clrf	1
  3625     0758                     l2097:
  3626                           
  3627                           ;main.c: 85:     digit->c = 0;
  3628     0758  0831               	movf	ClearDigit@digit,w
  3629     0759  3E02               	addlw	2
  3630     075A  0086               	movwf	6
  3631     075B  0187               	clrf	7
  3632     075C  0181               	clrf	1
  3633     075D                     l2099:
  3634                           
  3635                           ;main.c: 86:     digit->d = 0;
  3636     075D  0831               	movf	ClearDigit@digit,w
  3637     075E  3E03               	addlw	3
  3638     075F  0086               	movwf	6
  3639     0760  0187               	clrf	7
  3640     0761  0181               	clrf	1
  3641     0762                     l2101:
  3642                           
  3643                           ;main.c: 87:     digit->e = 0;
  3644     0762  0831               	movf	ClearDigit@digit,w
  3645     0763  3E04               	addlw	4
  3646     0764  0086               	movwf	6
  3647     0765  0187               	clrf	7
  3648     0766  0181               	clrf	1
  3649     0767                     l2103:
  3650                           
  3651                           ;main.c: 88:     digit->f = 0;
  3652     0767  0831               	movf	ClearDigit@digit,w
  3653     0768  3E05               	addlw	5
  3654     0769  0086               	movwf	6
  3655     076A  0187               	clrf	7
  3656     076B  0181               	clrf	1
  3657     076C                     l2105:
  3658                           
  3659                           ;main.c: 89:     digit->g = 0;
  3660     076C  0831               	movf	ClearDigit@digit,w
  3661     076D  3E06               	addlw	6
  3662     076E  0086               	movwf	6
  3663     076F  0187               	clrf	7
  3664     0770  0181               	clrf	1
  3665     0771                     l219:
  3666     0771  0008               	return
  3667     0772                     __end_of_ClearDigit:
  3668                           
  3669                           	psect	intentry
  3670     0004                     __pintentry:	
  3671 ;; *************** function _INTERRUPT_InterruptManager *****************
  3672 ;; Defined at:
  3673 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3687 ;;      Params:         0       0       0       0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 4
  3694 ;; This function calls:
  3695 ;;		_TMR1_OverflowISR
  3696 ;; This function is called by:
  3697 ;;		Interrupt level 1
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701     0004                     _INTERRUPT_InterruptManager:
  3702                           
  3703                           ;incstack = 0
  3704     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3705                           
  3706                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3707     0005  3180               	pagesel	$
  3708     0006                     i1l2117:
  3709                           
  3710                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
  3711     0006  1F0B               	btfss	11,6	;volatile
  3712     0007  2809               	goto	u119_21
  3713     0008  280A               	goto	u119_20
  3714     0009                     u119_21:
  3715     0009  2817               	goto	i1l92
  3716     000A                     u119_20:
  3717     000A                     i1l2119:
  3718                           
  3719                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3720     000A  0021               	movlb	1	; select bank1
  3721     000B  1C11               	btfss	17,0	;volatile
  3722     000C  280E               	goto	u120_21
  3723     000D  280F               	goto	u120_20
  3724     000E                     u120_21:
  3725     000E  2817               	goto	i1l92
  3726     000F                     u120_20:
  3727     000F                     i1l2121:
  3728     000F  0020               	movlb	0	; select bank0
  3729     0010  1C11               	btfss	17,0	;volatile
  3730     0011  2813               	goto	u121_21
  3731     0012  2814               	goto	u121_20
  3732     0013                     u121_21:
  3733     0013  2817               	goto	i1l92
  3734     0014                     u121_20:
  3735     0014                     i1l2123:
  3736                           
  3737                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             TMR1_OverflowISR();
  3738     0014  3187  27A7  3180   	fcall	_TMR1_OverflowISR
  3739     0017                     i1l92:	
  3740                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
  3741                           
  3742     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3743     0018  0009               	retfie
  3744     0019                     __end_of_INTERRUPT_InterruptManager:
  3745                           
  3746                           	psect	text14
  3747     07A7                     __ptext14:	
  3748 ;; *************** function _TMR1_OverflowISR *****************
  3749 ;; Defined at:
  3750 ;;		line 150 in file "mcc_generated_files/timer/src/tmr1.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3764 ;;      Params:         0       0       0       0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0
  3767 ;;      Totals:         0       0       0       0       0       0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used: 1
  3770 ;; Hardware stack levels required when called: 3
  3771 ;; This function calls:
  3772 ;;		Absolute function
  3773 ;;		_TMR1_DefaultOverflowCallback
  3774 ;;		_TMR1_Write
  3775 ;;		_Tmr1CallBack
  3776 ;; This function is called by:
  3777 ;;		_INTERRUPT_InterruptManager
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781     07A7                     _TMR1_OverflowISR:	
  3782                           ;psect for function _TMR1_OverflowISR
  3783                           
  3784     07A7                     i1l2087:	
  3785                           ;incstack = 0
  3786                           ; Regs used in _TMR1_OverflowISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3787                           
  3788                           
  3789                           ;mcc_generated_files/timer/src/tmr1.c: 154:     PIR1bits.TMR1IF = 0;
  3790     07A7  0020               	movlb	0	; select bank0
  3791     07A8  1011               	bcf	17,0	;volatile
  3792     07A9                     i1l2089:
  3793                           
  3794                           ;mcc_generated_files/timer/src/tmr1.c: 155:     TMR1_Write(timer1ReloadVal);
  3795     07A9  085B               	movf	_timer1ReloadVal+1,w	;volatile
  3796     07AA  00F1               	movwf	TMR1_Write@timerVal+1
  3797     07AB  085A               	movf	_timer1ReloadVal,w	;volatile
  3798     07AC  00F0               	movwf	TMR1_Write@timerVal
  3799     07AD  3187  27BD  3187   	fcall	_TMR1_Write
  3800     07B0                     i1l2091:
  3801                           
  3802                           ;mcc_generated_files/timer/src/tmr1.c: 157:     if(TMR1_OverflowCallback)
  3803     07B0  0020               	movlb	0	; select bank0
  3804     07B1  0858               	movf	_TMR1_OverflowCallback,w
  3805     07B2  0459               	iorwf	_TMR1_OverflowCallback+1,w
  3806     07B3  1903               	btfsc	3,2
  3807     07B4  2FB6               	goto	u114_21
  3808     07B5  2FB7               	goto	u114_20
  3809     07B6                     u114_21:
  3810     07B6  2FBC               	goto	i1l174
  3811     07B7                     u114_20:
  3812     07B7                     i1l2093:
  3813                           
  3814                           ;mcc_generated_files/timer/src/tmr1.c: 158:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          159:         TMR1_OverflowCallback();
  3815     07B7  0859               	movf	_TMR1_OverflowCallback+1,w
  3816     07B8  008A               	movwf	10
  3817     07B9  0858               	movf	_TMR1_OverflowCallback,w
  3818     07BA  000A               	callw
  3819     07BB  3187               	pagesel	$
  3820     07BC                     i1l174:
  3821     07BC  0008               	return
  3822     07BD                     __end_of_TMR1_OverflowISR:
  3823                           
  3824                           	psect	text15
  3825     0003                     __ptext15:	
  3826 ;; *************** function _TMR1_DefaultOverflowCallback *****************
  3827 ;; Defined at:
  3828 ;;		line 168 in file "mcc_generated_files/timer/src/tmr1.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		None
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3842 ;;      Params:         0       0       0       0       0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0
  3845 ;;      Totals:         0       0       0       0       0       0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used: 1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_TMR1_Initialize
  3852 ;;		_TMR1_OverflowISR
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856     0003                     _TMR1_DefaultOverflowCallback:	
  3857                           ;psect for function _TMR1_DefaultOverflowCallback
  3858                           
  3859     0003                     i1l180:	
  3860                           ;incstack = 0
  3861                           ; Regs used in _TMR1_DefaultOverflowCallback: []
  3862                           
  3863     0003  0008               	return
  3864     0004                     __end_of_TMR1_DefaultOverflowCallback:
  3865                           
  3866                           	psect	text16
  3867     03D2                     __ptext16:	
  3868 ;; *************** function _Tmr1CallBack *****************
  3869 ;; Defined at:
  3870 ;;		line 92 in file "main.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3884 ;;      Params:         0       0       0       0       0       0       0       0
  3885 ;;      Locals:         0       1       0       0       0       0       0       0
  3886 ;;      Temps:          0       3       0       0       0       0       0       0
  3887 ;;      Totals:         0       4       0       0       0       0       0       0
  3888 ;;Total ram usage:        4 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 2
  3891 ;; This function calls:
  3892 ;;		i1_Display
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;;		_TMR1_OverflowISR
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899     03D2                     _Tmr1CallBack:	
  3900                           ;psect for function _Tmr1CallBack
  3901                           
  3902     03D2                     i1l1831:	
  3903                           ;incstack = 0
  3904                           ; Regs used in _Tmr1CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3905                           
  3906                           
  3907                           ;main.c: 93:     toggle = 1 - toggle;
  3908     03D2  0020               	movlb	0	; select bank0
  3909     03D3  0842               	movf	_toggle,w
  3910     03D4  3C01               	sublw	1
  3911     03D5  00C2               	movwf	_toggle
  3912     03D6                     i1l1833:
  3913                           
  3914                           ;main.c: 95:     PORTAbits.RA5 = toggle;
  3915     03D6  0C42               	rrf	_toggle,w
  3916     03D7  1C03               	skipc
  3917     03D8  128C               	bcf	12,5	;volatile
  3918     03D9  1803               	skipnc
  3919     03DA  168C               	bsf	12,5	;volatile
  3920                           
  3921                           ;main.c: 97:     PORTAbits.RA4 = toggle ^ !hundred.a &
  3922     03DB  01B0               	clrf	_Tmr1CallBack$1085
  3923     03DC                     i1l1835:
  3924     03DC  0843               	movf	_hundred,w
  3925     03DD  1D03               	btfss	3,2
  3926     03DE  2BE0               	goto	u88_21
  3927     03DF  2BE1               	goto	u88_20
  3928     03E0                     u88_21:
  3929     03E0  2BF7               	goto	i1l1847
  3930     03E1                     u88_20:
  3931     03E1                     i1l1837:
  3932     03E1  0846               	movf	_hundred+3,w
  3933     03E2  1D03               	btfss	3,2
  3934     03E3  2BE5               	goto	u89_21
  3935     03E4  2BE6               	goto	u89_20
  3936     03E5                     u89_21:
  3937     03E5  2BF7               	goto	i1l1847
  3938     03E6                     u89_20:
  3939     03E6                     i1l1839:
  3940     03E6  0847               	movf	_hundred+4,w
  3941     03E7  1D03               	btfss	3,2
  3942     03E8  2BEA               	goto	u90_21
  3943     03E9  2BEB               	goto	u90_20
  3944     03EA                     u90_21:
  3945     03EA  2BF7               	goto	i1l1847
  3946     03EB                     u90_20:
  3947     03EB                     i1l1841:
  3948     03EB  0848               	movf	_hundred+5,w
  3949     03EC  1D03               	btfss	3,2
  3950     03ED  2BEF               	goto	u91_21
  3951     03EE  2BF0               	goto	u91_20
  3952     03EF                     u91_21:
  3953     03EF  2BF7               	goto	i1l1847
  3954     03F0                     u91_20:
  3955     03F0                     i1l1843:
  3956     03F0  0849               	movf	_hundred+6,w
  3957     03F1  1D03               	btfss	3,2
  3958     03F2  2BF4               	goto	u92_21
  3959     03F3  2BF5               	goto	u92_20
  3960     03F4                     u92_21:
  3961     03F4  2BF7               	goto	i1l1847
  3962     03F5                     u92_20:
  3963     03F5                     i1l1845:
  3964     03F5  01B0               	clrf	_Tmr1CallBack$1085
  3965     03F6  0AB0               	incf	_Tmr1CallBack$1085,f
  3966     03F7                     i1l1847:
  3967     03F7  0844               	movf	_hundred+1,w
  3968     03F8  0545               	andwf	_hundred+2,w
  3969     03F9  0530               	andwf	_Tmr1CallBack$1085,w
  3970     03FA  0642               	xorwf	_toggle,w
  3971     03FB  00AD               	movwf	??_Tmr1CallBack
  3972     03FC  0EAD               	swapf	??_Tmr1CallBack,f
  3973     03FD  080C               	movf	12,w	;volatile
  3974     03FE  062D               	xorwf	??_Tmr1CallBack,w
  3975     03FF  39EF               	andlw	-17
  3976     0400  062D               	xorwf	??_Tmr1CallBack,w
  3977     0401  008C               	movwf	12	;volatile
  3978                           
  3979                           ;main.c: 106:     PORTCbits.RC5 = toggle ^ ten.a;
  3980     0402  084A               	movf	_ten,w
  3981     0403  0642               	xorwf	_toggle,w
  3982     0404  00AD               	movwf	??_Tmr1CallBack
  3983     0405  0EAD               	swapf	??_Tmr1CallBack,f
  3984     0406  0DAD               	rlf	??_Tmr1CallBack,f
  3985     0407  080E               	movf	14,w	;volatile
  3986     0408  062D               	xorwf	??_Tmr1CallBack,w
  3987     0409  39DF               	andlw	-33
  3988     040A  062D               	xorwf	??_Tmr1CallBack,w
  3989     040B  008E               	movwf	14	;volatile
  3990                           
  3991                           ;main.c: 107:     PORTCbits.RC4 = toggle ^ ten.b;
  3992     040C  084B               	movf	_ten+1,w
  3993     040D  0642               	xorwf	_toggle,w
  3994     040E  00AD               	movwf	??_Tmr1CallBack
  3995     040F  0EAD               	swapf	??_Tmr1CallBack,f
  3996     0410  080E               	movf	14,w	;volatile
  3997     0411  062D               	xorwf	??_Tmr1CallBack,w
  3998     0412  39EF               	andlw	-17
  3999     0413  062D               	xorwf	??_Tmr1CallBack,w
  4000     0414  008E               	movwf	14	;volatile
  4001                           
  4002                           ;main.c: 108:     PORTCbits.RC3 = toggle ^ ten.c;
  4003     0415  084C               	movf	_ten+2,w
  4004     0416  0642               	xorwf	_toggle,w
  4005     0417  00AD               	movwf	??_Tmr1CallBack
  4006     0418  0DAD               	rlf	??_Tmr1CallBack,f
  4007     0419  0DAD               	rlf	??_Tmr1CallBack,f
  4008     041A  0DAD               	rlf	??_Tmr1CallBack,f
  4009     041B  080E               	movf	14,w	;volatile
  4010     041C  062D               	xorwf	??_Tmr1CallBack,w
  4011     041D  39F7               	andlw	-9
  4012     041E  062D               	xorwf	??_Tmr1CallBack,w
  4013     041F  008E               	movwf	14	;volatile
  4014                           
  4015                           ;main.c: 109:     PORTCbits.RC6 = toggle ^ ten.d;
  4016     0420  084D               	movf	_ten+3,w
  4017     0421  0642               	xorwf	_toggle,w
  4018     0422  00AD               	movwf	??_Tmr1CallBack
  4019     0423  0EAD               	swapf	??_Tmr1CallBack,f
  4020     0424  0DAD               	rlf	??_Tmr1CallBack,f
  4021     0425  0DAD               	rlf	??_Tmr1CallBack,f
  4022     0426  080E               	movf	14,w	;volatile
  4023     0427  062D               	xorwf	??_Tmr1CallBack,w
  4024     0428  39BF               	andlw	-65
  4025     0429  062D               	xorwf	??_Tmr1CallBack,w
  4026     042A  008E               	movwf	14	;volatile
  4027                           
  4028                           ;main.c: 110:     PORTCbits.RC7 = toggle ^ ten.e;
  4029     042B  084E               	movf	_ten+4,w
  4030     042C  0642               	xorwf	_toggle,w
  4031     042D  00AD               	movwf	??_Tmr1CallBack
  4032     042E  0CAD               	rrf	??_Tmr1CallBack,f
  4033     042F  0CAD               	rrf	??_Tmr1CallBack,f
  4034     0430  080E               	movf	14,w	;volatile
  4035     0431  062D               	xorwf	??_Tmr1CallBack,w
  4036     0432  397F               	andlw	-129
  4037     0433  062D               	xorwf	??_Tmr1CallBack,w
  4038     0434  008E               	movwf	14	;volatile
  4039                           
  4040                           ;main.c: 111:     PORTBbits.RB7 = toggle ^ ten.f;
  4041     0435  084F               	movf	_ten+5,w
  4042     0436  0642               	xorwf	_toggle,w
  4043     0437  00AD               	movwf	??_Tmr1CallBack
  4044     0438  0CAD               	rrf	??_Tmr1CallBack,f
  4045     0439  0CAD               	rrf	??_Tmr1CallBack,f
  4046     043A  080D               	movf	13,w	;volatile
  4047     043B  062D               	xorwf	??_Tmr1CallBack,w
  4048     043C  397F               	andlw	-129
  4049     043D  062D               	xorwf	??_Tmr1CallBack,w
  4050     043E  008D               	movwf	13	;volatile
  4051                           
  4052                           ;main.c: 112:     PORTBbits.RB6 = toggle ^ ten.g;
  4053     043F  0850               	movf	_ten+6,w
  4054     0440  0642               	xorwf	_toggle,w
  4055     0441  00AD               	movwf	??_Tmr1CallBack
  4056     0442  0EAD               	swapf	??_Tmr1CallBack,f
  4057     0443  0DAD               	rlf	??_Tmr1CallBack,f
  4058     0444  0DAD               	rlf	??_Tmr1CallBack,f
  4059     0445  080D               	movf	13,w	;volatile
  4060     0446  062D               	xorwf	??_Tmr1CallBack,w
  4061     0447  39BF               	andlw	-65
  4062     0448  062D               	xorwf	??_Tmr1CallBack,w
  4063     0449  008D               	movwf	13	;volatile
  4064                           
  4065                           ;main.c: 114:     PORTBbits.RB5 = toggle ^ one.a;
  4066     044A  0851               	movf	_one,w
  4067     044B  0642               	xorwf	_toggle,w
  4068     044C  00AD               	movwf	??_Tmr1CallBack
  4069     044D  0EAD               	swapf	??_Tmr1CallBack,f
  4070     044E  0DAD               	rlf	??_Tmr1CallBack,f
  4071     044F  080D               	movf	13,w	;volatile
  4072     0450  062D               	xorwf	??_Tmr1CallBack,w
  4073     0451  39DF               	andlw	-33
  4074     0452  062D               	xorwf	??_Tmr1CallBack,w
  4075     0453  008D               	movwf	13	;volatile
  4076                           
  4077                           ;main.c: 115:     PORTBbits.RB4 = toggle ^ one.b;
  4078     0454  0852               	movf	_one+1,w
  4079     0455  0642               	xorwf	_toggle,w
  4080     0456  00AD               	movwf	??_Tmr1CallBack
  4081     0457  0EAD               	swapf	??_Tmr1CallBack,f
  4082     0458  080D               	movf	13,w	;volatile
  4083     0459  062D               	xorwf	??_Tmr1CallBack,w
  4084     045A  39EF               	andlw	-17
  4085     045B  062D               	xorwf	??_Tmr1CallBack,w
  4086     045C  008D               	movwf	13	;volatile
  4087                           
  4088                           ;main.c: 116:     PORTCbits.RC2 = toggle ^ one.c;
  4089     045D  0853               	movf	_one+2,w
  4090     045E  0642               	xorwf	_toggle,w
  4091     045F  00AD               	movwf	??_Tmr1CallBack
  4092     0460  0DAD               	rlf	??_Tmr1CallBack,f
  4093     0461  0DAD               	rlf	??_Tmr1CallBack,f
  4094     0462  080E               	movf	14,w	;volatile
  4095     0463  062D               	xorwf	??_Tmr1CallBack,w
  4096     0464  39FB               	andlw	-5
  4097     0465  062D               	xorwf	??_Tmr1CallBack,w
  4098     0466  008E               	movwf	14	;volatile
  4099                           
  4100                           ;main.c: 117:     PORTCbits.RC1 = toggle ^ one.d;
  4101     0467  0854               	movf	_one+3,w
  4102     0468  0642               	xorwf	_toggle,w
  4103     0469  00AD               	movwf	??_Tmr1CallBack
  4104     046A  0DAD               	rlf	??_Tmr1CallBack,f
  4105     046B  080E               	movf	14,w	;volatile
  4106     046C  062D               	xorwf	??_Tmr1CallBack,w
  4107     046D  39FD               	andlw	-3
  4108     046E  062D               	xorwf	??_Tmr1CallBack,w
  4109     046F  008E               	movwf	14	;volatile
  4110                           
  4111                           ;main.c: 118:     PORTCbits.RC0 = toggle ^ one.e;
  4112     0470  0842               	movf	_toggle,w
  4113     0471  0655               	xorwf	_one+4,w
  4114     0472  00AD               	movwf	??_Tmr1CallBack
  4115     0473  080E               	movf	14,w	;volatile
  4116     0474  062D               	xorwf	??_Tmr1CallBack,w
  4117     0475  39FE               	andlw	-2
  4118     0476  062D               	xorwf	??_Tmr1CallBack,w
  4119     0477  008E               	movwf	14	;volatile
  4120                           
  4121                           ;main.c: 119:     PORTAbits.RA2 = toggle ^ one.f;
  4122     0478  0856               	movf	_one+5,w
  4123     0479  0642               	xorwf	_toggle,w
  4124     047A  00AD               	movwf	??_Tmr1CallBack
  4125     047B  0DAD               	rlf	??_Tmr1CallBack,f
  4126     047C  0DAD               	rlf	??_Tmr1CallBack,f
  4127     047D  080C               	movf	12,w	;volatile
  4128     047E  062D               	xorwf	??_Tmr1CallBack,w
  4129     047F  39FB               	andlw	-5
  4130     0480  062D               	xorwf	??_Tmr1CallBack,w
  4131     0481  008C               	movwf	12	;volatile
  4132                           
  4133                           ;main.c: 120:     PORTAbits.RA1 = toggle ^ one.g;
  4134     0482  0857               	movf	_one+6,w
  4135     0483  0642               	xorwf	_toggle,w
  4136     0484  00AD               	movwf	??_Tmr1CallBack
  4137     0485  0DAD               	rlf	??_Tmr1CallBack,f
  4138     0486  080C               	movf	12,w	;volatile
  4139     0487  062D               	xorwf	??_Tmr1CallBack,w
  4140     0488  39FD               	andlw	-3
  4141     0489  062D               	xorwf	??_Tmr1CallBack,w
  4142     048A  008C               	movwf	12	;volatile
  4143                           
  4144                           ;main.c: 122:     if (RA0Value)
  4145     048B  085E               	movf	_RA0Value,w
  4146     048C  1903               	btfsc	3,2
  4147     048D  2C8F               	goto	u93_21
  4148     048E  2C90               	goto	u93_20
  4149     048F                     u93_21:
  4150     048F  2C9F               	goto	i1l223
  4151     0490                     u93_20:
  4152     0490                     i1l1849:
  4153                           
  4154                           ;main.c: 123:     {;main.c: 124:         RA0Value = 0;
  4155     0490  01DE               	clrf	_RA0Value
  4156     0491                     i1l1851:
  4157                           
  4158                           ;main.c: 125:         Display(++counter);
  4159     0491  3001               	movlw	1
  4160     0492  00AD               	movwf	??_Tmr1CallBack
  4161     0493  082D               	movf	??_Tmr1CallBack,w
  4162     0494  07C1               	addwf	_counter,f
  4163     0495  0841               	movf	_counter,w
  4164     0496  00AE               	movwf	??_Tmr1CallBack+1
  4165     0497  01AF               	clrf	??_Tmr1CallBack+2
  4166     0498  082E               	movf	??_Tmr1CallBack+1,w
  4167     0499  00A2               	movwf	i1Display@a
  4168     049A  082F               	movf	??_Tmr1CallBack+2,w
  4169     049B  00A3               	movwf	i1Display@a+1
  4170     049C  3185  252A  3183   	fcall	i1_Display
  4171     049F                     i1l223:
  4172     049F  0008               	return
  4173     04A0                     __end_of_Tmr1CallBack:
  4174                           
  4175                           	psect	text17
  4176     052A                     __ptext17:	
  4177 ;; *************** function i1_Display *****************
  4178 ;; Defined at:
  4179 ;;		line 243 in file "main.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  a               2    2[BANK0 ] int 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  hundreds        2   11[BANK0 ] int 
  4184 ;;  tens            2    9[BANK0 ] int 
  4185 ;;  ones            2    7[BANK0 ] int 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4195 ;;      Params:         0       2       0       0       0       0       0       0
  4196 ;;      Locals:         0       6       0       0       0       0       0       0
  4197 ;;      Temps:          0       3       0       0       0       0       0       0
  4198 ;;      Totals:         0      11       0       0       0       0       0       0
  4199 ;;Total ram usage:       11 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; Hardware stack levels required when called: 1
  4202 ;; This function calls:
  4203 ;;		i1_SetSegments
  4204 ;;		i1___awdiv
  4205 ;;		i1___awmod
  4206 ;; This function is called by:
  4207 ;;		_Tmr1CallBack
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211     052A                     i1_Display:	
  4212                           ;psect for function i1_Display
  4213                           
  4214     052A                     i1l1751:	
  4215                           ;incstack = 0
  4216                           ; Regs used in i1_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4217                           
  4218                           
  4219                           ;main.c: 244:     int ones = a % 10;
  4220     052A  300A               	movlw	10
  4221     052B  00F9               	movwf	i1___awmod@divisor
  4222     052C  3000               	movlw	0
  4223     052D  00FA               	movwf	i1___awmod@divisor+1
  4224     052E  0020               	movlb	0	; select bank0
  4225     052F  0823               	movf	i1Display@a+1,w
  4226     0530  00FC               	movwf	i1___awmod@dividend+1
  4227     0531  0822               	movf	i1Display@a,w
  4228     0532  00FB               	movwf	i1___awmod@dividend
  4229     0533  3186  26B7  3185   	fcall	i1___awmod
  4230     0536  087A               	movf	?i1___awmod+1,w
  4231     0537  0020               	movlb	0	; select bank0
  4232     0538  00A8               	movwf	i1Display@ones+1
  4233     0539  0879               	movf	?i1___awmod,w
  4234     053A  00A7               	movwf	i1Display@ones
  4235                           
  4236                           ;main.c: 245:     int tens = (a / 10) % 10;
  4237     053B  300A               	movlw	10
  4238     053C  00F9               	movwf	i1___awmod@divisor
  4239     053D  3000               	movlw	0
  4240     053E  00FA               	movwf	i1___awmod@divisor+1
  4241     053F  300A               	movlw	10
  4242     0540  00F0               	movwf	i1___awdiv@divisor
  4243     0541  3000               	movlw	0
  4244     0542  00F1               	movwf	i1___awdiv@divisor+1
  4245     0543  0823               	movf	i1Display@a+1,w
  4246     0544  00F3               	movwf	i1___awdiv@dividend+1
  4247     0545  0822               	movf	i1Display@a,w
  4248     0546  00F2               	movwf	i1___awdiv@dividend
  4249     0547  3186  2658  3185   	fcall	i1___awdiv
  4250     054A  0871               	movf	?i1___awdiv+1,w
  4251     054B  00FC               	movwf	i1___awmod@dividend+1
  4252     054C  0870               	movf	?i1___awdiv,w
  4253     054D  00FB               	movwf	i1___awmod@dividend
  4254     054E  3186  26B7  3185   	fcall	i1___awmod
  4255     0551  087A               	movf	?i1___awmod+1,w
  4256     0552  0020               	movlb	0	; select bank0
  4257     0553  00AA               	movwf	i1Display@tens+1
  4258     0554  0879               	movf	?i1___awmod,w
  4259     0555  00A9               	movwf	i1Display@tens
  4260     0556                     i1l1753:
  4261                           
  4262                           ;main.c: 246:     int hundreds = a > 99;
  4263     0556  0823               	movf	i1Display@a+1,w
  4264     0557  3A80               	xorlw	128
  4265     0558  00A4               	movwf	??i1_Display
  4266     0559  3080               	movlw	128
  4267     055A  0224               	subwf	??i1_Display,w
  4268     055B  1D03               	skipz
  4269     055C  2D5F               	goto	u83_25
  4270     055D  3064               	movlw	100
  4271     055E  0222               	subwf	i1Display@a,w
  4272     055F                     u83_25:
  4273     055F  1803               	skipnc
  4274     0560  2D62               	goto	u83_21
  4275     0561  2D64               	goto	u83_20
  4276     0562                     u83_21:
  4277     0562  3001               	movlw	1
  4278     0563  2D65               	goto	u84_20
  4279     0564                     u83_20:
  4280     0564  3000               	movlw	0
  4281     0565                     u84_20:
  4282     0565  0020               	movlb	0	; select bank0
  4283     0566  00A5               	movwf	??i1_Display+1
  4284     0567  01A6               	clrf	??i1_Display+2
  4285     0568  0825               	movf	??i1_Display+1,w
  4286     0569  00AB               	movwf	i1Display@hundreds
  4287     056A  0826               	movf	??i1_Display+2,w
  4288     056B  00AC               	movwf	i1Display@hundreds+1
  4289     056C                     i1l1755:
  4290                           
  4291                           ;main.c: 248:     SetSegments(&one, ones, 0);
  4292     056C  0828               	movf	i1Display@ones+1,w
  4293     056D  00F1               	movwf	i1SetSegments@a+1
  4294     056E  0827               	movf	i1Display@ones,w
  4295     056F  00F0               	movwf	i1SetSegments@a
  4296     0570  01F2               	clrf	i1SetSegments@blank
  4297     0571  3051               	movlw	(low (_one| 0))& (0+255)
  4298     0572  3181  21FF  3185   	fcall	i1_SetSegments
  4299     0575                     i1l1757:
  4300                           
  4301                           ;main.c: 249:     SetSegments(&ten, tens, (a < 10));
  4302     0575  0020               	movlb	0	; select bank0
  4303     0576  082A               	movf	i1Display@tens+1,w
  4304     0577  00F1               	movwf	i1SetSegments@a+1
  4305     0578  0829               	movf	i1Display@tens,w
  4306     0579  00F0               	movwf	i1SetSegments@a
  4307     057A  0823               	movf	i1Display@a+1,w
  4308     057B  3A80               	xorlw	128
  4309     057C  00A4               	movwf	??i1_Display
  4310     057D  3080               	movlw	128
  4311     057E  0224               	subwf	??i1_Display,w
  4312     057F  1D03               	skipz
  4313     0580  2D83               	goto	u85_25
  4314     0581  300A               	movlw	10
  4315     0582  0222               	subwf	i1Display@a,w
  4316     0583                     u85_25:
  4317     0583  1C03               	skipc
  4318     0584  2D86               	goto	u85_21
  4319     0585  2D88               	goto	u85_20
  4320     0586                     u85_21:
  4321     0586  3001               	movlw	1
  4322     0587  2D89               	goto	u86_20
  4323     0588                     u85_20:
  4324     0588  3000               	movlw	0
  4325     0589                     u86_20:
  4326     0589  00F2               	movwf	i1SetSegments@blank
  4327     058A  304A               	movlw	(low (_ten| 0))& (0+255)
  4328     058B  3181  21FF  3185   	fcall	i1_SetSegments
  4329     058E                     i1l1759:
  4330                           
  4331                           ;main.c: 250:     SetSegments(&hundred, hundreds, 0);
  4332     058E  0020               	movlb	0	; select bank0
  4333     058F  082C               	movf	i1Display@hundreds+1,w
  4334     0590  00F1               	movwf	i1SetSegments@a+1
  4335     0591  082B               	movf	i1Display@hundreds,w
  4336     0592  00F0               	movwf	i1SetSegments@a
  4337     0593  01F2               	clrf	i1SetSegments@blank
  4338     0594  3043               	movlw	(low (_hundred| 0))& (0+255)
  4339     0595  3181  21FF  3185   	fcall	i1_SetSegments
  4340     0598                     i1l243:
  4341     0598  0008               	return
  4342     0599                     __end_ofi1_Display:
  4343                           
  4344                           	psect	text18
  4345     06B7                     __ptext18:	
  4346 ;; *************** function i1___awmod *****************
  4347 ;; Defined at:
  4348 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  divisor         2    9[COMMON] int 
  4351 ;;  dividend        2   11[COMMON] int 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  sign            1    1[BANK0 ] unsigned char 
  4354 ;;  counter         1    0[BANK0 ] unsigned char 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  2    9[COMMON] int 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4364 ;;      Params:         4       0       0       0       0       0       0       0
  4365 ;;      Locals:         0       2       0       0       0       0       0       0
  4366 ;;      Temps:          1       0       0       0       0       0       0       0
  4367 ;;      Totals:         5       2       0       0       0       0       0       0
  4368 ;;Total ram usage:        7 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		i1_Display
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377     06B7                     i1___awmod:	
  4378                           ;psect for function i1___awmod
  4379                           
  4380     06B7                     i1l1709:	
  4381                           ;incstack = 0
  4382                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4383                           
  4384     06B7  0020               	movlb	0	; select bank0
  4385     06B8  01A1               	clrf	i1___awmod@sign
  4386     06B9                     i1l1711:
  4387     06B9  1FFC               	btfss	i1___awmod@dividend+1,7
  4388     06BA  2EBC               	goto	u74_21
  4389     06BB  2EBD               	goto	u74_20
  4390     06BC                     u74_21:
  4391     06BC  2EC4               	goto	i1l1717
  4392     06BD                     u74_20:
  4393     06BD                     i1l1713:
  4394     06BD  09FB               	comf	i1___awmod@dividend,f
  4395     06BE  09FC               	comf	i1___awmod@dividend+1,f
  4396     06BF  0AFB               	incf	i1___awmod@dividend,f
  4397     06C0  1903               	skipnz
  4398     06C1  0AFC               	incf	i1___awmod@dividend+1,f
  4399     06C2                     i1l1715:
  4400     06C2  01A1               	clrf	i1___awmod@sign
  4401     06C3  0AA1               	incf	i1___awmod@sign,f
  4402     06C4                     i1l1717:
  4403     06C4  1FFA               	btfss	i1___awmod@divisor+1,7
  4404     06C5  2EC7               	goto	u75_21
  4405     06C6  2EC8               	goto	u75_20
  4406     06C7                     u75_21:
  4407     06C7  2ECD               	goto	i1l1721
  4408     06C8                     u75_20:
  4409     06C8                     i1l1719:
  4410     06C8  09F9               	comf	i1___awmod@divisor,f
  4411     06C9  09FA               	comf	i1___awmod@divisor+1,f
  4412     06CA  0AF9               	incf	i1___awmod@divisor,f
  4413     06CB  1903               	skipnz
  4414     06CC  0AFA               	incf	i1___awmod@divisor+1,f
  4415     06CD                     i1l1721:
  4416     06CD  0879               	movf	i1___awmod@divisor,w
  4417     06CE  047A               	iorwf	i1___awmod@divisor+1,w
  4418     06CF  1903               	btfsc	3,2
  4419     06D0  2ED2               	goto	u76_21
  4420     06D1  2ED3               	goto	u76_20
  4421     06D2                     u76_21:
  4422     06D2  2EFC               	goto	i1l1739
  4423     06D3                     u76_20:
  4424     06D3                     i1l1723:
  4425     06D3  01A0               	clrf	i1___awmod@counter
  4426     06D4  0AA0               	incf	i1___awmod@counter,f
  4427     06D5  2EDF               	goto	i1l1729
  4428     06D6                     i1l1725:
  4429     06D6  3001               	movlw	1
  4430     06D7                     u77_25:
  4431     06D7  35F9               	lslf	i1___awmod@divisor,f
  4432     06D8  0DFA               	rlf	i1___awmod@divisor+1,f
  4433     06D9  0B89               	decfsz	9,f
  4434     06DA  2ED7               	goto	u77_25
  4435     06DB                     i1l1727:
  4436     06DB  3001               	movlw	1
  4437     06DC  00FD               	movwf	??i1___awmod
  4438     06DD  087D               	movf	??i1___awmod,w
  4439     06DE  07A0               	addwf	i1___awmod@counter,f
  4440     06DF                     i1l1729:
  4441     06DF  1FFA               	btfss	i1___awmod@divisor+1,7
  4442     06E0  2EE2               	goto	u78_21
  4443     06E1  2EE3               	goto	u78_20
  4444     06E2                     u78_21:
  4445     06E2  2ED6               	goto	i1l1725
  4446     06E3                     u78_20:
  4447     06E3                     i1l1731:
  4448     06E3  087A               	movf	i1___awmod@divisor+1,w
  4449     06E4  027C               	subwf	i1___awmod@dividend+1,w
  4450     06E5  1D03               	skipz
  4451     06E6  2EE9               	goto	u79_25
  4452     06E7  0879               	movf	i1___awmod@divisor,w
  4453     06E8  027B               	subwf	i1___awmod@dividend,w
  4454     06E9                     u79_25:
  4455     06E9  1C03               	skipc
  4456     06EA  2EEC               	goto	u79_21
  4457     06EB  2EED               	goto	u79_20
  4458     06EC                     u79_21:
  4459     06EC  2EF1               	goto	i1l1735
  4460     06ED                     u79_20:
  4461     06ED                     i1l1733:
  4462     06ED  0879               	movf	i1___awmod@divisor,w
  4463     06EE  02FB               	subwf	i1___awmod@dividend,f
  4464     06EF  087A               	movf	i1___awmod@divisor+1,w
  4465     06F0  3BFC               	subwfb	i1___awmod@dividend+1,f
  4466     06F1                     i1l1735:
  4467     06F1  3001               	movlw	1
  4468     06F2                     u80_25:
  4469     06F2  36FA               	lsrf	i1___awmod@divisor+1,f
  4470     06F3  0CF9               	rrf	i1___awmod@divisor,f
  4471     06F4  0B89               	decfsz	9,f
  4472     06F5  2EF2               	goto	u80_25
  4473     06F6                     i1l1737:
  4474     06F6  3001               	movlw	1
  4475     06F7  02A0               	subwf	i1___awmod@counter,f
  4476     06F8  1D03               	btfss	3,2
  4477     06F9  2EFB               	goto	u81_21
  4478     06FA  2EFC               	goto	u81_20
  4479     06FB                     u81_21:
  4480     06FB  2EE3               	goto	i1l1731
  4481     06FC                     u81_20:
  4482     06FC                     i1l1739:
  4483     06FC  0821               	movf	i1___awmod@sign,w
  4484     06FD  1903               	btfsc	3,2
  4485     06FE  2F00               	goto	u82_21
  4486     06FF  2F01               	goto	u82_20
  4487     0700                     u82_21:
  4488     0700  2F06               	goto	i1l1743
  4489     0701                     u82_20:
  4490     0701                     i1l1741:
  4491     0701  09FB               	comf	i1___awmod@dividend,f
  4492     0702  09FC               	comf	i1___awmod@dividend+1,f
  4493     0703  0AFB               	incf	i1___awmod@dividend,f
  4494     0704  1903               	skipnz
  4495     0705  0AFC               	incf	i1___awmod@dividend+1,f
  4496     0706                     i1l1743:
  4497     0706  087C               	movf	i1___awmod@dividend+1,w
  4498     0707  00FA               	movwf	?i1___awmod+1
  4499     0708  087B               	movf	i1___awmod@dividend,w
  4500     0709  00F9               	movwf	?i1___awmod
  4501     070A                     i1l489:
  4502     070A  0008               	return
  4503     070B                     __end_ofi1___awmod:
  4504                           
  4505                           	psect	text19
  4506     0658                     __ptext19:	
  4507 ;; *************** function i1___awdiv *****************
  4508 ;; Defined at:
  4509 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  divisor         2    0[COMMON] int 
  4512 ;;  dividend        2    2[COMMON] int 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  quotient        2    7[COMMON] int 
  4515 ;;  sign            1    6[COMMON] unsigned char 
  4516 ;;  counter         1    5[COMMON] unsigned char 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  2    0[COMMON] int 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4526 ;;      Params:         4       0       0       0       0       0       0       0
  4527 ;;      Locals:         4       0       0       0       0       0       0       0
  4528 ;;      Temps:          1       0       0       0       0       0       0       0
  4529 ;;      Totals:         9       0       0       0       0       0       0       0
  4530 ;;Total ram usage:        9 bytes
  4531 ;; Hardware stack levels used: 1
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		i1_Display
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539     0658                     i1___awdiv:	
  4540                           ;psect for function i1___awdiv
  4541                           
  4542     0658                     i1l1665:	
  4543                           ;incstack = 0
  4544                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4545                           
  4546     0658  01F6               	clrf	i1___awdiv@sign
  4547     0659                     i1l1667:
  4548     0659  1FF1               	btfss	i1___awdiv@divisor+1,7
  4549     065A  2E5C               	goto	u64_21
  4550     065B  2E5D               	goto	u64_20
  4551     065C                     u64_21:
  4552     065C  2E64               	goto	i1l1673
  4553     065D                     u64_20:
  4554     065D                     i1l1669:
  4555     065D  09F0               	comf	i1___awdiv@divisor,f
  4556     065E  09F1               	comf	i1___awdiv@divisor+1,f
  4557     065F  0AF0               	incf	i1___awdiv@divisor,f
  4558     0660  1903               	skipnz
  4559     0661  0AF1               	incf	i1___awdiv@divisor+1,f
  4560     0662                     i1l1671:
  4561     0662  01F6               	clrf	i1___awdiv@sign
  4562     0663  0AF6               	incf	i1___awdiv@sign,f
  4563     0664                     i1l1673:
  4564     0664  1FF3               	btfss	i1___awdiv@dividend+1,7
  4565     0665  2E67               	goto	u65_21
  4566     0666  2E68               	goto	u65_20
  4567     0667                     u65_21:
  4568     0667  2E71               	goto	i1l1679
  4569     0668                     u65_20:
  4570     0668                     i1l1675:
  4571     0668  09F2               	comf	i1___awdiv@dividend,f
  4572     0669  09F3               	comf	i1___awdiv@dividend+1,f
  4573     066A  0AF2               	incf	i1___awdiv@dividend,f
  4574     066B  1903               	skipnz
  4575     066C  0AF3               	incf	i1___awdiv@dividend+1,f
  4576     066D                     i1l1677:
  4577     066D  3001               	movlw	1
  4578     066E  00F4               	movwf	??i1___awdiv
  4579     066F  0874               	movf	??i1___awdiv,w
  4580     0670  06F6               	xorwf	i1___awdiv@sign,f
  4581     0671                     i1l1679:
  4582     0671  01F7               	clrf	i1___awdiv@quotient
  4583     0672  01F8               	clrf	i1___awdiv@quotient+1
  4584     0673                     i1l1681:
  4585     0673  0870               	movf	i1___awdiv@divisor,w
  4586     0674  0471               	iorwf	i1___awdiv@divisor+1,w
  4587     0675  1903               	btfsc	3,2
  4588     0676  2E78               	goto	u66_21
  4589     0677  2E79               	goto	u66_20
  4590     0678                     u66_21:
  4591     0678  2EA8               	goto	i1l1701
  4592     0679                     u66_20:
  4593     0679                     i1l1683:
  4594     0679  01F5               	clrf	i1___awdiv@counter
  4595     067A  0AF5               	incf	i1___awdiv@counter,f
  4596     067B  2E85               	goto	i1l1689
  4597     067C                     i1l1685:
  4598     067C  3001               	movlw	1
  4599     067D                     u67_25:
  4600     067D  35F0               	lslf	i1___awdiv@divisor,f
  4601     067E  0DF1               	rlf	i1___awdiv@divisor+1,f
  4602     067F  0B89               	decfsz	9,f
  4603     0680  2E7D               	goto	u67_25
  4604     0681                     i1l1687:
  4605     0681  3001               	movlw	1
  4606     0682  00F4               	movwf	??i1___awdiv
  4607     0683  0874               	movf	??i1___awdiv,w
  4608     0684  07F5               	addwf	i1___awdiv@counter,f
  4609     0685                     i1l1689:
  4610     0685  1FF1               	btfss	i1___awdiv@divisor+1,7
  4611     0686  2E88               	goto	u68_21
  4612     0687  2E89               	goto	u68_20
  4613     0688                     u68_21:
  4614     0688  2E7C               	goto	i1l1685
  4615     0689                     u68_20:
  4616     0689                     i1l1691:
  4617     0689  3001               	movlw	1
  4618     068A                     u69_25:
  4619     068A  35F7               	lslf	i1___awdiv@quotient,f
  4620     068B  0DF8               	rlf	i1___awdiv@quotient+1,f
  4621     068C  0B89               	decfsz	9,f
  4622     068D  2E8A               	goto	u69_25
  4623     068E  0871               	movf	i1___awdiv@divisor+1,w
  4624     068F  0273               	subwf	i1___awdiv@dividend+1,w
  4625     0690  1D03               	skipz
  4626     0691  2E94               	goto	u70_25
  4627     0692  0870               	movf	i1___awdiv@divisor,w
  4628     0693  0272               	subwf	i1___awdiv@dividend,w
  4629     0694                     u70_25:
  4630     0694  1C03               	skipc
  4631     0695  2E97               	goto	u70_21
  4632     0696  2E98               	goto	u70_20
  4633     0697                     u70_21:
  4634     0697  2E9D               	goto	i1l1697
  4635     0698                     u70_20:
  4636     0698                     i1l1693:
  4637     0698  0870               	movf	i1___awdiv@divisor,w
  4638     0699  02F2               	subwf	i1___awdiv@dividend,f
  4639     069A  0871               	movf	i1___awdiv@divisor+1,w
  4640     069B  3BF3               	subwfb	i1___awdiv@dividend+1,f
  4641     069C                     i1l1695:
  4642     069C  1477               	bsf	i1___awdiv@quotient,0
  4643     069D                     i1l1697:
  4644     069D  3001               	movlw	1
  4645     069E                     u71_25:
  4646     069E  36F1               	lsrf	i1___awdiv@divisor+1,f
  4647     069F  0CF0               	rrf	i1___awdiv@divisor,f
  4648     06A0  0B89               	decfsz	9,f
  4649     06A1  2E9E               	goto	u71_25
  4650     06A2                     i1l1699:
  4651     06A2  3001               	movlw	1
  4652     06A3  02F5               	subwf	i1___awdiv@counter,f
  4653     06A4  1D03               	btfss	3,2
  4654     06A5  2EA7               	goto	u72_21
  4655     06A6  2EA8               	goto	u72_20
  4656     06A7                     u72_21:
  4657     06A7  2E89               	goto	i1l1691
  4658     06A8                     u72_20:
  4659     06A8                     i1l1701:
  4660     06A8  0876               	movf	i1___awdiv@sign,w
  4661     06A9  1903               	btfsc	3,2
  4662     06AA  2EAC               	goto	u73_21
  4663     06AB  2EAD               	goto	u73_20
  4664     06AC                     u73_21:
  4665     06AC  2EB2               	goto	i1l1705
  4666     06AD                     u73_20:
  4667     06AD                     i1l1703:
  4668     06AD  09F7               	comf	i1___awdiv@quotient,f
  4669     06AE  09F8               	comf	i1___awdiv@quotient+1,f
  4670     06AF  0AF7               	incf	i1___awdiv@quotient,f
  4671     06B0  1903               	skipnz
  4672     06B1  0AF8               	incf	i1___awdiv@quotient+1,f
  4673     06B2                     i1l1705:
  4674     06B2  0878               	movf	i1___awdiv@quotient+1,w
  4675     06B3  00F1               	movwf	?i1___awdiv+1
  4676     06B4  0877               	movf	i1___awdiv@quotient,w
  4677     06B5  00F0               	movwf	?i1___awdiv
  4678     06B6                     i1l476:
  4679     06B6  0008               	return
  4680     06B7                     __end_ofi1___awdiv:
  4681                           
  4682                           	psect	text20
  4683     01FF                     __ptext20:	
  4684 ;; *************** function i1_SetSegments *****************
  4685 ;; Defined at:
  4686 ;;		line 129 in file "main.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  digit           1    wreg     PTR struct digit
  4689 ;;		 -> one(7), ten(7), hundred(7), 
  4690 ;;  a               2    0[COMMON] int 
  4691 ;;  blank           1    2[COMMON] unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  digit           1    3[COMMON] PTR struct digit
  4694 ;;		 -> one(7), ten(7), hundred(7), 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4704 ;;      Params:         3       0       0       0       0       0       0       0
  4705 ;;      Locals:         1       0       0       0       0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0
  4707 ;;      Totals:         4       0       0       0       0       0       0       0
  4708 ;;Total ram usage:        4 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		i1_Display
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717     01FF                     i1_SetSegments:	
  4718                           ;psect for function i1_SetSegments
  4719                           
  4720                           
  4721                           ;incstack = 0
  4722                           ; Regs used in i1_SetSegments: [wreg-fsr1h+status,2+status,0]
  4723                           ;i1SetSegments@digit stored from wreg
  4724     01FF  00F3               	movwf	i1SetSegments@digit
  4725     0200                     i1l1515:
  4726                           
  4727                           ;main.c: 130:     if (blank) {
  4728     0200  0872               	movf	i1SetSegments@blank,w
  4729     0201  1903               	btfsc	3,2
  4730     0202  2A04               	goto	u63_21
  4731     0203  2A05               	goto	u63_20
  4732     0204                     u63_21:
  4733     0204  2BAC               	goto	i1l1659
  4734     0205                     u63_20:
  4735     0205                     i1l1517:
  4736                           
  4737                           ;main.c: 131:         digit->a = 0;
  4738     0205  0873               	movf	i1SetSegments@digit,w
  4739     0206  0086               	movwf	6
  4740     0207  0187               	clrf	7
  4741     0208  0181               	clrf	1
  4742                           
  4743                           ;main.c: 132:         digit->b = 0;
  4744     0209  0A73               	incf	i1SetSegments@digit,w
  4745     020A  0086               	movwf	6
  4746     020B  0187               	clrf	7
  4747     020C  0181               	clrf	1
  4748     020D                     i1l1519:
  4749                           
  4750                           ;main.c: 133:         digit->c = 0;
  4751     020D  0873               	movf	i1SetSegments@digit,w
  4752     020E  3E02               	addlw	2
  4753     020F  0086               	movwf	6
  4754     0210  0187               	clrf	7
  4755     0211  0181               	clrf	1
  4756     0212                     i1l1521:
  4757                           
  4758                           ;main.c: 134:         digit->d = 0;
  4759     0212  0873               	movf	i1SetSegments@digit,w
  4760     0213  3E03               	addlw	3
  4761     0214  0086               	movwf	6
  4762     0215  0187               	clrf	7
  4763     0216  0181               	clrf	1
  4764     0217                     i1l1523:
  4765                           
  4766                           ;main.c: 135:         digit->e = 0;
  4767     0217  0873               	movf	i1SetSegments@digit,w
  4768     0218  3E04               	addlw	4
  4769     0219  0086               	movwf	6
  4770     021A  0187               	clrf	7
  4771     021B  0181               	clrf	1
  4772     021C                     i1l1525:
  4773                           
  4774                           ;main.c: 136:         digit->f = 0;
  4775     021C  0873               	movf	i1SetSegments@digit,w
  4776     021D  3E05               	addlw	5
  4777     021E  0086               	movwf	6
  4778     021F  0187               	clrf	7
  4779     0220  0181               	clrf	1
  4780     0221                     i1l1527:
  4781                           
  4782                           ;main.c: 137:         digit->g = 0;
  4783     0221  0873               	movf	i1SetSegments@digit,w
  4784     0222  3E06               	addlw	6
  4785     0223  0086               	movwf	6
  4786     0224  0187               	clrf	7
  4787     0225  0181               	clrf	1
  4788                           
  4789                           ;main.c: 138:     } else {
  4790     0226  2BD1               	goto	i1l240
  4791     0227                     i1l1529:
  4792                           
  4793                           ;main.c: 141:                 digit->a = 1;
  4794     0227  0873               	movf	i1SetSegments@digit,w
  4795     0228  0086               	movwf	6
  4796     0229  0187               	clrf	7
  4797     022A  0181               	clrf	1
  4798     022B  0A81               	incf	1,f
  4799                           
  4800                           ;main.c: 142:                 digit->b = 1;
  4801     022C  0A73               	incf	i1SetSegments@digit,w
  4802     022D  0086               	movwf	6
  4803     022E  0187               	clrf	7
  4804     022F  0181               	clrf	1
  4805     0230  0A81               	incf	1,f
  4806     0231                     i1l1531:
  4807                           
  4808                           ;main.c: 143:                 digit->c = 1;
  4809     0231  0873               	movf	i1SetSegments@digit,w
  4810     0232  3E02               	addlw	2
  4811     0233  0086               	movwf	6
  4812     0234  0187               	clrf	7
  4813     0235  0181               	clrf	1
  4814     0236  0A81               	incf	1,f
  4815     0237                     i1l1533:
  4816                           
  4817                           ;main.c: 144:                 digit->d = 1;
  4818     0237  0873               	movf	i1SetSegments@digit,w
  4819     0238  3E03               	addlw	3
  4820     0239  0086               	movwf	6
  4821     023A  0187               	clrf	7
  4822     023B  0181               	clrf	1
  4823     023C  0A81               	incf	1,f
  4824     023D                     i1l1535:
  4825                           
  4826                           ;main.c: 145:                 digit->e = 1;
  4827     023D  0873               	movf	i1SetSegments@digit,w
  4828     023E  3E04               	addlw	4
  4829     023F  0086               	movwf	6
  4830     0240  0187               	clrf	7
  4831     0241  0181               	clrf	1
  4832     0242  0A81               	incf	1,f
  4833     0243                     i1l1537:
  4834                           
  4835                           ;main.c: 146:                 digit->f = 1;
  4836     0243  0873               	movf	i1SetSegments@digit,w
  4837     0244  3E05               	addlw	5
  4838     0245  0086               	movwf	6
  4839     0246  0187               	clrf	7
  4840     0247  0181               	clrf	1
  4841     0248  0A81               	incf	1,f
  4842     0249                     i1l1539:
  4843                           
  4844                           ;main.c: 147:                 digit->g = 0;
  4845     0249  0873               	movf	i1SetSegments@digit,w
  4846     024A  3E06               	addlw	6
  4847     024B  0086               	movwf	6
  4848     024C  0187               	clrf	7
  4849     024D  0181               	clrf	1
  4850                           
  4851                           ;main.c: 148:                 break;
  4852     024E  2BD1               	goto	i1l240
  4853     024F                     i1l1541:
  4854                           
  4855                           ;main.c: 151:                 digit->a = 0;
  4856     024F  0873               	movf	i1SetSegments@digit,w
  4857     0250  0086               	movwf	6
  4858     0251  0187               	clrf	7
  4859     0252  0181               	clrf	1
  4860     0253                     i1l1543:
  4861                           
  4862                           ;main.c: 152:                 digit->b = 1;
  4863     0253  0A73               	incf	i1SetSegments@digit,w
  4864     0254  0086               	movwf	6
  4865     0255  0187               	clrf	7
  4866     0256  0181               	clrf	1
  4867     0257  0A81               	incf	1,f
  4868     0258                     i1l1545:
  4869                           
  4870                           ;main.c: 153:                 digit->c = 1;
  4871     0258  0873               	movf	i1SetSegments@digit,w
  4872     0259  3E02               	addlw	2
  4873     025A  0086               	movwf	6
  4874     025B  0187               	clrf	7
  4875     025C  0181               	clrf	1
  4876     025D  0A81               	incf	1,f
  4877     025E                     i1l1547:
  4878                           
  4879                           ;main.c: 154:                 digit->d = 0;
  4880     025E  0873               	movf	i1SetSegments@digit,w
  4881     025F  3E03               	addlw	3
  4882     0260  0086               	movwf	6
  4883     0261  0187               	clrf	7
  4884     0262  0181               	clrf	1
  4885     0263                     i1l1549:
  4886                           
  4887                           ;main.c: 155:                 digit->e = 0;
  4888     0263  0873               	movf	i1SetSegments@digit,w
  4889     0264  3E04               	addlw	4
  4890     0265  0086               	movwf	6
  4891     0266  0187               	clrf	7
  4892     0267  0181               	clrf	1
  4893     0268                     i1l1551:
  4894                           
  4895                           ;main.c: 156:                 digit->f = 0;
  4896     0268  0873               	movf	i1SetSegments@digit,w
  4897     0269  3E05               	addlw	5
  4898     026A  0086               	movwf	6
  4899     026B  0187               	clrf	7
  4900     026C  0181               	clrf	1
  4901     026D                     i1l1553:
  4902                           
  4903                           ;main.c: 157:                 digit->g = 0;
  4904     026D  0873               	movf	i1SetSegments@digit,w
  4905     026E  3E06               	addlw	6
  4906     026F  0086               	movwf	6
  4907     0270  0187               	clrf	7
  4908     0271  0181               	clrf	1
  4909                           
  4910                           ;main.c: 158:                 break;
  4911     0272  2BD1               	goto	i1l240
  4912     0273                     i1l1555:
  4913                           
  4914                           ;main.c: 161:                 digit->a = 1;
  4915     0273  0873               	movf	i1SetSegments@digit,w
  4916     0274  0086               	movwf	6
  4917     0275  0187               	clrf	7
  4918     0276  0181               	clrf	1
  4919     0277  0A81               	incf	1,f
  4920                           
  4921                           ;main.c: 162:                 digit->b = 1;
  4922     0278  0A73               	incf	i1SetSegments@digit,w
  4923     0279  0086               	movwf	6
  4924     027A  0187               	clrf	7
  4925     027B  0181               	clrf	1
  4926     027C  0A81               	incf	1,f
  4927     027D                     i1l1557:
  4928                           
  4929                           ;main.c: 163:                 digit->c = 0;
  4930     027D  0873               	movf	i1SetSegments@digit,w
  4931     027E  3E02               	addlw	2
  4932     027F  0086               	movwf	6
  4933     0280  0187               	clrf	7
  4934     0281  0181               	clrf	1
  4935     0282                     i1l1559:
  4936                           
  4937                           ;main.c: 164:                 digit->d = 1;
  4938     0282  0873               	movf	i1SetSegments@digit,w
  4939     0283  3E03               	addlw	3
  4940     0284  0086               	movwf	6
  4941     0285  0187               	clrf	7
  4942     0286  0181               	clrf	1
  4943     0287  0A81               	incf	1,f
  4944     0288                     i1l1561:
  4945                           
  4946                           ;main.c: 165:                 digit->e = 1;
  4947     0288  0873               	movf	i1SetSegments@digit,w
  4948     0289  3E04               	addlw	4
  4949     028A  0086               	movwf	6
  4950     028B  0187               	clrf	7
  4951     028C  0181               	clrf	1
  4952     028D  0A81               	incf	1,f
  4953     028E                     i1l1563:
  4954                           
  4955                           ;main.c: 166:                 digit->f = 0;
  4956     028E  0873               	movf	i1SetSegments@digit,w
  4957     028F  3E05               	addlw	5
  4958     0290  0086               	movwf	6
  4959     0291  0187               	clrf	7
  4960     0292  0181               	clrf	1
  4961     0293                     i1l1565:
  4962                           
  4963                           ;main.c: 167:                 digit->g = 1;
  4964     0293  0873               	movf	i1SetSegments@digit,w
  4965     0294  3E06               	addlw	6
  4966     0295  0086               	movwf	6
  4967     0296  0187               	clrf	7
  4968     0297  0181               	clrf	1
  4969     0298  0A81               	incf	1,f
  4970                           
  4971                           ;main.c: 168:                 break;
  4972     0299  2BD1               	goto	i1l240
  4973     029A                     i1l1567:
  4974                           
  4975                           ;main.c: 171:                 digit->a = 1;
  4976     029A  0873               	movf	i1SetSegments@digit,w
  4977     029B  0086               	movwf	6
  4978     029C  0187               	clrf	7
  4979     029D  0181               	clrf	1
  4980     029E  0A81               	incf	1,f
  4981                           
  4982                           ;main.c: 172:                 digit->b = 1;
  4983     029F  0A73               	incf	i1SetSegments@digit,w
  4984     02A0  0086               	movwf	6
  4985     02A1  0187               	clrf	7
  4986     02A2  0181               	clrf	1
  4987     02A3  0A81               	incf	1,f
  4988     02A4                     i1l1569:
  4989                           
  4990                           ;main.c: 173:                 digit->c = 1;
  4991     02A4  0873               	movf	i1SetSegments@digit,w
  4992     02A5  3E02               	addlw	2
  4993     02A6  0086               	movwf	6
  4994     02A7  0187               	clrf	7
  4995     02A8  0181               	clrf	1
  4996     02A9  0A81               	incf	1,f
  4997     02AA                     i1l1571:
  4998                           
  4999                           ;main.c: 174:                 digit->d = 1;
  5000     02AA  0873               	movf	i1SetSegments@digit,w
  5001     02AB  3E03               	addlw	3
  5002     02AC  0086               	movwf	6
  5003     02AD  0187               	clrf	7
  5004     02AE  0181               	clrf	1
  5005     02AF  0A81               	incf	1,f
  5006     02B0                     i1l1573:
  5007                           
  5008                           ;main.c: 175:                 digit->e = 0;
  5009     02B0  0873               	movf	i1SetSegments@digit,w
  5010     02B1  3E04               	addlw	4
  5011     02B2  0086               	movwf	6
  5012     02B3  0187               	clrf	7
  5013     02B4  0181               	clrf	1
  5014     02B5                     i1l1575:
  5015                           
  5016                           ;main.c: 176:                 digit->f = 0;
  5017     02B5  0873               	movf	i1SetSegments@digit,w
  5018     02B6  3E05               	addlw	5
  5019     02B7  0086               	movwf	6
  5020     02B8  0187               	clrf	7
  5021     02B9  0181               	clrf	1
  5022     02BA                     i1l1577:
  5023                           
  5024                           ;main.c: 177:                 digit->g = 1;
  5025     02BA  0873               	movf	i1SetSegments@digit,w
  5026     02BB  3E06               	addlw	6
  5027     02BC  0086               	movwf	6
  5028     02BD  0187               	clrf	7
  5029     02BE  0181               	clrf	1
  5030     02BF  0A81               	incf	1,f
  5031                           
  5032                           ;main.c: 178:                 break;
  5033     02C0  2BD1               	goto	i1l240
  5034     02C1                     i1l1579:
  5035                           
  5036                           ;main.c: 181:                 digit->a = 0;
  5037     02C1  0873               	movf	i1SetSegments@digit,w
  5038     02C2  0086               	movwf	6
  5039     02C3  0187               	clrf	7
  5040     02C4  0181               	clrf	1
  5041     02C5                     i1l1581:
  5042                           
  5043                           ;main.c: 182:                 digit->b = 1;
  5044     02C5  0A73               	incf	i1SetSegments@digit,w
  5045     02C6  0086               	movwf	6
  5046     02C7  0187               	clrf	7
  5047     02C8  0181               	clrf	1
  5048     02C9  0A81               	incf	1,f
  5049     02CA                     i1l1583:
  5050                           
  5051                           ;main.c: 183:                 digit->c = 1;
  5052     02CA  0873               	movf	i1SetSegments@digit,w
  5053     02CB  3E02               	addlw	2
  5054     02CC  0086               	movwf	6
  5055     02CD  0187               	clrf	7
  5056     02CE  0181               	clrf	1
  5057     02CF  0A81               	incf	1,f
  5058     02D0                     i1l1585:
  5059                           
  5060                           ;main.c: 184:                 digit->d = 0;
  5061     02D0  0873               	movf	i1SetSegments@digit,w
  5062     02D1  3E03               	addlw	3
  5063     02D2  0086               	movwf	6
  5064     02D3  0187               	clrf	7
  5065     02D4  0181               	clrf	1
  5066     02D5                     i1l1587:
  5067                           
  5068                           ;main.c: 185:                 digit->e = 0;
  5069     02D5  0873               	movf	i1SetSegments@digit,w
  5070     02D6  3E04               	addlw	4
  5071     02D7  0086               	movwf	6
  5072     02D8  0187               	clrf	7
  5073     02D9  0181               	clrf	1
  5074     02DA                     i1l1589:
  5075                           
  5076                           ;main.c: 186:                 digit->f = 1;
  5077     02DA  0873               	movf	i1SetSegments@digit,w
  5078     02DB  3E05               	addlw	5
  5079     02DC  0086               	movwf	6
  5080     02DD  0187               	clrf	7
  5081     02DE  0181               	clrf	1
  5082     02DF  0A81               	incf	1,f
  5083     02E0                     i1l1591:
  5084                           
  5085                           ;main.c: 187:                 digit->g = 1;
  5086     02E0  0873               	movf	i1SetSegments@digit,w
  5087     02E1  3E06               	addlw	6
  5088     02E2  0086               	movwf	6
  5089     02E3  0187               	clrf	7
  5090     02E4  0181               	clrf	1
  5091     02E5  0A81               	incf	1,f
  5092                           
  5093                           ;main.c: 188:                 break;
  5094     02E6  2BD1               	goto	i1l240
  5095     02E7                     i1l1593:
  5096                           
  5097                           ;main.c: 191:                 digit->a = 1;
  5098     02E7  0873               	movf	i1SetSegments@digit,w
  5099     02E8  0086               	movwf	6
  5100     02E9  0187               	clrf	7
  5101     02EA  0181               	clrf	1
  5102     02EB  0A81               	incf	1,f
  5103     02EC                     i1l1595:
  5104                           
  5105                           ;main.c: 192:                 digit->b = 0;
  5106     02EC  0A73               	incf	i1SetSegments@digit,w
  5107     02ED  0086               	movwf	6
  5108     02EE  0187               	clrf	7
  5109     02EF  0181               	clrf	1
  5110     02F0                     i1l1597:
  5111                           
  5112                           ;main.c: 193:                 digit->c = 1;
  5113     02F0  0873               	movf	i1SetSegments@digit,w
  5114     02F1  3E02               	addlw	2
  5115     02F2  0086               	movwf	6
  5116     02F3  0187               	clrf	7
  5117     02F4  0181               	clrf	1
  5118     02F5  0A81               	incf	1,f
  5119     02F6                     i1l1599:
  5120                           
  5121                           ;main.c: 194:                 digit->d = 1;
  5122     02F6  0873               	movf	i1SetSegments@digit,w
  5123     02F7  3E03               	addlw	3
  5124     02F8  0086               	movwf	6
  5125     02F9  0187               	clrf	7
  5126     02FA  0181               	clrf	1
  5127     02FB  0A81               	incf	1,f
  5128     02FC                     i1l1601:
  5129                           
  5130                           ;main.c: 195:                 digit->e = 0;
  5131     02FC  0873               	movf	i1SetSegments@digit,w
  5132     02FD  3E04               	addlw	4
  5133     02FE  0086               	movwf	6
  5134     02FF  0187               	clrf	7
  5135     0300  0181               	clrf	1
  5136     0301                     i1l1603:
  5137                           
  5138                           ;main.c: 196:                 digit->f = 1;
  5139     0301  0873               	movf	i1SetSegments@digit,w
  5140     0302  3E05               	addlw	5
  5141     0303  0086               	movwf	6
  5142     0304  0187               	clrf	7
  5143     0305  0181               	clrf	1
  5144     0306  0A81               	incf	1,f
  5145     0307                     i1l1605:
  5146                           
  5147                           ;main.c: 197:                 digit->g = 1;
  5148     0307  0873               	movf	i1SetSegments@digit,w
  5149     0308  3E06               	addlw	6
  5150     0309  0086               	movwf	6
  5151     030A  0187               	clrf	7
  5152     030B  0181               	clrf	1
  5153     030C  0A81               	incf	1,f
  5154                           
  5155                           ;main.c: 198:                 break;
  5156     030D  2BD1               	goto	i1l240
  5157     030E                     i1l1607:
  5158                           
  5159                           ;main.c: 201:                 digit->a = 1;
  5160     030E  0873               	movf	i1SetSegments@digit,w
  5161     030F  0086               	movwf	6
  5162     0310  0187               	clrf	7
  5163     0311  0181               	clrf	1
  5164     0312  0A81               	incf	1,f
  5165     0313                     i1l1609:
  5166                           
  5167                           ;main.c: 202:                 digit->b = 0;
  5168     0313  0A73               	incf	i1SetSegments@digit,w
  5169     0314  0086               	movwf	6
  5170     0315  0187               	clrf	7
  5171     0316  0181               	clrf	1
  5172     0317                     i1l1611:
  5173                           
  5174                           ;main.c: 203:                 digit->c = 1;
  5175     0317  0873               	movf	i1SetSegments@digit,w
  5176     0318  3E02               	addlw	2
  5177     0319  0086               	movwf	6
  5178     031A  0187               	clrf	7
  5179     031B  0181               	clrf	1
  5180     031C  0A81               	incf	1,f
  5181     031D                     i1l1613:
  5182                           
  5183                           ;main.c: 204:                 digit->d = 1;
  5184     031D  0873               	movf	i1SetSegments@digit,w
  5185     031E  3E03               	addlw	3
  5186     031F  0086               	movwf	6
  5187     0320  0187               	clrf	7
  5188     0321  0181               	clrf	1
  5189     0322  0A81               	incf	1,f
  5190     0323                     i1l1615:
  5191                           
  5192                           ;main.c: 205:                 digit->e = 1;
  5193     0323  0873               	movf	i1SetSegments@digit,w
  5194     0324  3E04               	addlw	4
  5195     0325  0086               	movwf	6
  5196     0326  0187               	clrf	7
  5197     0327  0181               	clrf	1
  5198     0328  0A81               	incf	1,f
  5199     0329                     i1l1617:
  5200                           
  5201                           ;main.c: 206:                 digit->f = 1;
  5202     0329  0873               	movf	i1SetSegments@digit,w
  5203     032A  3E05               	addlw	5
  5204     032B  0086               	movwf	6
  5205     032C  0187               	clrf	7
  5206     032D  0181               	clrf	1
  5207     032E  0A81               	incf	1,f
  5208     032F                     i1l1619:
  5209                           
  5210                           ;main.c: 207:                 digit->g = 1;
  5211     032F  0873               	movf	i1SetSegments@digit,w
  5212     0330  3E06               	addlw	6
  5213     0331  0086               	movwf	6
  5214     0332  0187               	clrf	7
  5215     0333  0181               	clrf	1
  5216     0334  0A81               	incf	1,f
  5217                           
  5218                           ;main.c: 208:                 break;
  5219     0335  2BD1               	goto	i1l240
  5220     0336                     i1l1621:
  5221                           
  5222                           ;main.c: 211:                 digit->a = 1;
  5223     0336  0873               	movf	i1SetSegments@digit,w
  5224     0337  0086               	movwf	6
  5225     0338  0187               	clrf	7
  5226     0339  0181               	clrf	1
  5227     033A  0A81               	incf	1,f
  5228                           
  5229                           ;main.c: 212:                 digit->b = 1;
  5230     033B  0A73               	incf	i1SetSegments@digit,w
  5231     033C  0086               	movwf	6
  5232     033D  0187               	clrf	7
  5233     033E  0181               	clrf	1
  5234     033F  0A81               	incf	1,f
  5235     0340                     i1l1623:
  5236                           
  5237                           ;main.c: 213:                 digit->c = 1;
  5238     0340  0873               	movf	i1SetSegments@digit,w
  5239     0341  3E02               	addlw	2
  5240     0342  0086               	movwf	6
  5241     0343  0187               	clrf	7
  5242     0344  0181               	clrf	1
  5243     0345  0A81               	incf	1,f
  5244     0346                     i1l1625:
  5245                           
  5246                           ;main.c: 214:                 digit->d = 0;
  5247     0346  0873               	movf	i1SetSegments@digit,w
  5248     0347  3E03               	addlw	3
  5249     0348  0086               	movwf	6
  5250     0349  0187               	clrf	7
  5251     034A  0181               	clrf	1
  5252     034B                     i1l1627:
  5253                           
  5254                           ;main.c: 215:                 digit->e = 0;
  5255     034B  0873               	movf	i1SetSegments@digit,w
  5256     034C  3E04               	addlw	4
  5257     034D  0086               	movwf	6
  5258     034E  0187               	clrf	7
  5259     034F  0181               	clrf	1
  5260     0350                     i1l1629:
  5261                           
  5262                           ;main.c: 216:                 digit->f = 0;
  5263     0350  0873               	movf	i1SetSegments@digit,w
  5264     0351  3E05               	addlw	5
  5265     0352  0086               	movwf	6
  5266     0353  0187               	clrf	7
  5267     0354  0181               	clrf	1
  5268     0355                     i1l1631:
  5269                           
  5270                           ;main.c: 217:                 digit->g = 0;
  5271     0355  0873               	movf	i1SetSegments@digit,w
  5272     0356  3E06               	addlw	6
  5273     0357  0086               	movwf	6
  5274     0358  0187               	clrf	7
  5275     0359  0181               	clrf	1
  5276                           
  5277                           ;main.c: 218:                 break;
  5278     035A  2BD1               	goto	i1l240
  5279     035B                     i1l1633:
  5280                           
  5281                           ;main.c: 221:                 digit->a = 1;
  5282     035B  0873               	movf	i1SetSegments@digit,w
  5283     035C  0086               	movwf	6
  5284     035D  0187               	clrf	7
  5285     035E  0181               	clrf	1
  5286     035F  0A81               	incf	1,f
  5287                           
  5288                           ;main.c: 222:                 digit->b = 1;
  5289     0360  0A73               	incf	i1SetSegments@digit,w
  5290     0361  0086               	movwf	6
  5291     0362  0187               	clrf	7
  5292     0363  0181               	clrf	1
  5293     0364  0A81               	incf	1,f
  5294     0365                     i1l1635:
  5295                           
  5296                           ;main.c: 223:                 digit->c = 1;
  5297     0365  0873               	movf	i1SetSegments@digit,w
  5298     0366  3E02               	addlw	2
  5299     0367  0086               	movwf	6
  5300     0368  0187               	clrf	7
  5301     0369  0181               	clrf	1
  5302     036A  0A81               	incf	1,f
  5303     036B                     i1l1637:
  5304                           
  5305                           ;main.c: 224:                 digit->d = 1;
  5306     036B  0873               	movf	i1SetSegments@digit,w
  5307     036C  3E03               	addlw	3
  5308     036D  0086               	movwf	6
  5309     036E  0187               	clrf	7
  5310     036F  0181               	clrf	1
  5311     0370  0A81               	incf	1,f
  5312     0371                     i1l1639:
  5313                           
  5314                           ;main.c: 225:                 digit->e = 1;
  5315     0371  0873               	movf	i1SetSegments@digit,w
  5316     0372  3E04               	addlw	4
  5317     0373  0086               	movwf	6
  5318     0374  0187               	clrf	7
  5319     0375  0181               	clrf	1
  5320     0376  0A81               	incf	1,f
  5321     0377                     i1l1641:
  5322                           
  5323                           ;main.c: 226:                 digit->f = 1;
  5324     0377  0873               	movf	i1SetSegments@digit,w
  5325     0378  3E05               	addlw	5
  5326     0379  0086               	movwf	6
  5327     037A  0187               	clrf	7
  5328     037B  0181               	clrf	1
  5329     037C  0A81               	incf	1,f
  5330     037D                     i1l1643:
  5331                           
  5332                           ;main.c: 227:                 digit->g = 1;
  5333     037D  0873               	movf	i1SetSegments@digit,w
  5334     037E  3E06               	addlw	6
  5335     037F  0086               	movwf	6
  5336     0380  0187               	clrf	7
  5337     0381  0181               	clrf	1
  5338     0382  0A81               	incf	1,f
  5339                           
  5340                           ;main.c: 228:                 break;
  5341     0383  2BD1               	goto	i1l240
  5342     0384                     i1l1645:
  5343                           
  5344                           ;main.c: 231:                 digit->a = 1;
  5345     0384  0873               	movf	i1SetSegments@digit,w
  5346     0385  0086               	movwf	6
  5347     0386  0187               	clrf	7
  5348     0387  0181               	clrf	1
  5349     0388  0A81               	incf	1,f
  5350                           
  5351                           ;main.c: 232:                 digit->b = 1;
  5352     0389  0A73               	incf	i1SetSegments@digit,w
  5353     038A  0086               	movwf	6
  5354     038B  0187               	clrf	7
  5355     038C  0181               	clrf	1
  5356     038D  0A81               	incf	1,f
  5357     038E                     i1l1647:
  5358                           
  5359                           ;main.c: 233:                 digit->c = 1;
  5360     038E  0873               	movf	i1SetSegments@digit,w
  5361     038F  3E02               	addlw	2
  5362     0390  0086               	movwf	6
  5363     0391  0187               	clrf	7
  5364     0392  0181               	clrf	1
  5365     0393  0A81               	incf	1,f
  5366     0394                     i1l1649:
  5367                           
  5368                           ;main.c: 234:                 digit->d = 1;
  5369     0394  0873               	movf	i1SetSegments@digit,w
  5370     0395  3E03               	addlw	3
  5371     0396  0086               	movwf	6
  5372     0397  0187               	clrf	7
  5373     0398  0181               	clrf	1
  5374     0399  0A81               	incf	1,f
  5375     039A                     i1l1651:
  5376                           
  5377                           ;main.c: 235:                 digit->e = 0;
  5378     039A  0873               	movf	i1SetSegments@digit,w
  5379     039B  3E04               	addlw	4
  5380     039C  0086               	movwf	6
  5381     039D  0187               	clrf	7
  5382     039E  0181               	clrf	1
  5383     039F                     i1l1653:
  5384                           
  5385                           ;main.c: 236:                 digit->f = 1;
  5386     039F  0873               	movf	i1SetSegments@digit,w
  5387     03A0  3E05               	addlw	5
  5388     03A1  0086               	movwf	6
  5389     03A2  0187               	clrf	7
  5390     03A3  0181               	clrf	1
  5391     03A4  0A81               	incf	1,f
  5392     03A5                     i1l1655:
  5393                           
  5394                           ;main.c: 237:                 digit->g = 1;
  5395     03A5  0873               	movf	i1SetSegments@digit,w
  5396     03A6  3E06               	addlw	6
  5397     03A7  0086               	movwf	6
  5398     03A8  0187               	clrf	7
  5399     03A9  0181               	clrf	1
  5400     03AA  0A81               	incf	1,f
  5401                           
  5402                           ;main.c: 238:                 break;
  5403     03AB  2BD1               	goto	i1l240
  5404     03AC                     i1l1659:
  5405                           
  5406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5407                           ; Switch size 1, requested type "simple"
  5408                           ; Number of cases is 1, Range of values is 0 to 0
  5409                           ; switch strategies available:
  5410                           ; Name         Instructions Cycles
  5411                           ; simple_byte            4     3 (average)
  5412                           ; direct_byte            8     6 (fixed)
  5413                           ; jumptable            260     6 (fixed)
  5414                           ;	Chosen strategy is simple_byte
  5415     03AC  0871               	movf	i1SetSegments@a+1,w
  5416     03AD  3A00               	xorlw	0	; case 0
  5417     03AE  1903               	skipnz
  5418     03AF  2BB1               	goto	i1l2521
  5419     03B0  2BD1               	goto	i1l240
  5420     03B1                     i1l2521:
  5421                           
  5422                           ; Switch size 1, requested type "simple"
  5423                           ; Number of cases is 10, Range of values is 0 to 9
  5424                           ; switch strategies available:
  5425                           ; Name         Instructions Cycles
  5426                           ; direct_byte           26     6 (fixed)
  5427                           ; simple_byte           31    16 (average)
  5428                           ; jumptable            260     6 (fixed)
  5429                           ;	Chosen strategy is simple_byte
  5430     03B1  0870               	movf	i1SetSegments@a,w
  5431     03B2  3A00               	xorlw	0	; case 0
  5432     03B3  1903               	skipnz
  5433     03B4  2A27               	goto	i1l1529
  5434     03B5  3A01               	xorlw	1	; case 1
  5435     03B6  1903               	skipnz
  5436     03B7  2A4F               	goto	i1l1541
  5437     03B8  3A03               	xorlw	3	; case 2
  5438     03B9  1903               	skipnz
  5439     03BA  2A73               	goto	i1l1555
  5440     03BB  3A01               	xorlw	1	; case 3
  5441     03BC  1903               	skipnz
  5442     03BD  2A9A               	goto	i1l1567
  5443     03BE  3A07               	xorlw	7	; case 4
  5444     03BF  1903               	skipnz
  5445     03C0  2AC1               	goto	i1l1579
  5446     03C1  3A01               	xorlw	1	; case 5
  5447     03C2  1903               	skipnz
  5448     03C3  2AE7               	goto	i1l1593
  5449     03C4  3A03               	xorlw	3	; case 6
  5450     03C5  1903               	skipnz
  5451     03C6  2B0E               	goto	i1l1607
  5452     03C7  3A01               	xorlw	1	; case 7
  5453     03C8  1903               	skipnz
  5454     03C9  2B36               	goto	i1l1621
  5455     03CA  3A0F               	xorlw	15	; case 8
  5456     03CB  1903               	skipnz
  5457     03CC  2B5B               	goto	i1l1633
  5458     03CD  3A01               	xorlw	1	; case 9
  5459     03CE  1903               	skipnz
  5460     03CF  2B84               	goto	i1l1645
  5461     03D0  2BD1               	goto	i1l240
  5462     03D1                     i1l240:
  5463     03D1  0008               	return
  5464     03D2                     __end_ofi1_SetSegments:
  5465                           
  5466                           	psect	text21
  5467     07BD                     __ptext21:	
  5468 ;; *************** function _TMR1_Write *****************
  5469 ;; Defined at:
  5470 ;;		line 108 in file "mcc_generated_files/timer/src/tmr1.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  timerVal        2    0[COMMON] unsigned int 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5484 ;;      Params:         2       0       0       0       0       0       0       0
  5485 ;;      Locals:         0       0       0       0       0       0       0       0
  5486 ;;      Temps:          0       0       0       0       0       0       0       0
  5487 ;;      Totals:         2       0       0       0       0       0       0       0
  5488 ;;Total ram usage:        2 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_TMR1_OverflowISR
  5494 ;;		_TMR1_Reload
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498     07BD                     _TMR1_Write:	
  5499                           ;psect for function _TMR1_Write
  5500                           
  5501     07BD                     i1l1817:	
  5502                           ;incstack = 0
  5503                           ; Regs used in _TMR1_Write: [wreg+status,2]
  5504                           
  5505                           
  5506                           ;mcc_generated_files/timer/src/tmr1.c: 108: static void TMR1_Write(size_t timerVal);mcc_
      +                          generated_files/timer/src/tmr1.c: 109: {;mcc_generated_files/timer/src/tmr1.c: 110:     
      +                          if (T1CONbits.nT1SYNC == 1)
  5507     07BD  0020               	movlb	0	; select bank0
  5508     07BE  1D18               	btfss	24,2	;volatile
  5509     07BF  2FC1               	goto	u87_21
  5510     07C0  2FC2               	goto	u87_20
  5511     07C1                     u87_21:
  5512     07C1  2FC9               	goto	i1l1827
  5513     07C2                     u87_20:
  5514     07C2                     i1l1819:
  5515                           
  5516                           ;mcc_generated_files/timer/src/tmr1.c: 111:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          113:         T1CONbits.TMR1ON = 0;
  5517     07C2  1018               	bcf	24,0	;volatile
  5518     07C3                     i1l1821:
  5519                           
  5520                           ;mcc_generated_files/timer/src/tmr1.c: 116:         TMR1H = (uint8_t)(timerVal >> 8);
  5521     07C3  0871               	movf	TMR1_Write@timerVal+1,w
  5522     07C4  0097               	movwf	23	;volatile
  5523     07C5                     i1l1823:
  5524                           
  5525                           ;mcc_generated_files/timer/src/tmr1.c: 117:         TMR1L = (uint8_t)timerVal;
  5526     07C5  0870               	movf	TMR1_Write@timerVal,w
  5527     07C6  0096               	movwf	22	;volatile
  5528     07C7                     i1l1825:
  5529                           
  5530                           ;mcc_generated_files/timer/src/tmr1.c: 120:         T1CONbits.TMR1ON = 1;
  5531     07C7  1418               	bsf	24,0	;volatile
  5532                           
  5533                           ;mcc_generated_files/timer/src/tmr1.c: 121:     }
  5534     07C8  2FCD               	goto	i1l158
  5535     07C9                     i1l1827:
  5536                           
  5537                           ;mcc_generated_files/timer/src/tmr1.c: 123:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          125:         TMR1H = (uint8_t)(timerVal >> 8);
  5538     07C9  0871               	movf	TMR1_Write@timerVal+1,w
  5539     07CA  0097               	movwf	23	;volatile
  5540     07CB                     i1l1829:
  5541                           
  5542                           ;mcc_generated_files/timer/src/tmr1.c: 126:         TMR1L = (uint8_t)timerVal;
  5543     07CB  0870               	movf	TMR1_Write@timerVal,w
  5544     07CC  0096               	movwf	22	;volatile
  5545     07CD                     i1l158:
  5546     07CD  0008               	return
  5547     07CE                     __end_of_TMR1_Write:
  5548     007E                     btemp	set	126	;btemp
  5549     007E                     int$flags	set	126
  5550     007E                     wtemp0	set	126
  5551                           
  5552                           	psect	idloc
  5553                           
  5554                           ;Config register IDLOC0 @ 0x8000
  5555                           ;	unspecified, using default values
  5556     8000                     	org	32768
  5557     8000  3FFF               	dw	16383
  5558                           
  5559                           ;Config register IDLOC1 @ 0x8001
  5560                           ;	unspecified, using default values
  5561     8001                     	org	32769
  5562     8001  3FFF               	dw	16383
  5563                           
  5564                           ;Config register IDLOC2 @ 0x8002
  5565                           ;	unspecified, using default values
  5566     8002                     	org	32770
  5567     8002  3FFF               	dw	16383
  5568                           
  5569                           ;Config register IDLOC3 @ 0x8003
  5570                           ;	unspecified, using default values
  5571     8003                     	org	32771
  5572     8003  3FFF               	dw	16383
  5573                           
  5574                           	psect	config
  5575                           
  5576                           ;Config register CONFIG1 @ 0x8007
  5577                           ;	Oscillator Selection Bits
  5578                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5579                           ;	Watchdog Timer Enable
  5580                           ;	WDTE = OFF, WDT disabled
  5581                           ;	Power-up Timer Enable
  5582                           ;	PWRTE = OFF, PWRT disabled
  5583                           ;	MCLR Pin Function Select
  5584                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5585                           ;	Flash Program Memory Code Protection
  5586                           ;	CP = OFF, Program memory code protection is disabled
  5587                           ;	Brown-out Reset Enable
  5588                           ;	BOREN = ON, Brown-out Reset enabled
  5589                           ;	Clock Out Enable
  5590                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5591                           ;	Internal/External Switchover Mode
  5592                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  5593                           ;	Fail-Safe Clock Monitor Enable
  5594                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5595     8007                     	org	32775
  5596     8007  3FE4               	dw	16356
  5597                           
  5598                           ;Config register CONFIG2 @ 0x8008
  5599                           ;	Flash Memory Self-Write Protection
  5600                           ;	WRT = OFF, Write protection off
  5601                           ;	Stack Overflow/Underflow Reset Enable
  5602                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5603                           ;	Brown-out Reset Voltage Selection
  5604                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5605                           ;	Low-Power Brown Out Reset
  5606                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5607                           ;	Low-Voltage Programming Enable
  5608                           ;	LVP = ON, Low-voltage programming enabled
  5609     8008                     	org	32776
  5610     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    12
    Data        1
    BSS         25
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      63
    BANK1            80     15      15
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    S276$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> Tmr1CallBack(), TMR1_DefaultOverflowCallback(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    SetSegments@digit	PTR struct digit size(1) Largest target is 7
		 -> one(BANK0[7]), ten(BANK0[7]), hundred(BANK0[7]), 

    ClearDigit@digit	PTR struct digit size(1) Largest target is 7
		 -> one(BANK0[7]), ten(BANK0[7]), hundred(BANK0[7]), 

    TMR1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Tmr1CallBack(), TMR1_DefaultOverflowCallback(), 

    TMR1_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Tmr1CallBack(), TMR1_DefaultOverflowCallback(), Absolute function(), 

    S276TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    tmr1.Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S276TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR1_OverflowCallbackRegister(), 

    tmr1.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR1_OverflowCallbackRegister(), 

    S276TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR1_PeriodCountSet(), 

    tmr1.PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR1_PeriodCountSet(), 

    S276TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), 

    tmr1.Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), 

    S276TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), 

    tmr1.Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), 

    S276TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Initialize(), 

    tmr1.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Initialize(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), INT_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_Display->i1___awmod
    i1___awmod->i1___awdiv

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _Display->___awmod
    ___awmod->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_OverflowISR->_Tmr1CallBack
    _Tmr1CallBack->i1_Display
    i1_Display->i1___awmod

Critical Paths under _main in BANK1

    _main->_Display
    _Display->___awmod

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5585
                                             13 BANK1      2     2      0
                         _ClearDigit
                            _Display
                  _SYSTEM_Initialize
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR1_OverflowCallbackRegister                        2     0      2     174
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display                                             11     9      2    4886
                                              2 BANK1     11     9      2
                        _SetSegments
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                             26 BANK0      5     1      4
                                              0 BANK1      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                             17 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _SetSegments                                          4     1      3    3097
                                             17 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _ClearDigit                                           1     1      0     253
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3093
                   _TMR1_OverflowISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_OverflowISR                                     0     0      0    3093
                   Absolute function *
       _TMR1_DefaultOverflowCallback *
                         _TMR1_Write
                       _Tmr1CallBack *
 ---------------------------------------------------------------------------------
 (6) _Tmr1CallBack                                         4     4      0    2853
                                             13 BANK0      4     4      0
                          i1_Display
 ---------------------------------------------------------------------------------
 (7) i1_Display                                           11     9      2    2829
                                              2 BANK0     11     9      2
                      i1_SetSegments
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (8) i1___awmod                                            7     3      4     400
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                          i1___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (8) i1_SetSegments                                        4     1      3    1894
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR1_Write                                           2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearDigit
   _Display
     _SetSegments
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_OverflowCallbackRegister
   _TMR1_OverflowCallbackRegister

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_OverflowISR
     Absolute function(Fake) *
     _TMR1_DefaultOverflowCallback *
     _TMR1_Write *
     _Tmr1CallBack *
       i1_Display
         i1_SetSegments
         i1___awdiv
         i1___awmod
           i1___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1F      3F       6       78.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      F       F       8       18.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      5C      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 04 10:30:23 2025

                                           l7 0FF9                                            l62 07DA  
                                          l48 078D                                            l83 07F2  
                                ___awdiv@sign 0037                                           l102 0FFF  
                                         l240 01FE                                           l144 07A6  
                                         l219 0771                                           l243 0529  
                                         l177 07FE                                           l476 05F8  
                                         l489 0657                                           _RA0 0060  
                             _timer1ReloadVal 005A                                           _one 0051  
                                         _ten 004A                                  ___awmod@sign 00A1  
                                         wreg 0009                                          l2101 0762  
                                        l2103 0767                                          l2105 076C  
                                        l2211 003A                                          l2301 0140  
                                        l2221 0054                                          l2213 003F  
                                        l2311 015C                                          l2303 0144  
                                        l2231 0076                                          l2223 005E  
                                        l2215 0044                                          l2207 002D  
                                        l2321 017D                                          l2313 0163  
                                        l2305 014A                                          l2241 0090  
                                        l2233 007C                                          l2225 0064  
                                        l2217 0049                                          l2209 0032  
                                        l2401 05F9                                          l2331 019E  
                                        l2323 0182                                          l2315 016D  
                                        l2307 0150                                          l2251 00AF  
                                        l2243 0095                                          l2235 0080  
                                        l2227 006A                                          l2219 004E  
                                        l2411 060D                                          l2403 05FB  
                                        l2341 01C1                                          l2333 01A4  
                                        l2325 0188                                          l2317 0173  
                                        l2309 0156                                          l2261 00D1  
                                        l2253 00B5                                          l2245 009A  
                                        l2237 0085                                          l2229 0070  
                                        l2421 0626                                          l2413 0612  
                                        l2405 0600                                          l2085 07CE  
                                        l2095 0750                                          l2343 01C7  
                                        l2335 01AA                                          l2327 0192  
                                        l2319 0178                                          l2271 00EE  
                                        l2263 00D7                                          l2255 00BB  
                                        l2247 00A0                                          l2239 008B  
                                        l2351 01D9                                          l2423 062B  
                                        l2415 0618                                          l2431 0646  
                                        l2407 0605                                          l2097 0758  
                                        l2345 01CC                                          l2337 01B1  
                                        l2329 0198                                          l2281 0107  
                                        l2273 00F2                                          l2265 00DD  
                                        l2257 00C0                                          l2249 00AA  
                                        l2361 059F                                          l2433 064C  
                                        l2425 0636                                          l2417 061C  
                                        l2409 0608                                          l2441 04DC  
                                        l1801 0792                                          l2099 075D  
                                        l2347 01D2                                          l2339 01BB  
                                        l2291 0123                                          l2283 010D  
                                        l2275 00F7                                          l2267 00E2  
                                        l2259 00C7                                          l2371 05B3  
                                        l2363 05A4                                          l2435 0652  
                                        l2427 063A                                          l2419 0621  
                                        l2443 04F2                                          l1811 07A3  
                                        l1803 0794                                          l2451 070E  
                                        l2293 0129                                          l2285 0114  
                                        l2277 00FD                                          l2269 00E7  
                                        l2381 05C7                                          l2373 05B5  
                                        l2365 05A6                                          l2357 0599  
                                        l2429 063F                                          l2445 04FE  
                                        l1813 07E7                                          l1805 0798  
                                        l2461 071F                                          l2453 0710  
                                        l2519 01DE                                          l2295 012E  
                                        l2287 0119                                          l2279 0102  
                                        l2391 05E4                                          l2383 05CB  
                                        l2375 05BB                                          l2367 05AA  
                                        l2359 059B                                          l2447 051C  
                                        l2439 04A0                                          l1815 07EA  
                                        l1807 079F                                          l2471 0736  
                                        l2463 0721                                          l2455 0714  
                                        l2297 0134                                          l2289 011D  
                                        l2385 05DA                                          l2377 05BE  
                                        l2393 05EA                                          l2369 05AF  
                                        l1761 0FF4                                          l1809 07A1  
                                        l2473 073B                                          l2465 0728  
                                        l2457 0718                                          l2449 070B  
                                        l2299 013B                                          l2395 05EF  
                                        l2387 05DE                                          l2379 05C3  
                                        l1763 0FF7                                          l1747 0FFA  
                                        l1771 077A                                          l2475 073E  
                                        l2467 0729                                          l2459 071C  
                                        l2397 05F4                                          l2389 05DF  
                                        l1781 0783                                          l1773 077B  
                                        l1765 0772                                          l1749 07F9  
                                        l2477 0746                                          l2469 072A  
                                        l1791 078A                                          l1783 0785  
                                        l1775 077D                                          l1767 0776  
                                        l1793 078B                                          l1785 0787  
                                        l1777 077E                                          l1769 0779  
                                        l1795 078C                                          l1787 0788  
                                        l1779 0782                                          l1789 0789  
                                        l1797 078E                                          l1799 0790  
                                        u1300 05CB                                          u1301 05CA  
                                        u1320 05DA                                          u1400 062B  
                                        u1321 05D9                                          u1401 062A  
                                        u1250 0032                                          u1410 0636  
                                        u1251 0031                                          u1315 05CC  
                                        u1411 0635                                          u1340 05EA  
                                        u1260 059F                                          u1500 074B  
                                        u1341 05E9                                          u1325 05D6  
                                        u1261 059E                                          u1501 074A  
                                        _LATA 010C                                          u1350 05EF  
                                        u1270 05AA                                          u1430 0646  
                                        _LATB 010D                                          u1351 05EE  
                                        u1335 05E0                                          u1271 05A9  
                                        u1431 0645                                          u1415 0632  
                                        _LATC 010E                                          u1280 05BB  
                                        u1440 064C                                          u1360 0600  
                                        u1281 05BA                                          u1441 064B  
                                        u1425 063B                                          u1361 05FF  
                                        u1370 060D                                          u1450 04EA  
                                        u1371 060C                                          u1451 04E8  
                                        u1380 0618                                          u1460 04EB  
                                        u1381 0617                                          u1517 0742  
                                        u1470 0515                                          u1295 05BF  
                                        u1471 0513                                          u1455 04E5  
                                        u1480 0516                                          u1490 073B  
                                        u1395 061D                                          u1475 0510  
                                        u1491 073A                                          i1l92 0017  
                                        _WPUA 020C                                          _WPUB 020D  
                                        _main 070B                                          _tmr1 07DB  
                                  _ClearDigit 074E                                          fsr0h 0005  
                                        fsr1h 0007                                          indf0 0000  
                                        fsr0l 0004                                          indf1 0001  
                                        fsr1l 0006                                          btemp 007E  
                 _INT_DefaultInterruptHandler 0000                                          start 0019  
             __end_of_INT_SetInterruptHandler 1000                               __end_of_Display 052A  
                           i1Display@hundreds 002B                ??_TMR1_DefaultOverflowCallback 0070  
                                       ?_main 0070                                i1___awdiv@sign 0076  
                             ??i1_SetSegments 0073                               __end_of___awdiv 05F9  
                             __end_of___awmod 0658                               ___awdiv@divisor 0031  
                                       _T1CON 0018                                         _IOCAF 0393  
                                       _IOCBF 0396                                         _IOCAN 0392  
                                       _IOCAP 0391                                         _IOCBN 0395  
                                       _IOCBP 0394                                         i1l223 049F  
                                       i1l240 03D1                                         i1l243 0598  
                                       i1l180 0003                                         i1l158 07CD  
                                       i1l174 07BC                                         i1l476 06B6  
                                       i1l489 070A                               ___awdiv@counter 0036  
                                       _TMR1H 0017                                         _TMR1L 0016  
                                       u70_20 0698                                         u70_21 0697  
                                       u70_25 0694                                         u63_20 0205  
                                       u63_21 0204                                         u71_25 069E  
                                       u72_20 06A8                                         u64_20 065D  
                                       u72_21 06A7                                         u64_21 065C  
                                       u80_25 06F2                                         u73_20 06AD  
                                       u65_20 0668                                         u81_20 06FC  
                                       u73_21 06AC                                         u65_21 0667  
                                       u81_21 06FB                                         _TRISA 008C  
                                       _TRISB 008D                                         _TRISC 008E  
                                       u66_20 0679                                         u82_20 0701  
                                       u74_20 06BD                                         u90_20 03EB  
                                       u66_21 0678                                         u82_21 0700  
                                       u74_21 06BC                                         u90_21 03EA  
                                       u75_20 06C8                                         u83_20 0564  
                                       u91_20 03F0                                         u75_21 06C7  
                                       u83_21 0562                                         u91_21 03EF  
                                       u67_25 067D                                         u83_25 055F  
                                       u68_20 0689                                         u76_20 06D3  
                                       u84_20 0565                                         u92_20 03F5  
                                       u68_21 0688                                         u76_21 06D2  
                                       u92_21 03F4                                         u85_20 0588  
                                       u93_20 0490                                         u85_21 0586  
                                       u93_21 048F                                         u69_25 068A  
                                       u77_25 06D7                                         u85_25 0583  
                                       u78_20 06E3                                         u86_20 0589  
                                       u78_21 06E2                                         u87_20 07C2  
                                       u79_20 06ED                                         u87_21 07C1  
                                       u79_21 06EC                                         u79_25 06E9  
                                       u88_20 03E1                                         u88_21 03E0  
                                       u89_20 03E6                                         u89_21 03E5  
                              i1___awmod@sign 0021                                   ?_TMR1_Write 0070  
                     __end_of_TMR1_Initialize 07A7                                         pclath 000A  
                                       status 0003                                         wtemp0 007E  
                             __initialization 001B                                  __end_of_main 074E  
                                __end_of_tmr1 07E7                              _TMR1_OverflowISR 07A7  
                 ?_INTERRUPT_InterruptManager 0070                                        ??_main 00AD  
                               ??_SetSegments 0034                              ___awdiv@dividend 0033  
       __end_of_TMR1_OverflowCallbackRegister 07FF                 _TMR1_OverflowCallbackRegister 07F9  
                                      _ANSELA 018C                                        _ANSELB 018D  
                                      _ANSELC 018E                                 ?_Tmr1CallBack 0070  
                                      _BORCON 0116                                        _T1GCON 0019  
                                      i1l2121 000F                                        i1l2123 0014  
                                      i1l2117 0006                                        i1l2119 000A  
                                      u120_20 000F                                        i1l1601 02FC  
                                      i1l1521 0212                                        u120_21 000E  
                                      i1l1611 0317                                        i1l1603 0301  
                                      i1l1531 0231                                        i1l1523 0217  
                                      i1l1515 0200                                        i1l2091 07B0  
                                      i1l1621 0336                                        i1l1613 031D  
                                      i1l1605 0307                                        i1l1541 024F  
                                      i1l1533 0237                                        i1l1525 021C  
                                      i1l1517 0205                                        i1l1701 06A8  
                                      i1l2093 07B7                                        i1l1631 0355  
                                      i1l1623 0340                                        i1l1615 0323  
                                      i1l1607 030E                                        i1l1551 0268  
                                      i1l1543 0253                                        i1l1535 023D  
                                      i1l1527 0221                                        i1l1519 020D  
                                      i1l1703 06AD                                        i1l1711 06B9  
                                      i1l2087 07A7                                        u121_20 0014  
                                      i1l2521 03B1                                        i1l1641 0377  
                                      i1l1633 035B                                        i1l1625 0346  
                                      i1l1617 0329                                        i1l1609 0313  
                                      i1l1561 0288                                        i1l1553 026D  
                                      i1l1545 0258                                        i1l1537 0243  
                                      i1l1529 0227                                        i1l1705 06B2  
                                      i1l1721 06CD                                        i1l1713 06BD  
                                      i1l2089 07A9                                        u121_21 0013  
                                      i1l1651 039A                                        i1l1643 037D  
                                      i1l1635 0365                                        i1l1627 034B  
                                      i1l1619 032F                                        i1l1571 02AA  
                                      i1l1563 028E                                        i1l1555 0273  
                                      i1l1547 025E                                        i1l1539 0249  
                                      i1l1731 06E3                                        i1l1723 06D3  
                                      i1l1715 06C2                                        i1l1821 07C3  
                                      i1l1653 039F                                        i1l1645 0384  
                                      i1l1637 036B                                        i1l1629 0350  
                                      i1l1581 02C5                                        i1l1573 02B0  
                                      i1l1565 0293                                        i1l1557 027D  
                                      i1l1549 0263                                        i1l1741 0701  
                                      i1l1733 06ED                                        i1l1725 06D6  
                                      i1l1717 06C4                                        i1l1709 06B7  
                                      i1l1823 07C5                                        i1l1655 03A5  
                                      i1l1647 038E                                        i1l1639 0371  
                                      i1l1591 02E0                                        i1l1583 02CA  
                                      i1l1575 02B5                                        i1l1567 029A  
                                      i1l1559 0282                                        i1l1671 0662  
                                      i1l1743 0706                                        i1l1735 06F1  
                                      i1l1727 06DB                                        i1l1719 06C8  
                                      i1l1751 052A                                        i1l1831 03D2  
                                      u114_20 07B7                                        i1l1825 07C7  
                                      i1l1817 07BD                                        i1l1649 0394  
                                      i1l1593 02E7                                        i1l1585 02D0  
                                      i1l1577 02BA                                        i1l1569 02A4  
                                      i1l1681 0673                                        i1l1673 0664  
                                      i1l1665 0658                                        i1l1737 06F6  
                                      i1l1729 06DF                                        i1l1753 0556  
                                      i1l1841 03EB                                        i1l1833 03D6  
                                      u114_21 07B6                                        i1l1819 07C2  
                                      i1l1827 07C9                                        i1l1595 02EC  
                                      i1l1587 02D5                                        i1l1579 02C1  
                                      i1l1659 03AC                                        i1l1691 0689  
                                      i1l1683 0679                                        i1l1675 0668  
                                      i1l1667 0659                                        i1l1739 06FC  
                                      i1l1755 056C                                        i1l1851 0491  
                                      i1l1843 03F0                                        i1l1835 03DC  
                                      i1l1829 07CB                                        i1l1597 02F0  
                                      i1l1589 02DA                                        i1l1693 0698  
                                      i1l1685 067C                                        i1l1677 066D  
                                      i1l1669 065D                                        i1l1757 0575  
                                      i1l1845 03F5                                        i1l1837 03E1  
                                      i1l1599 02F6                                        i1l1695 069C  
                                      i1l1687 0681                                        i1l1679 0671  
                                      i1l1759 058E                                        i1l1839 03E6  
                                      i1l1847 03F7                                        i1l1697 069D  
                                      i1l1689 0685                                        i1l1849 0490  
                                      i1l1699 06A2                                        u119_20 000A  
                                      u119_21 0009                                        _OSCCON 0099  
                                 ?_ClearDigit 0070                                     ??_Display 00A4  
                           __end_ofi1_Display 0599                                     ??___awdiv 0035  
                                   ??___awmod 003E                              ___awdiv@quotient 0038  
                             ___awmod@divisor 003A                               ___awmod@counter 00A0  
                                      _toggle 0042                             ?_CLOCK_Initialize 0070  
                           __end_ofi1___awdiv 06B7                             __end_ofi1___awmod 070B  
                          ??_CLOCK_Initialize 0031                              SetSegments@blank 0033  
                            SetSegments@digit 0034       INT_SetInterruptHandler@InterruptHandler 0031  
                              ??_Tmr1CallBack 002D                           __end_of_SetSegments 01FF  
                            ?_TMR1_Initialize 0070                             _SYSTEM_Initialize 07CE  
                     __end_of__initialization 0027                            ?_SYSTEM_Initialize 0070  
                              __pcstackCOMMON 0070                                  __pidataBANK0 07FF  
                         ??_SYSTEM_Initialize 0033                                _OPTION_REGbits 0095  
                   __end_of_SYSTEM_Initialize 07DB                                    __pbssBANK0 003F  
              ?_TMR1_OverflowCallbackRegister 0031                                    __pmaintext 070B  
                                  __pintentry 0004                            i1___awdiv@dividend 0072  
                                 _SetSegments 002B                           _TMR1_PeriodCountSet 0000  
                                ??_TMR1_Write 0072                      __end_of_TMR1_OverflowISR 07BD  
                                     _Display 04A0                            i1___awdiv@quotient 0077  
                                     ___awdiv 0599                                       ___awmod 05F9  
                        __end_of_Tmr1CallBack 04A0                            __end_of_TMR1_Write 07CE  
                          i1SetSegments@blank 0072                            i1SetSegments@digit 0073  
                                     __ptext1 07CE                                       __ptext2 078E  
                                     __ptext3 07F9                                       __ptext4 0772  
                                     __ptext5 07E7                                       __ptext6 0FFA  
                                     __ptext7 0FF4                                       __ptext8 04A0  
                                     __ptext9 05F9                                     _T1CONbits 0018  
                                     _counter 0041                         __end_ofi1_SetSegments 03D2  
                            ___awmod@dividend 003C                                       _hundred 0043  
                    ??_PIN_MANAGER_Initialize 0031                       _INT_SetInterruptHandler 0FFA  
                                     clrloop0 07F4                          end_of_initialization 0027  
                                ??_ClearDigit 0031                               Display@hundreds 00AB  
                                   i1_Display 052A                                     _PORTAbits 000C  
                                   _PORTBbits 000D                                     _PORTCbits 000E  
                                   _TMR1_Stop 0000                         _TMR1_OverflowCallback 0058  
                          __end_of_ClearDigit 0772  TMR1_OverflowCallbackRegister@CallbackHandler 0031  
                                   i1___awdiv 0658                                     i1___awmod 06B7  
                               i1Display@ones 0027                                 i1Display@tens 0029  
                __end_of_INTERRUPT_Initialize 07F3                                    ?i1_Display 0022  
                   ??_INT_SetInterruptHandler 0033                               ClearDigit@digit 0031  
                         start_initialization 001B                                    ?i1___awdiv 0070  
                                  ?i1___awmod 0079                            TMR1_Write@timerVal 0070  
                                SetSegments@a 0031                                   __pdataBANK0 005E  
                          i1___awmod@dividend 007B               ??_TMR1_OverflowCallbackRegister 0033  
                                ?_SetSegments 0031                             _Tmr1CallBack$1085 0030  
                                   ___latbits 0002                                 __pcstackBANK0 0020  
                               __pcstackBANK1 00A0                             ?_TMR1_OverflowISR 0070  
                                _Tmr1CallBack 03D2                                i1SetSegments@a 0070  
                          ??_TMR1_OverflowISR 007E                                      ?_Display 00A2  
                                   __pnvBANK0 0058                        _PIN_MANAGER_Initialize 0772  
                                    ?___awdiv 0031                                      ?___awmod 003A  
                           i1___awdiv@divisor 0070                             i1___awdiv@counter 0075  
                                 ??i1_Display 0024                  ??_INTERRUPT_InterruptManager 007E  
                                 ??i1___awdiv 0074                                   ??i1___awmod 007D  
                        _INTERRUPT_Initialize 07E7                              _CLOCK_Initialize 0FF4  
                                    _RA0Value 005E                                     clear_ram0 07F3  
                                    _PIE1bits 0091                                      _PIR1bits 0011  
                                    Display@a 00A2                             ??_TMR1_Initialize 0033  
                       ?_INTERRUPT_Initialize 0070                             i1___awmod@divisor 0079  
                           i1___awmod@counter 0020                         _TMR1_InterruptHandler 003F  
                                    __ptext10 0599                                      __ptext11 002B  
                                    __ptext20 01FF                                      __ptext12 074E  
                                    __ptext21 07BD                                    _T1GCONbits 0019  
                                    __ptext14 07A7                                      __ptext15 0003  
                                    __ptext16 03D2                                      __ptext17 052A  
                                    __ptext18 06B7                                      __ptext19 0658  
        __end_of_TMR1_DefaultOverflowCallback 0004                  _TMR1_DefaultOverflowCallback 0003  
                                    int$flags 007E            __end_of_INTERRUPT_InterruptManager 0019  
                  _INTERRUPT_InterruptManager 0004                                    _INTCONbits 000B  
                               i1_SetSegments 01FF                          _INT_InterruptHandler 005C  
                      ??_INTERRUPT_Initialize 0033                                      intlevel1 0000  
                     ?_PIN_MANAGER_Initialize 0070                                    i1Display@a 0022  
               ?_TMR1_DefaultOverflowCallback 0070                      ?_INT_SetInterruptHandler 0031  
                    __end_of_CLOCK_Initialize 0FFA                                 __pstringtext1 07DB  
                              ?i1_SetSegments 0070                                   Display@ones 00A7  
                                 Display@tens 00A9                                    _TMR1_Start 0000  
                                  _TMR1_Write 07BD                __end_of_PIN_MANAGER_Initialize 078E  
                             _TMR1_Initialize 078E  
