

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Sep 03 13:25:48 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16LF1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16LF1509 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0095                     	;# 
   103     0096                     	;# 
   104     0097                     	;# 
   105     0099                     	;# 
   106     009A                     	;# 
   107     009B                     	;# 
   108     009B                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     0111                     	;# 
   117     0112                     	;# 
   118     0113                     	;# 
   119     0114                     	;# 
   120     0115                     	;# 
   121     0116                     	;# 
   122     0117                     	;# 
   123     0118                     	;# 
   124     0119                     	;# 
   125     011D                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     018E                     	;# 
   129     0191                     	;# 
   130     0191                     	;# 
   131     0192                     	;# 
   132     0193                     	;# 
   133     0193                     	;# 
   134     0194                     	;# 
   135     0195                     	;# 
   136     0196                     	;# 
   137     0199                     	;# 
   138     019A                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019C                     	;# 
   142     019D                     	;# 
   143     019E                     	;# 
   144     019F                     	;# 
   145     020C                     	;# 
   146     020D                     	;# 
   147     0211                     	;# 
   148     0211                     	;# 
   149     0212                     	;# 
   150     0212                     	;# 
   151     0213                     	;# 
   152     0213                     	;# 
   153     0214                     	;# 
   154     0214                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0215                     	;# 
   158     0216                     	;# 
   159     0216                     	;# 
   160     0217                     	;# 
   161     0217                     	;# 
   162     0391                     	;# 
   163     0392                     	;# 
   164     0393                     	;# 
   165     0394                     	;# 
   166     0395                     	;# 
   167     0396                     	;# 
   168     0498                     	;# 
   169     0498                     	;# 
   170     0499                     	;# 
   171     049A                     	;# 
   172     049B                     	;# 
   173     049B                     	;# 
   174     049C                     	;# 
   175     049D                     	;# 
   176     049E                     	;# 
   177     049F                     	;# 
   178     0611                     	;# 
   179     0612                     	;# 
   180     0613                     	;# 
   181     0613                     	;# 
   182     0614                     	;# 
   183     0615                     	;# 
   184     0616                     	;# 
   185     0616                     	;# 
   186     0617                     	;# 
   187     0618                     	;# 
   188     0619                     	;# 
   189     0619                     	;# 
   190     061A                     	;# 
   191     061B                     	;# 
   192     061C                     	;# 
   193     061C                     	;# 
   194     0691                     	;# 
   195     0692                     	;# 
   196     0693                     	;# 
   197     0694                     	;# 
   198     0695                     	;# 
   199     0F0F                     	;# 
   200     0F10                     	;# 
   201     0F11                     	;# 
   202     0F12                     	;# 
   203     0F13                     	;# 
   204     0F14                     	;# 
   205     0F15                     	;# 
   206     0F16                     	;# 
   207     0F17                     	;# 
   208     0F18                     	;# 
   209     0F19                     	;# 
   210     0F1A                     	;# 
   211     0F1B                     	;# 
   212     0F1C                     	;# 
   213     0F1D                     	;# 
   214     0F1E                     	;# 
   215     0F1F                     	;# 
   216     0F20                     	;# 
   217     0F21                     	;# 
   218     0F22                     	;# 
   219     0F23                     	;# 
   220     0F24                     	;# 
   221     0F25                     	;# 
   222     0F26                     	;# 
   223     0F27                     	;# 
   224     0F28                     	;# 
   225     0F29                     	;# 
   226     0F2A                     	;# 
   227     0F2B                     	;# 
   228     0F2C                     	;# 
   229     0F2D                     	;# 
   230     0F2E                     	;# 
   231     0F2F                     	;# 
   232     0F8C                     	;# 
   233     0F8D                     	;# 
   234     0F91                     	;# 
   235     0F95                     	;# 
   236     0F96                     	;# 
   237     0F97                     	;# 
   238     0F9C                     	;# 
   239     0F9D                     	;# 
   240     0F9E                     	;# 
   241     0FE3                     	;# 
   242     0FE4                     	;# 
   243     0FE5                     	;# 
   244     0FE6                     	;# 
   245     0FE7                     	;# 
   246     0FE8                     	;# 
   247     0FE9                     	;# 
   248     0FEA                     	;# 
   249     0FEB                     	;# 
   250     0FED                     	;# 
   251     0FEE                     	;# 
   252     0FEF                     	;# 
   253     0000                     	;# 
   254     0001                     	;# 
   255     0002                     	;# 
   256     0003                     	;# 
   257     0004                     	;# 
   258     0005                     	;# 
   259     0006                     	;# 
   260     0007                     	;# 
   261     0008                     	;# 
   262     0009                     	;# 
   263     000A                     	;# 
   264     000B                     	;# 
   265     000C                     	;# 
   266     000D                     	;# 
   267     000E                     	;# 
   268     0011                     	;# 
   269     0012                     	;# 
   270     0013                     	;# 
   271     0015                     	;# 
   272     0016                     	;# 
   273     0016                     	;# 
   274     0017                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001B                     	;# 
   279     001C                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0095                     	;# 
   287     0096                     	;# 
   288     0097                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009B                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     009F                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     0111                     	;# 
   301     0112                     	;# 
   302     0113                     	;# 
   303     0114                     	;# 
   304     0115                     	;# 
   305     0116                     	;# 
   306     0117                     	;# 
   307     0118                     	;# 
   308     0119                     	;# 
   309     011D                     	;# 
   310     018C                     	;# 
   311     018D                     	;# 
   312     018E                     	;# 
   313     0191                     	;# 
   314     0191                     	;# 
   315     0192                     	;# 
   316     0193                     	;# 
   317     0193                     	;# 
   318     0194                     	;# 
   319     0195                     	;# 
   320     0196                     	;# 
   321     0199                     	;# 
   322     019A                     	;# 
   323     019B                     	;# 
   324     019B                     	;# 
   325     019C                     	;# 
   326     019D                     	;# 
   327     019E                     	;# 
   328     019F                     	;# 
   329     020C                     	;# 
   330     020D                     	;# 
   331     0211                     	;# 
   332     0211                     	;# 
   333     0212                     	;# 
   334     0212                     	;# 
   335     0213                     	;# 
   336     0213                     	;# 
   337     0214                     	;# 
   338     0214                     	;# 
   339     0215                     	;# 
   340     0215                     	;# 
   341     0215                     	;# 
   342     0216                     	;# 
   343     0216                     	;# 
   344     0217                     	;# 
   345     0217                     	;# 
   346     0391                     	;# 
   347     0392                     	;# 
   348     0393                     	;# 
   349     0394                     	;# 
   350     0395                     	;# 
   351     0396                     	;# 
   352     0498                     	;# 
   353     0498                     	;# 
   354     0499                     	;# 
   355     049A                     	;# 
   356     049B                     	;# 
   357     049B                     	;# 
   358     049C                     	;# 
   359     049D                     	;# 
   360     049E                     	;# 
   361     049F                     	;# 
   362     0611                     	;# 
   363     0612                     	;# 
   364     0613                     	;# 
   365     0613                     	;# 
   366     0614                     	;# 
   367     0615                     	;# 
   368     0616                     	;# 
   369     0616                     	;# 
   370     0617                     	;# 
   371     0618                     	;# 
   372     0619                     	;# 
   373     0619                     	;# 
   374     061A                     	;# 
   375     061B                     	;# 
   376     061C                     	;# 
   377     061C                     	;# 
   378     0691                     	;# 
   379     0692                     	;# 
   380     0693                     	;# 
   381     0694                     	;# 
   382     0695                     	;# 
   383     0F0F                     	;# 
   384     0F10                     	;# 
   385     0F11                     	;# 
   386     0F12                     	;# 
   387     0F13                     	;# 
   388     0F14                     	;# 
   389     0F15                     	;# 
   390     0F16                     	;# 
   391     0F17                     	;# 
   392     0F18                     	;# 
   393     0F19                     	;# 
   394     0F1A                     	;# 
   395     0F1B                     	;# 
   396     0F1C                     	;# 
   397     0F1D                     	;# 
   398     0F1E                     	;# 
   399     0F1F                     	;# 
   400     0F20                     	;# 
   401     0F21                     	;# 
   402     0F22                     	;# 
   403     0F23                     	;# 
   404     0F24                     	;# 
   405     0F25                     	;# 
   406     0F26                     	;# 
   407     0F27                     	;# 
   408     0F28                     	;# 
   409     0F29                     	;# 
   410     0F2A                     	;# 
   411     0F2B                     	;# 
   412     0F2C                     	;# 
   413     0F2D                     	;# 
   414     0F2E                     	;# 
   415     0F2F                     	;# 
   416     0F8C                     	;# 
   417     0F8D                     	;# 
   418     0F91                     	;# 
   419     0F95                     	;# 
   420     0F96                     	;# 
   421     0F97                     	;# 
   422     0F9C                     	;# 
   423     0F9D                     	;# 
   424     0F9E                     	;# 
   425     0FE3                     	;# 
   426     0FE4                     	;# 
   427     0FE5                     	;# 
   428     0FE6                     	;# 
   429     0FE7                     	;# 
   430     0FE8                     	;# 
   431     0FE9                     	;# 
   432     0FEA                     	;# 
   433     0FEB                     	;# 
   434     0FED                     	;# 
   435     0FEE                     	;# 
   436     0FEF                     	;# 
   437     0000                     	;# 
   438     0001                     	;# 
   439     0002                     	;# 
   440     0003                     	;# 
   441     0004                     	;# 
   442     0005                     	;# 
   443     0006                     	;# 
   444     0007                     	;# 
   445     0008                     	;# 
   446     0009                     	;# 
   447     000A                     	;# 
   448     000B                     	;# 
   449     000C                     	;# 
   450     000D                     	;# 
   451     000E                     	;# 
   452     0011                     	;# 
   453     0012                     	;# 
   454     0013                     	;# 
   455     0015                     	;# 
   456     0016                     	;# 
   457     0016                     	;# 
   458     0017                     	;# 
   459     0018                     	;# 
   460     0019                     	;# 
   461     001A                     	;# 
   462     001B                     	;# 
   463     001C                     	;# 
   464     008C                     	;# 
   465     008D                     	;# 
   466     008E                     	;# 
   467     0091                     	;# 
   468     0092                     	;# 
   469     0093                     	;# 
   470     0095                     	;# 
   471     0096                     	;# 
   472     0097                     	;# 
   473     0099                     	;# 
   474     009A                     	;# 
   475     009B                     	;# 
   476     009B                     	;# 
   477     009C                     	;# 
   478     009D                     	;# 
   479     009E                     	;# 
   480     009F                     	;# 
   481     010C                     	;# 
   482     010D                     	;# 
   483     010E                     	;# 
   484     0111                     	;# 
   485     0112                     	;# 
   486     0113                     	;# 
   487     0114                     	;# 
   488     0115                     	;# 
   489     0116                     	;# 
   490     0117                     	;# 
   491     0118                     	;# 
   492     0119                     	;# 
   493     011D                     	;# 
   494     018C                     	;# 
   495     018D                     	;# 
   496     018E                     	;# 
   497     0191                     	;# 
   498     0191                     	;# 
   499     0192                     	;# 
   500     0193                     	;# 
   501     0193                     	;# 
   502     0194                     	;# 
   503     0195                     	;# 
   504     0196                     	;# 
   505     0199                     	;# 
   506     019A                     	;# 
   507     019B                     	;# 
   508     019B                     	;# 
   509     019C                     	;# 
   510     019D                     	;# 
   511     019E                     	;# 
   512     019F                     	;# 
   513     020C                     	;# 
   514     020D                     	;# 
   515     0211                     	;# 
   516     0211                     	;# 
   517     0212                     	;# 
   518     0212                     	;# 
   519     0213                     	;# 
   520     0213                     	;# 
   521     0214                     	;# 
   522     0214                     	;# 
   523     0215                     	;# 
   524     0215                     	;# 
   525     0215                     	;# 
   526     0216                     	;# 
   527     0216                     	;# 
   528     0217                     	;# 
   529     0217                     	;# 
   530     0391                     	;# 
   531     0392                     	;# 
   532     0393                     	;# 
   533     0394                     	;# 
   534     0395                     	;# 
   535     0396                     	;# 
   536     0498                     	;# 
   537     0498                     	;# 
   538     0499                     	;# 
   539     049A                     	;# 
   540     049B                     	;# 
   541     049B                     	;# 
   542     049C                     	;# 
   543     049D                     	;# 
   544     049E                     	;# 
   545     049F                     	;# 
   546     0611                     	;# 
   547     0612                     	;# 
   548     0613                     	;# 
   549     0613                     	;# 
   550     0614                     	;# 
   551     0615                     	;# 
   552     0616                     	;# 
   553     0616                     	;# 
   554     0617                     	;# 
   555     0618                     	;# 
   556     0619                     	;# 
   557     0619                     	;# 
   558     061A                     	;# 
   559     061B                     	;# 
   560     061C                     	;# 
   561     061C                     	;# 
   562     0691                     	;# 
   563     0692                     	;# 
   564     0693                     	;# 
   565     0694                     	;# 
   566     0695                     	;# 
   567     0F0F                     	;# 
   568     0F10                     	;# 
   569     0F11                     	;# 
   570     0F12                     	;# 
   571     0F13                     	;# 
   572     0F14                     	;# 
   573     0F15                     	;# 
   574     0F16                     	;# 
   575     0F17                     	;# 
   576     0F18                     	;# 
   577     0F19                     	;# 
   578     0F1A                     	;# 
   579     0F1B                     	;# 
   580     0F1C                     	;# 
   581     0F1D                     	;# 
   582     0F1E                     	;# 
   583     0F1F                     	;# 
   584     0F20                     	;# 
   585     0F21                     	;# 
   586     0F22                     	;# 
   587     0F23                     	;# 
   588     0F24                     	;# 
   589     0F25                     	;# 
   590     0F26                     	;# 
   591     0F27                     	;# 
   592     0F28                     	;# 
   593     0F29                     	;# 
   594     0F2A                     	;# 
   595     0F2B                     	;# 
   596     0F2C                     	;# 
   597     0F2D                     	;# 
   598     0F2E                     	;# 
   599     0F2F                     	;# 
   600     0F8C                     	;# 
   601     0F8D                     	;# 
   602     0F91                     	;# 
   603     0F95                     	;# 
   604     0F96                     	;# 
   605     0F97                     	;# 
   606     0F9C                     	;# 
   607     0F9D                     	;# 
   608     0F9E                     	;# 
   609     0FE3                     	;# 
   610     0FE4                     	;# 
   611     0FE5                     	;# 
   612     0FE6                     	;# 
   613     0FE7                     	;# 
   614     0FE8                     	;# 
   615     0FE9                     	;# 
   616     0FEA                     	;# 
   617     0FEB                     	;# 
   618     0FED                     	;# 
   619     0FEE                     	;# 
   620     0FEF                     	;# 
   621     0000                     	;# 
   622     0001                     	;# 
   623     0002                     	;# 
   624     0003                     	;# 
   625     0004                     	;# 
   626     0005                     	;# 
   627     0006                     	;# 
   628     0007                     	;# 
   629     0008                     	;# 
   630     0009                     	;# 
   631     000A                     	;# 
   632     000B                     	;# 
   633     000C                     	;# 
   634     000D                     	;# 
   635     000E                     	;# 
   636     0011                     	;# 
   637     0012                     	;# 
   638     0013                     	;# 
   639     0015                     	;# 
   640     0016                     	;# 
   641     0016                     	;# 
   642     0017                     	;# 
   643     0018                     	;# 
   644     0019                     	;# 
   645     001A                     	;# 
   646     001B                     	;# 
   647     001C                     	;# 
   648     008C                     	;# 
   649     008D                     	;# 
   650     008E                     	;# 
   651     0091                     	;# 
   652     0092                     	;# 
   653     0093                     	;# 
   654     0095                     	;# 
   655     0096                     	;# 
   656     0097                     	;# 
   657     0099                     	;# 
   658     009A                     	;# 
   659     009B                     	;# 
   660     009B                     	;# 
   661     009C                     	;# 
   662     009D                     	;# 
   663     009E                     	;# 
   664     009F                     	;# 
   665     010C                     	;# 
   666     010D                     	;# 
   667     010E                     	;# 
   668     0111                     	;# 
   669     0112                     	;# 
   670     0113                     	;# 
   671     0114                     	;# 
   672     0115                     	;# 
   673     0116                     	;# 
   674     0117                     	;# 
   675     0118                     	;# 
   676     0119                     	;# 
   677     011D                     	;# 
   678     018C                     	;# 
   679     018D                     	;# 
   680     018E                     	;# 
   681     0191                     	;# 
   682     0191                     	;# 
   683     0192                     	;# 
   684     0193                     	;# 
   685     0193                     	;# 
   686     0194                     	;# 
   687     0195                     	;# 
   688     0196                     	;# 
   689     0199                     	;# 
   690     019A                     	;# 
   691     019B                     	;# 
   692     019B                     	;# 
   693     019C                     	;# 
   694     019D                     	;# 
   695     019E                     	;# 
   696     019F                     	;# 
   697     020C                     	;# 
   698     020D                     	;# 
   699     0211                     	;# 
   700     0211                     	;# 
   701     0212                     	;# 
   702     0212                     	;# 
   703     0213                     	;# 
   704     0213                     	;# 
   705     0214                     	;# 
   706     0214                     	;# 
   707     0215                     	;# 
   708     0215                     	;# 
   709     0215                     	;# 
   710     0216                     	;# 
   711     0216                     	;# 
   712     0217                     	;# 
   713     0217                     	;# 
   714     0391                     	;# 
   715     0392                     	;# 
   716     0393                     	;# 
   717     0394                     	;# 
   718     0395                     	;# 
   719     0396                     	;# 
   720     0498                     	;# 
   721     0498                     	;# 
   722     0499                     	;# 
   723     049A                     	;# 
   724     049B                     	;# 
   725     049B                     	;# 
   726     049C                     	;# 
   727     049D                     	;# 
   728     049E                     	;# 
   729     049F                     	;# 
   730     0611                     	;# 
   731     0612                     	;# 
   732     0613                     	;# 
   733     0613                     	;# 
   734     0614                     	;# 
   735     0615                     	;# 
   736     0616                     	;# 
   737     0616                     	;# 
   738     0617                     	;# 
   739     0618                     	;# 
   740     0619                     	;# 
   741     0619                     	;# 
   742     061A                     	;# 
   743     061B                     	;# 
   744     061C                     	;# 
   745     061C                     	;# 
   746     0691                     	;# 
   747     0692                     	;# 
   748     0693                     	;# 
   749     0694                     	;# 
   750     0695                     	;# 
   751     0F0F                     	;# 
   752     0F10                     	;# 
   753     0F11                     	;# 
   754     0F12                     	;# 
   755     0F13                     	;# 
   756     0F14                     	;# 
   757     0F15                     	;# 
   758     0F16                     	;# 
   759     0F17                     	;# 
   760     0F18                     	;# 
   761     0F19                     	;# 
   762     0F1A                     	;# 
   763     0F1B                     	;# 
   764     0F1C                     	;# 
   765     0F1D                     	;# 
   766     0F1E                     	;# 
   767     0F1F                     	;# 
   768     0F20                     	;# 
   769     0F21                     	;# 
   770     0F22                     	;# 
   771     0F23                     	;# 
   772     0F24                     	;# 
   773     0F25                     	;# 
   774     0F26                     	;# 
   775     0F27                     	;# 
   776     0F28                     	;# 
   777     0F29                     	;# 
   778     0F2A                     	;# 
   779     0F2B                     	;# 
   780     0F2C                     	;# 
   781     0F2D                     	;# 
   782     0F2E                     	;# 
   783     0F2F                     	;# 
   784     0F8C                     	;# 
   785     0F8D                     	;# 
   786     0F91                     	;# 
   787     0F95                     	;# 
   788     0F96                     	;# 
   789     0F97                     	;# 
   790     0F9C                     	;# 
   791     0F9D                     	;# 
   792     0F9E                     	;# 
   793     0FE3                     	;# 
   794     0FE4                     	;# 
   795     0FE5                     	;# 
   796     0FE6                     	;# 
   797     0FE7                     	;# 
   798     0FE8                     	;# 
   799     0FE9                     	;# 
   800     0FEA                     	;# 
   801     0FEB                     	;# 
   802     0FED                     	;# 
   803     0FEE                     	;# 
   804     0FEF                     	;# 
   805     0000                     	;# 
   806     0001                     	;# 
   807     0002                     	;# 
   808     0003                     	;# 
   809     0004                     	;# 
   810     0005                     	;# 
   811     0006                     	;# 
   812     0007                     	;# 
   813     0008                     	;# 
   814     0009                     	;# 
   815     000A                     	;# 
   816     000B                     	;# 
   817     000C                     	;# 
   818     000D                     	;# 
   819     000E                     	;# 
   820     0011                     	;# 
   821     0012                     	;# 
   822     0013                     	;# 
   823     0015                     	;# 
   824     0016                     	;# 
   825     0016                     	;# 
   826     0017                     	;# 
   827     0018                     	;# 
   828     0019                     	;# 
   829     001A                     	;# 
   830     001B                     	;# 
   831     001C                     	;# 
   832     008C                     	;# 
   833     008D                     	;# 
   834     008E                     	;# 
   835     0091                     	;# 
   836     0092                     	;# 
   837     0093                     	;# 
   838     0095                     	;# 
   839     0096                     	;# 
   840     0097                     	;# 
   841     0099                     	;# 
   842     009A                     	;# 
   843     009B                     	;# 
   844     009B                     	;# 
   845     009C                     	;# 
   846     009D                     	;# 
   847     009E                     	;# 
   848     009F                     	;# 
   849     010C                     	;# 
   850     010D                     	;# 
   851     010E                     	;# 
   852     0111                     	;# 
   853     0112                     	;# 
   854     0113                     	;# 
   855     0114                     	;# 
   856     0115                     	;# 
   857     0116                     	;# 
   858     0117                     	;# 
   859     0118                     	;# 
   860     0119                     	;# 
   861     011D                     	;# 
   862     018C                     	;# 
   863     018D                     	;# 
   864     018E                     	;# 
   865     0191                     	;# 
   866     0191                     	;# 
   867     0192                     	;# 
   868     0193                     	;# 
   869     0193                     	;# 
   870     0194                     	;# 
   871     0195                     	;# 
   872     0196                     	;# 
   873     0199                     	;# 
   874     019A                     	;# 
   875     019B                     	;# 
   876     019B                     	;# 
   877     019C                     	;# 
   878     019D                     	;# 
   879     019E                     	;# 
   880     019F                     	;# 
   881     020C                     	;# 
   882     020D                     	;# 
   883     0211                     	;# 
   884     0211                     	;# 
   885     0212                     	;# 
   886     0212                     	;# 
   887     0213                     	;# 
   888     0213                     	;# 
   889     0214                     	;# 
   890     0214                     	;# 
   891     0215                     	;# 
   892     0215                     	;# 
   893     0215                     	;# 
   894     0216                     	;# 
   895     0216                     	;# 
   896     0217                     	;# 
   897     0217                     	;# 
   898     0391                     	;# 
   899     0392                     	;# 
   900     0393                     	;# 
   901     0394                     	;# 
   902     0395                     	;# 
   903     0396                     	;# 
   904     0498                     	;# 
   905     0498                     	;# 
   906     0499                     	;# 
   907     049A                     	;# 
   908     049B                     	;# 
   909     049B                     	;# 
   910     049C                     	;# 
   911     049D                     	;# 
   912     049E                     	;# 
   913     049F                     	;# 
   914     0611                     	;# 
   915     0612                     	;# 
   916     0613                     	;# 
   917     0613                     	;# 
   918     0614                     	;# 
   919     0615                     	;# 
   920     0616                     	;# 
   921     0616                     	;# 
   922     0617                     	;# 
   923     0618                     	;# 
   924     0619                     	;# 
   925     0619                     	;# 
   926     061A                     	;# 
   927     061B                     	;# 
   928     061C                     	;# 
   929     061C                     	;# 
   930     0691                     	;# 
   931     0692                     	;# 
   932     0693                     	;# 
   933     0694                     	;# 
   934     0695                     	;# 
   935     0F0F                     	;# 
   936     0F10                     	;# 
   937     0F11                     	;# 
   938     0F12                     	;# 
   939     0F13                     	;# 
   940     0F14                     	;# 
   941     0F15                     	;# 
   942     0F16                     	;# 
   943     0F17                     	;# 
   944     0F18                     	;# 
   945     0F19                     	;# 
   946     0F1A                     	;# 
   947     0F1B                     	;# 
   948     0F1C                     	;# 
   949     0F1D                     	;# 
   950     0F1E                     	;# 
   951     0F1F                     	;# 
   952     0F20                     	;# 
   953     0F21                     	;# 
   954     0F22                     	;# 
   955     0F23                     	;# 
   956     0F24                     	;# 
   957     0F25                     	;# 
   958     0F26                     	;# 
   959     0F27                     	;# 
   960     0F28                     	;# 
   961     0F29                     	;# 
   962     0F2A                     	;# 
   963     0F2B                     	;# 
   964     0F2C                     	;# 
   965     0F2D                     	;# 
   966     0F2E                     	;# 
   967     0F2F                     	;# 
   968     0F8C                     	;# 
   969     0F8D                     	;# 
   970     0F91                     	;# 
   971     0F95                     	;# 
   972     0F96                     	;# 
   973     0F97                     	;# 
   974     0F9C                     	;# 
   975     0F9D                     	;# 
   976     0F9E                     	;# 
   977     0FE3                     	;# 
   978     0FE4                     	;# 
   979     0FE5                     	;# 
   980     0FE6                     	;# 
   981     0FE7                     	;# 
   982     0FE8                     	;# 
   983     0FE9                     	;# 
   984     0FEA                     	;# 
   985     0FEB                     	;# 
   986     0FED                     	;# 
   987     0FEE                     	;# 
   988     0FEF                     	;# 
   989     0000                     	;# 
   990     0001                     	;# 
   991     0002                     	;# 
   992     0003                     	;# 
   993     0004                     	;# 
   994     0005                     	;# 
   995     0006                     	;# 
   996     0007                     	;# 
   997     0008                     	;# 
   998     0009                     	;# 
   999     000A                     	;# 
  1000     000B                     	;# 
  1001     000C                     	;# 
  1002     000D                     	;# 
  1003     000E                     	;# 
  1004     0011                     	;# 
  1005     0012                     	;# 
  1006     0013                     	;# 
  1007     0015                     	;# 
  1008     0016                     	;# 
  1009     0016                     	;# 
  1010     0017                     	;# 
  1011     0018                     	;# 
  1012     0019                     	;# 
  1013     001A                     	;# 
  1014     001B                     	;# 
  1015     001C                     	;# 
  1016     008C                     	;# 
  1017     008D                     	;# 
  1018     008E                     	;# 
  1019     0091                     	;# 
  1020     0092                     	;# 
  1021     0093                     	;# 
  1022     0095                     	;# 
  1023     0096                     	;# 
  1024     0097                     	;# 
  1025     0099                     	;# 
  1026     009A                     	;# 
  1027     009B                     	;# 
  1028     009B                     	;# 
  1029     009C                     	;# 
  1030     009D                     	;# 
  1031     009E                     	;# 
  1032     009F                     	;# 
  1033     010C                     	;# 
  1034     010D                     	;# 
  1035     010E                     	;# 
  1036     0111                     	;# 
  1037     0112                     	;# 
  1038     0113                     	;# 
  1039     0114                     	;# 
  1040     0115                     	;# 
  1041     0116                     	;# 
  1042     0117                     	;# 
  1043     0118                     	;# 
  1044     0119                     	;# 
  1045     011D                     	;# 
  1046     018C                     	;# 
  1047     018D                     	;# 
  1048     018E                     	;# 
  1049     0191                     	;# 
  1050     0191                     	;# 
  1051     0192                     	;# 
  1052     0193                     	;# 
  1053     0193                     	;# 
  1054     0194                     	;# 
  1055     0195                     	;# 
  1056     0196                     	;# 
  1057     0199                     	;# 
  1058     019A                     	;# 
  1059     019B                     	;# 
  1060     019B                     	;# 
  1061     019C                     	;# 
  1062     019D                     	;# 
  1063     019E                     	;# 
  1064     019F                     	;# 
  1065     020C                     	;# 
  1066     020D                     	;# 
  1067     0211                     	;# 
  1068     0211                     	;# 
  1069     0212                     	;# 
  1070     0212                     	;# 
  1071     0213                     	;# 
  1072     0213                     	;# 
  1073     0214                     	;# 
  1074     0214                     	;# 
  1075     0215                     	;# 
  1076     0215                     	;# 
  1077     0215                     	;# 
  1078     0216                     	;# 
  1079     0216                     	;# 
  1080     0217                     	;# 
  1081     0217                     	;# 
  1082     0391                     	;# 
  1083     0392                     	;# 
  1084     0393                     	;# 
  1085     0394                     	;# 
  1086     0395                     	;# 
  1087     0396                     	;# 
  1088     0498                     	;# 
  1089     0498                     	;# 
  1090     0499                     	;# 
  1091     049A                     	;# 
  1092     049B                     	;# 
  1093     049B                     	;# 
  1094     049C                     	;# 
  1095     049D                     	;# 
  1096     049E                     	;# 
  1097     049F                     	;# 
  1098     0611                     	;# 
  1099     0612                     	;# 
  1100     0613                     	;# 
  1101     0613                     	;# 
  1102     0614                     	;# 
  1103     0615                     	;# 
  1104     0616                     	;# 
  1105     0616                     	;# 
  1106     0617                     	;# 
  1107     0618                     	;# 
  1108     0619                     	;# 
  1109     0619                     	;# 
  1110     061A                     	;# 
  1111     061B                     	;# 
  1112     061C                     	;# 
  1113     061C                     	;# 
  1114     0691                     	;# 
  1115     0692                     	;# 
  1116     0693                     	;# 
  1117     0694                     	;# 
  1118     0695                     	;# 
  1119     0F0F                     	;# 
  1120     0F10                     	;# 
  1121     0F11                     	;# 
  1122     0F12                     	;# 
  1123     0F13                     	;# 
  1124     0F14                     	;# 
  1125     0F15                     	;# 
  1126     0F16                     	;# 
  1127     0F17                     	;# 
  1128     0F18                     	;# 
  1129     0F19                     	;# 
  1130     0F1A                     	;# 
  1131     0F1B                     	;# 
  1132     0F1C                     	;# 
  1133     0F1D                     	;# 
  1134     0F1E                     	;# 
  1135     0F1F                     	;# 
  1136     0F20                     	;# 
  1137     0F21                     	;# 
  1138     0F22                     	;# 
  1139     0F23                     	;# 
  1140     0F24                     	;# 
  1141     0F25                     	;# 
  1142     0F26                     	;# 
  1143     0F27                     	;# 
  1144     0F28                     	;# 
  1145     0F29                     	;# 
  1146     0F2A                     	;# 
  1147     0F2B                     	;# 
  1148     0F2C                     	;# 
  1149     0F2D                     	;# 
  1150     0F2E                     	;# 
  1151     0F2F                     	;# 
  1152     0F8C                     	;# 
  1153     0F8D                     	;# 
  1154     0F91                     	;# 
  1155     0F95                     	;# 
  1156     0F96                     	;# 
  1157     0F97                     	;# 
  1158     0F9C                     	;# 
  1159     0F9D                     	;# 
  1160     0F9E                     	;# 
  1161     0FE3                     	;# 
  1162     0FE4                     	;# 
  1163     0FE5                     	;# 
  1164     0FE6                     	;# 
  1165     0FE7                     	;# 
  1166     0FE8                     	;# 
  1167     0FE9                     	;# 
  1168     0FEA                     	;# 
  1169     0FEB                     	;# 
  1170     0FED                     	;# 
  1171     0FEE                     	;# 
  1172     0FEF                     	;# 
  1173                           
  1174 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1175     0000                     
  1176 ;; Function _TMR1_Start is unused but had its address taken
  1177     0000                     
  1178 ;; Function _TMR1_Stop is unused but had its address taken
  1179     0000                     
  1180 ;; Function _TMR1_PeriodCountSet is unused but had its address taken
  1181     0000                     
  1182                           	psect	stringtext1
  1183     04B3                     __pstringtext1:
  1184     04B3                     _tmr1:
  1185     04B3  3466               	retlw	low _TMR1_Initialize
  1186     04B4  3404               	retlw	high _TMR1_Initialize
  1187     04B5  3400               	retlw	0
  1188     04B6  3400               	retlw	0
  1189     04B7  3400               	retlw	0
  1190     04B8  3400               	retlw	0
  1191     04B9  3400               	retlw	0
  1192     04BA  3400               	retlw	0
  1193     04BB  34D0               	retlw	low _TMR1_OverflowCallbackRegister
  1194     04BC  3404               	retlw	high _TMR1_OverflowCallbackRegister
  1195     04BD  3400               	retlw	0
  1196     04BE  3400               	retlw	0
  1197     04BF                     __end_of_tmr1:
  1198                           
  1199                           	psect	nvBANK0
  1200     004D                     __pnvBANK0:
  1201     004D                     _TMR1_OverflowCallback:
  1202     004D                     	ds	2
  1203     004F                     _timer1ReloadVal:
  1204     004F                     	ds	2
  1205     0051                     _INT_InterruptHandler:
  1206     0051                     	ds	2
  1207     0019                     _T1GCONbits	set	25
  1208     0018                     _T1CONbits	set	24
  1209     0018                     _T1CON	set	24
  1210     0016                     _TMR1L	set	22
  1211     0017                     _TMR1H	set	23
  1212     0019                     _T1GCON	set	25
  1213     0011                     _PIR1bits	set	17
  1214     000B                     _INTCONbits	set	11
  1215     000D                     _PORTBbits	set	13
  1216     000E                     _PORTCbits	set	14
  1217     000C                     _PORTAbits	set	12
  1218     0091                     _PIE1bits	set	145
  1219     0095                     _OPTION_REGbits	set	149
  1220     008E                     _TRISC	set	142
  1221     008D                     _TRISB	set	141
  1222     008C                     _TRISA	set	140
  1223     0099                     _OSCCON	set	153
  1224     010E                     _LATC	set	270
  1225     010D                     _LATB	set	269
  1226     010C                     _LATA	set	268
  1227     0116                     _BORCON	set	278
  1228     018E                     _ANSELC	set	398
  1229     018D                     _ANSELB	set	397
  1230     018C                     _ANSELA	set	396
  1231     020D                     _WPUB	set	525
  1232     020C                     _WPUA	set	524
  1233     0396                     _IOCBF	set	918
  1234     0395                     _IOCBN	set	917
  1235     0394                     _IOCBP	set	916
  1236     0393                     _IOCAF	set	915
  1237     0392                     _IOCAN	set	914
  1238     0391                     _IOCAP	set	913
  1239                           
  1240                           	psect	cinit
  1241     001B                     start_initialization:	
  1242                           ; #config settings
  1243                           
  1244     001B                     __initialization:
  1245                           
  1246                           ; Clear objects allocated to COMMON
  1247     001B  01FB               	clrf	__pbssCOMMON& (0+127)
  1248                           
  1249                           ; Clear objects allocated to BANK0
  1250     001C  3020               	movlw	low __pbssBANK0
  1251     001D  0084               	movwf	4
  1252     001E  3000               	movlw	high __pbssBANK0
  1253     001F  0085               	movwf	5
  1254     0020  3017               	movlw	23
  1255     0021  3184  24CA  3180   	fcall	clear_ram0
  1256     0024                     end_of_initialization:	
  1257                           ;End of C runtime variable initialization code
  1258                           
  1259     0024                     __end_of__initialization:
  1260     0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1261     0025  0020               	movlb	0
  1262     0026  3183  2BD8         	ljmp	_main	;jump to C main() function
  1263                           
  1264                           	psect	bssCOMMON
  1265     007B                     __pbssCOMMON:
  1266     007B                     _toggle:
  1267     007B                     	ds	1
  1268                           
  1269                           	psect	bssBANK0
  1270     0020                     __pbssBANK0:
  1271     0020                     _TMR1_InterruptHandler:
  1272     0020                     	ds	2
  1273     0022                     _hundred:
  1274     0022                     	ds	7
  1275     0029                     _ten:
  1276     0029                     	ds	7
  1277     0030                     _one:
  1278     0030                     	ds	7
  1279                           
  1280                           	psect	clrtext
  1281     04CA                     clear_ram0:	
  1282                           ;	Called with FSR0 containing the base address, and
  1283                           ;	WREG with the size to clear
  1284                           
  1285     04CA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1286     04CB                     clrloop0:
  1287     04CB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1288     04CC  3101               	addfsr 0,1
  1289     04CD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1290     04CE  2CCB               	goto	clrloop0	;have we reached the end yet?
  1291     04CF  3400               	retlw	0	;all done for this memory range, return
  1292                           
  1293                           	psect	cstackCOMMON
  1294     0070                     __pcstackCOMMON:
  1295     0070                     ?_SYSTEM_Initialize:
  1296     0070                     ?_TMR1_Initialize:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299     0070                     ?_INTERRUPT_Initialize:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302     0070                     ?_TMR1_OverflowISR:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305     0070                     ?_TMR1_DefaultOverflowCallback:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308     0070                     ??_TMR1_DefaultOverflowCallback:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311     0070                     ?_CLOCK_Initialize:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314     0070                     ?_ClearDigit:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317     0070                     ?_Tmr1CallBack:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320     0070                     ??_Tmr1CallBack:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323     0070                     ?_PIN_MANAGER_Initialize:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326     0070                     ?_INTERRUPT_InterruptManager:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329     0070                     ?_TMR1_Write:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332     0070                     ?_main:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335     0070                     TMR1_Write@timerVal:	
  1336                           ; 2 bytes @ 0x0
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0x0
  1340     0070                     	ds	1
  1341     0071                     _Tmr1CallBack$1081:
  1342                           
  1343                           ; 1 bytes @ 0x1
  1344     0071                     	ds	1
  1345     0072                     ?_TMR1_OverflowCallbackRegister:
  1346     0072                     ?_INT_SetInterruptHandler:	
  1347                           ; 1 bytes @ 0x2
  1348                           
  1349     0072                     ??_TMR1_OverflowISR:	
  1350                           ; 1 bytes @ 0x2
  1351                           
  1352     0072                     ??_CLOCK_Initialize:	
  1353                           ; 1 bytes @ 0x2
  1354                           
  1355     0072                     ??_ClearDigit:	
  1356                           ; 1 bytes @ 0x2
  1357                           
  1358     0072                     ?_SetSegments:	
  1359                           ; 1 bytes @ 0x2
  1360                           
  1361     0072                     ??_PIN_MANAGER_Initialize:	
  1362                           ; 1 bytes @ 0x2
  1363                           
  1364     0072                     ??_INTERRUPT_InterruptManager:	
  1365                           ; 1 bytes @ 0x2
  1366                           
  1367     0072                     ??_TMR1_Write:	
  1368                           ; 1 bytes @ 0x2
  1369                           
  1370     0072                     ?___awdiv:	
  1371                           ; 1 bytes @ 0x2
  1372                           
  1373     0072                     ClearDigit@digit:	
  1374                           ; 2 bytes @ 0x2
  1375                           
  1376     0072                     SetSegments@a:	
  1377                           ; 1 bytes @ 0x2
  1378                           
  1379     0072                     INT_SetInterruptHandler@InterruptHandler:	
  1380                           ; 2 bytes @ 0x2
  1381                           
  1382     0072                     TMR1_OverflowCallbackRegister@CallbackHandler:	
  1383                           ; 2 bytes @ 0x2
  1384                           
  1385     0072                     ___awdiv@divisor:	
  1386                           ; 2 bytes @ 0x2
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x2
  1390     0072                     	ds	2
  1391     0074                     ??_SYSTEM_Initialize:
  1392     0074                     ??_TMR1_OverflowCallbackRegister:	
  1393                           ; 1 bytes @ 0x4
  1394                           
  1395     0074                     ??_TMR1_Initialize:	
  1396                           ; 1 bytes @ 0x4
  1397                           
  1398     0074                     ??_INTERRUPT_Initialize:	
  1399                           ; 1 bytes @ 0x4
  1400                           
  1401     0074                     ??_INT_SetInterruptHandler:	
  1402                           ; 1 bytes @ 0x4
  1403                           
  1404     0074                     SetSegments@blank:	
  1405                           ; 1 bytes @ 0x4
  1406                           
  1407     0074                     ___awdiv@dividend:	
  1408                           ; 1 bytes @ 0x4
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x4
  1412     0074                     	ds	1
  1413     0075                     ??_SetSegments:
  1414     0075                     SetSegments@digit:	
  1415                           ; 1 bytes @ 0x5
  1416                           
  1417                           
  1418                           ; 1 bytes @ 0x5
  1419     0075                     	ds	1
  1420     0076                     ??___awdiv:
  1421                           
  1422                           ; 1 bytes @ 0x6
  1423     0076                     	ds	1
  1424     0077                     ___awdiv@counter:
  1425                           
  1426                           ; 1 bytes @ 0x7
  1427     0077                     	ds	1
  1428     0078                     ___awdiv@sign:
  1429                           
  1430                           ; 1 bytes @ 0x8
  1431     0078                     	ds	1
  1432     0079                     ___awdiv@quotient:
  1433                           
  1434                           ; 2 bytes @ 0x9
  1435     0079                     	ds	2
  1436                           
  1437                           	psect	cstackBANK0
  1438     0037                     __pcstackBANK0:
  1439     0037                     ?___awmod:
  1440     0037                     ___awmod@divisor:	
  1441                           ; 2 bytes @ 0x0
  1442                           
  1443                           
  1444                           ; 2 bytes @ 0x0
  1445     0037                     	ds	2
  1446     0039                     ___awmod@dividend:
  1447                           
  1448                           ; 2 bytes @ 0x2
  1449     0039                     	ds	2
  1450     003B                     ??___awmod:
  1451                           
  1452                           ; 1 bytes @ 0x4
  1453     003B                     	ds	1
  1454     003C                     ___awmod@counter:
  1455                           
  1456                           ; 1 bytes @ 0x5
  1457     003C                     	ds	1
  1458     003D                     ___awmod@sign:
  1459                           
  1460                           ; 1 bytes @ 0x6
  1461     003D                     	ds	1
  1462     003E                     ?_Display:
  1463     003E                     Display@a:	
  1464                           ; 1 bytes @ 0x7
  1465                           
  1466                           
  1467                           ; 2 bytes @ 0x7
  1468     003E                     	ds	2
  1469     0040                     ??_Display:
  1470                           
  1471                           ; 1 bytes @ 0x9
  1472     0040                     	ds	3
  1473     0043                     Display@ones:
  1474                           
  1475                           ; 2 bytes @ 0xC
  1476     0043                     	ds	2
  1477     0045                     Display@tens:
  1478                           
  1479                           ; 2 bytes @ 0xE
  1480     0045                     	ds	2
  1481     0047                     Display@hundreds:
  1482                           
  1483                           ; 2 bytes @ 0x10
  1484     0047                     	ds	2
  1485     0049                     ??_main:
  1486                           
  1487                           ; 1 bytes @ 0x12
  1488     0049                     	ds	2
  1489     004B                     main@i:
  1490                           
  1491                           ; 2 bytes @ 0x14
  1492     004B                     	ds	2
  1493                           
  1494                           	psect	maintext
  1495     03D8                     __pmaintext:	
  1496 ;;
  1497 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1498 ;;
  1499 ;; *************** function _main *****************
  1500 ;; Defined at:
  1501 ;;		line 243 in file "main.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  i               2   20[BANK0 ] int 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  2   59[None  ] int 
  1508 ;; Registers used:
  1509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : B1F/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1515 ;;      Params:         0       0       0       0       0       0       0       0
  1516 ;;      Locals:         0       2       0       0       0       0       0       0
  1517 ;;      Temps:          0       2       0       0       0       0       0       0
  1518 ;;      Totals:         0       4       0       0       0       0       0       0
  1519 ;;Total ram usage:        4 bytes
  1520 ;; Hardware stack levels required when called: 6
  1521 ;; This function calls:
  1522 ;;		_ClearDigit
  1523 ;;		_Display
  1524 ;;		_SYSTEM_Initialize
  1525 ;;		_TMR1_OverflowCallbackRegister
  1526 ;; This function is called by:
  1527 ;;		Startup code after reset
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531     03D8                     _main:	
  1532                           ;psect for function _main
  1533                           
  1534     03D8                     l1711:	
  1535                           ;incstack = 0
  1536                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1537                           
  1538                           
  1539                           ;main.c: 244:     SYSTEM_Initialize();
  1540     03D8  3184  24A6  3183   	fcall	_SYSTEM_Initialize
  1541     03DB                     l1713:
  1542                           
  1543                           ;main.c: 246:     PORTAbits.RA5 = 1;
  1544     03DB  0020               	movlb	0	; select bank0
  1545     03DC  168C               	bsf	12,5	;volatile
  1546     03DD                     l1715:
  1547                           
  1548                           ;main.c: 248:     ClearDigit(&one);
  1549     03DD  3030               	movlw	(low (_one| 0))& (0+255)
  1550     03DE  3184  2426  3183   	fcall	_ClearDigit
  1551     03E1                     l1717:
  1552                           
  1553                           ;main.c: 249:     ClearDigit(&ten);
  1554     03E1  3029               	movlw	(low (_ten| 0))& (0+255)
  1555     03E2  3184  2426  3183   	fcall	_ClearDigit
  1556     03E5                     l1719:
  1557                           
  1558                           ;main.c: 250:     ClearDigit(&hundred);
  1559     03E5  3022               	movlw	(low (_hundred| 0))& (0+255)
  1560     03E6  3184  2426  3183   	fcall	_ClearDigit
  1561     03E9                     l1721:
  1562                           
  1563                           ;main.c: 252:     one.b = 1;
  1564     03E9  0020               	movlb	0	; select bank0
  1565     03EA  01B1               	clrf	_one+1
  1566     03EB  0AB1               	incf	_one+1,f
  1567     03EC                     l1723:
  1568                           
  1569                           ;main.c: 253:     one.c = 1;
  1570     03EC  01B2               	clrf	_one+2
  1571     03ED  0AB2               	incf	_one+2,f
  1572     03EE                     l1725:
  1573                           
  1574                           ;main.c: 259:     TMR1_OverflowCallbackRegister(Tmr1CallBack);
  1575     03EE  30FB               	movlw	low _Tmr1CallBack
  1576     03EF  00F2               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler
  1577     03F0  3001               	movlw	high _Tmr1CallBack
  1578     03F1  00F3               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler+1
  1579     03F2  3184  24D0  3183   	fcall	_TMR1_OverflowCallbackRegister
  1580     03F5                     l1727:
  1581                           
  1582                           ;main.c: 262:     (INTCONbits.GIE = 1);
  1583     03F5  178B               	bsf	11,7	;volatile
  1584     03F6                     l1729:
  1585                           
  1586                           ;main.c: 268:     (INTCONbits.PEIE = 1);
  1587     03F6  170B               	bsf	11,6	;volatile
  1588     03F7                     l1731:
  1589                           
  1590                           ;main.c: 273:     int i = 0;
  1591     03F7  0020               	movlb	0	; select bank0
  1592     03F8  01CB               	clrf	main@i
  1593     03F9  01CC               	clrf	main@i+1
  1594     03FA                     l1733:
  1595                           
  1596                           ;main.c: 276:         Display(i++);
  1597     03FA  0020               	movlb	0	; select bank0
  1598     03FB  084C               	movf	main@i+1,w
  1599     03FC  00BF               	movwf	Display@a+1
  1600     03FD  084B               	movf	main@i,w
  1601     03FE  00BE               	movwf	Display@a
  1602     03FF  3182  22B5  3183   	fcall	_Display
  1603     0402                     l1735:
  1604     0402  3001               	movlw	1
  1605     0403  0020               	movlb	0	; select bank0
  1606     0404  07CB               	addwf	main@i,f
  1607     0405  3000               	movlw	0
  1608     0406  3DCC               	addwfc	main@i+1,f
  1609     0407                     l1737:
  1610                           
  1611                           ;main.c: 278:         if (i > 199) {
  1612     0407  084C               	movf	main@i+1,w
  1613     0408  3A80               	xorlw	128
  1614     0409  00C9               	movwf	??_main
  1615     040A  3080               	movlw	128
  1616     040B  0249               	subwf	??_main,w
  1617     040C  1D03               	skipz
  1618     040D  2C10               	goto	u865
  1619     040E  30C8               	movlw	200
  1620     040F  024B               	subwf	main@i,w
  1621     0410                     u865:
  1622     0410  1C03               	skipc
  1623     0411  2C13               	goto	u861
  1624     0412  2C14               	goto	u860
  1625     0413                     u861:
  1626     0413  2C17               	goto	l1741
  1627     0414                     u860:
  1628     0414                     l1739:
  1629                           
  1630                           ;main.c: 279:             i = 0;
  1631     0414  0020               	movlb	0	; select bank0
  1632     0415  01CB               	clrf	main@i
  1633     0416  01CC               	clrf	main@i+1
  1634     0417                     l1741:
  1635                           
  1636                           ;main.c: 281:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1637     0417  3003               	movlw	3
  1638     0418  0020               	movlb	0	; select bank0
  1639     0419  00CA               	movwf	??_main+1
  1640     041A  3008               	movlw	8
  1641     041B  00C9               	movwf	??_main
  1642     041C  3077               	movlw	119
  1643     041D                     u877:
  1644     041D  0B89               	decfsz	9,f
  1645     041E  2C1D               	goto	u877
  1646     041F  0BC9               	decfsz	??_main,f
  1647     0420  2C1D               	goto	u877
  1648     0421  0BCA               	decfsz	??_main+1,f
  1649     0422  2C1D               	goto	u877
  1650     0423  2BFA               	goto	l1733
  1651     0424  3180  2819         	ljmp	start
  1652     0426                     __end_of_main:
  1653                           
  1654                           	psect	text1
  1655     04A6                     __ptext1:	
  1656 ;; *************** function _SYSTEM_Initialize *****************
  1657 ;; Defined at:
  1658 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0, pclath, cstack
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1672 ;;      Params:         0       0       0       0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; Hardware stack levels required when called: 5
  1679 ;; This function calls:
  1680 ;;		_CLOCK_Initialize
  1681 ;;		_INTERRUPT_Initialize
  1682 ;;		_PIN_MANAGER_Initialize
  1683 ;;		_TMR1_Initialize
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689     04A6                     _SYSTEM_Initialize:	
  1690                           ;psect for function _SYSTEM_Initialize
  1691                           
  1692     04A6                     l1581:	
  1693                           ;incstack = 0
  1694                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1695                           
  1696                           
  1697                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  1698     04A6  3184  24DC  3184   	fcall	_CLOCK_Initialize
  1699                           
  1700                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  1701     04A9  3184  2449  3184   	fcall	_PIN_MANAGER_Initialize
  1702                           
  1703                           ;mcc_generated_files/system/src/system.c: 43:     TMR1_Initialize();
  1704     04AC  3184  2466  3184   	fcall	_TMR1_Initialize
  1705                           
  1706                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  1707     04AF  3184  24BF  3184   	fcall	_INTERRUPT_Initialize
  1708     04B2                     l119:
  1709     04B2  0008               	return
  1710     04B3                     __end_of_SYSTEM_Initialize:
  1711                           
  1712                           	psect	text2
  1713     0466                     __ptext2:	
  1714 ;; *************** function _TMR1_Initialize *****************
  1715 ;; Defined at:
  1716 ;;		line 57 in file "mcc_generated_files/timer/src/tmr1.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1730 ;;      Params:         0       0       0       0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 4
  1737 ;; This function calls:
  1738 ;;		_TMR1_OverflowCallbackRegister
  1739 ;; This function is called by:
  1740 ;;		_SYSTEM_Initialize
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744     0466                     _TMR1_Initialize:	
  1745                           ;psect for function _TMR1_Initialize
  1746                           
  1747     0466                     l1443:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1750                           
  1751                           
  1752                           ;mcc_generated_files/timer/src/tmr1.c: 60:     T1GCON = 0x0;
  1753     0466  0020               	movlb	0	; select bank0
  1754     0467  0199               	clrf	25	;volatile
  1755     0468                     l1445:
  1756                           
  1757                           ;mcc_generated_files/timer/src/tmr1.c: 62:     TMR1H = 0xEC;
  1758     0468  30EC               	movlw	236
  1759     0469  0097               	movwf	23	;volatile
  1760     046A                     l1447:
  1761                           
  1762                           ;mcc_generated_files/timer/src/tmr1.c: 64:     TMR1L = 0x77;
  1763     046A  3077               	movlw	119
  1764     046B  0096               	movwf	22	;volatile
  1765     046C                     l1449:
  1766                           
  1767                           ;mcc_generated_files/timer/src/tmr1.c: 67:     timer1ReloadVal=((uint16_t)TMR1H << 8) | 
      +                          TMR1L;
  1768     046C  0817               	movf	23,w	;volatile
  1769     046D  00D0               	movwf	_timer1ReloadVal+1	;volatile
  1770     046E  0816               	movf	22,w	;volatile
  1771     046F  00CF               	movwf	_timer1ReloadVal	;volatile
  1772     0470                     l1451:
  1773                           
  1774                           ;mcc_generated_files/timer/src/tmr1.c: 70:     TMR1_OverflowCallbackRegister(TMR1_Defaul
      +                          tOverflowCallback);
  1775     0470  30E2               	movlw	low _TMR1_DefaultOverflowCallback
  1776     0471  00F2               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler
  1777     0472  3004               	movlw	high _TMR1_DefaultOverflowCallback
  1778     0473  00F3               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler+1
  1779     0474  3184  24D0  3184   	fcall	_TMR1_OverflowCallbackRegister
  1780     0477                     l1453:
  1781                           
  1782                           ;mcc_generated_files/timer/src/tmr1.c: 73:      PIR1bits.TMR1IF = 0;
  1783     0477  0020               	movlb	0	; select bank0
  1784     0478  1011               	bcf	17,0	;volatile
  1785     0479                     l1455:
  1786                           
  1787                           ;mcc_generated_files/timer/src/tmr1.c: 75:      PIE1bits.TMR1IE = 1;
  1788     0479  0021               	movlb	1	; select bank1
  1789     047A  1411               	bsf	17,0	;volatile
  1790     047B                     l1457:
  1791                           
  1792                           ;mcc_generated_files/timer/src/tmr1.c: 78:     T1CON = 0x31;
  1793     047B  3031               	movlw	49
  1794     047C  0020               	movlb	0	; select bank0
  1795     047D  0098               	movwf	24	;volatile
  1796     047E                     l201:
  1797     047E  0008               	return
  1798     047F                     __end_of_TMR1_Initialize:
  1799                           
  1800                           	psect	text3
  1801     04D0                     __ptext3:	
  1802 ;; *************** function _TMR1_OverflowCallbackRegister *****************
  1803 ;; Defined at:
  1804 ;;		line 163 in file "mcc_generated_files/timer/src/tmr1.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  CallbackHand    2    2[COMMON] PTR FTN()void 
  1807 ;;		 -> TMR1_DefaultOverflowCallback(1), Tmr1CallBack(1), 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1819 ;;      Params:         2       0       0       0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0
  1822 ;;      Totals:         2       0       0       0       0       0       0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 3
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;;		_TMR1_Initialize
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834     04D0                     _TMR1_OverflowCallbackRegister:	
  1835                           ;psect for function _TMR1_OverflowCallbackRegister
  1836                           
  1837     04D0                     l1237:	
  1838                           ;incstack = 0
  1839                           ; Regs used in _TMR1_OverflowCallbackRegister: [wreg]
  1840                           
  1841                           
  1842                           ;mcc_generated_files/timer/src/tmr1.c: 163: void TMR1_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 164: {;mcc_generated_files/
      +                          timer/src/tmr1.c: 165:     TMR1_OverflowCallback = CallbackHandler;
  1843     04D0  0873               	movf	TMR1_OverflowCallbackRegister@CallbackHandler+1,w
  1844     04D1  0020               	movlb	0	; select bank0
  1845     04D2  00CE               	movwf	_TMR1_OverflowCallback+1
  1846     04D3  0872               	movf	TMR1_OverflowCallbackRegister@CallbackHandler,w
  1847     04D4  00CD               	movwf	_TMR1_OverflowCallback
  1848     04D5                     l234:
  1849     04D5  0008               	return
  1850     04D6                     __end_of_TMR1_OverflowCallbackRegister:
  1851                           
  1852                           	psect	text4
  1853     0449                     __ptext4:	
  1854 ;; *************** function _PIN_MANAGER_Initialize *****************
  1855 ;; Defined at:
  1856 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1870 ;;      Params:         0       0       0       0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0       0
  1873 ;;      Totals:         0       0       0       0       0       0       0       0
  1874 ;;Total ram usage:        0 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 3
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_SYSTEM_Initialize
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884     0449                     _PIN_MANAGER_Initialize:	
  1885                           ;psect for function _PIN_MANAGER_Initialize
  1886                           
  1887     0449                     l1413:	
  1888                           ;incstack = 0
  1889                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1890                           
  1891                           
  1892                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  1893     0449  0022               	movlb	2	; select bank2
  1894     044A  018C               	clrf	12	;volatile
  1895                           
  1896                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  1897     044B  018D               	clrf	13	;volatile
  1898                           
  1899                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  1900     044C  018E               	clrf	14	;volatile
  1901     044D                     l1415:
  1902                           
  1903                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x9;
  1904     044D  3009               	movlw	9
  1905     044E  0021               	movlb	1	; select bank1
  1906     044F  008C               	movwf	12	;volatile
  1907     0450                     l1417:
  1908                           
  1909                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x0;
  1910     0450  018D               	clrf	13	;volatile
  1911     0451                     l1419:
  1912                           
  1913                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x0;
  1914     0451  018E               	clrf	14	;volatile
  1915     0452                     l1421:
  1916                           
  1917                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x0;
  1918     0452  0023               	movlb	3	; select bank3
  1919     0453  018C               	clrf	12	;volatile
  1920     0454                     l1423:
  1921                           
  1922                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x0;
  1923     0454  018D               	clrf	13	;volatile
  1924     0455                     l1425:
  1925                           
  1926                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0x0;
  1927     0455  018E               	clrf	14	;volatile
  1928                           
  1929                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x3F;
  1930     0456  303F               	movlw	63
  1931     0457  0024               	movlb	4	; select bank4
  1932     0458  008C               	movwf	12	;volatile
  1933                           
  1934                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xF0;
  1935     0459  30F0               	movlw	240
  1936     045A  008D               	movwf	13	;volatile
  1937     045B                     l1427:
  1938                           
  1939                           ;mcc_generated_files/system/src/pins.c: 66:     OPTION_REGbits.nWPUEN = 0x0;
  1940     045B  0021               	movlb	1	; select bank1
  1941     045C  1395               	bcf	21,7	;volatile
  1942     045D                     l1429:
  1943                           
  1944                           ;mcc_generated_files/system/src/pins.c: 90:     IOCAP = 0x0;
  1945     045D  0027               	movlb	7	; select bank7
  1946     045E  0191               	clrf	17	;volatile
  1947     045F                     l1431:
  1948                           
  1949                           ;mcc_generated_files/system/src/pins.c: 91:     IOCAN = 0x0;
  1950     045F  0192               	clrf	18	;volatile
  1951     0460                     l1433:
  1952                           
  1953                           ;mcc_generated_files/system/src/pins.c: 92:     IOCAF = 0x0;
  1954     0460  0193               	clrf	19	;volatile
  1955     0461                     l1435:
  1956                           
  1957                           ;mcc_generated_files/system/src/pins.c: 93:     IOCBP = 0x0;
  1958     0461  0194               	clrf	20	;volatile
  1959     0462                     l1437:
  1960                           
  1961                           ;mcc_generated_files/system/src/pins.c: 94:     IOCBN = 0x0;
  1962     0462  0195               	clrf	21	;volatile
  1963     0463                     l1439:
  1964                           
  1965                           ;mcc_generated_files/system/src/pins.c: 95:     IOCBF = 0x0;
  1966     0463  0196               	clrf	22	;volatile
  1967     0464                     l1441:
  1968                           
  1969                           ;mcc_generated_files/system/src/pins.c: 99:     INTCONbits.IOCIE = 1;
  1970     0464  158B               	bsf	11,3	;volatile
  1971     0465                     l105:
  1972     0465  0008               	return
  1973     0466                     __end_of_PIN_MANAGER_Initialize:
  1974                           
  1975                           	psect	text5
  1976     04BF                     __ptext5:	
  1977 ;; *************** function _INTERRUPT_Initialize *****************
  1978 ;; Defined at:
  1979 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, pclath, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1993 ;;      Params:         0       0       0       0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0       0
  1995 ;;      Temps:          0       0       0       0       0       0       0       0
  1996 ;;      Totals:         0       0       0       0       0       0       0       0
  1997 ;;Total ram usage:        0 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 4
  2000 ;; This function calls:
  2001 ;;		_INT_SetInterruptHandler
  2002 ;; This function is called by:
  2003 ;;		_SYSTEM_Initialize
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007     04BF                     _INTERRUPT_Initialize:	
  2008                           ;psect for function _INTERRUPT_Initialize
  2009                           
  2010     04BF                     l1459:	
  2011                           ;incstack = 0
  2012                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2013                           
  2014                           
  2015                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  2016     04BF  108B               	bcf	11,1	;volatile
  2017                           
  2018                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  2019     04C0  0021               	movlb	1	; select bank1
  2020     04C1  1715               	bsf	21,6	;volatile
  2021     04C2                     l1461:
  2022                           
  2023                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2024     04C2  3000               	movlw	0
  2025     04C3  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
  2026     04C4  3000               	movlw	0
  2027     04C5  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2028     04C6  3184  24D6  3184   	fcall	_INT_SetInterruptHandler
  2029     04C9                     l140:
  2030     04C9  0008               	return
  2031     04CA                     __end_of_INTERRUPT_Initialize:
  2032                           
  2033                           	psect	text6
  2034     04D6                     __ptext6:	
  2035 ;; *************** function _INT_SetInterruptHandler *****************
  2036 ;; Defined at:
  2037 ;;		line 97 in file "mcc_generated_files/system/src/interrupt.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2040 ;;		 -> INT_DefaultInterruptHandler(1), 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2052 ;;      Params:         2       0       0       0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0       0       0       0
  2055 ;;      Totals:         2       0       0       0       0       0       0       0
  2056 ;;Total ram usage:        2 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 3
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_INTERRUPT_Initialize
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066     04D6                     _INT_SetInterruptHandler:	
  2067                           ;psect for function _INT_SetInterruptHandler
  2068                           
  2069     04D6                     l1239:	
  2070                           ;incstack = 0
  2071                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2072                           
  2073                           
  2074                           ;mcc_generated_files/system/src/interrupt.c: 98:     INT_InterruptHandler = InterruptHan
      +                          dler;
  2075     04D6  0873               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2076     04D7  0020               	movlb	0	; select bank0
  2077     04D8  00D2               	movwf	_INT_InterruptHandler+1
  2078     04D9  0872               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2079     04DA  00D1               	movwf	_INT_InterruptHandler
  2080     04DB                     l159:
  2081     04DB  0008               	return
  2082     04DC                     __end_of_INT_SetInterruptHandler:
  2083                           
  2084                           	psect	text7
  2085     04DC                     __ptext7:	
  2086 ;; *************** function _CLOCK_Initialize *****************
  2087 ;; Defined at:
  2088 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2102 ;;      Params:         0       0       0       0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0
  2105 ;;      Totals:         0       0       0       0       0       0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 3
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_SYSTEM_Initialize
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116     04DC                     _CLOCK_Initialize:	
  2117                           ;psect for function _CLOCK_Initialize
  2118                           
  2119     04DC                     l1241:	
  2120                           ;incstack = 0
  2121                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  2122                           
  2123                           
  2124                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  2125     04DC  3078               	movlw	120
  2126     04DD  0021               	movlb	1	; select bank1
  2127     04DE  0099               	movwf	25	;volatile
  2128     04DF                     l1243:
  2129                           
  2130                           ;mcc_generated_files/system/src/clock.c: 43:     BORCON = (0 << 0x7)
  2131     04DF  0022               	movlb	2	; select bank2
  2132     04E0  0196               	clrf	22	;volatile
  2133     04E1                     l7:
  2134     04E1  0008               	return
  2135     04E2                     __end_of_CLOCK_Initialize:
  2136                           
  2137                           	psect	text8
  2138     02B5                     __ptext8:	
  2139 ;; *************** function _Display *****************
  2140 ;; Defined at:
  2141 ;;		line 233 in file "main.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  a               2    7[BANK0 ] int 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  hundreds        2   16[BANK0 ] int 
  2146 ;;  tens            2   14[BANK0 ] int 
  2147 ;;  ones            2   12[BANK0 ] int 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2157 ;;      Params:         0       2       0       0       0       0       0       0
  2158 ;;      Locals:         0       6       0       0       0       0       0       0
  2159 ;;      Temps:          0       3       0       0       0       0       0       0
  2160 ;;      Totals:         0      11       0       0       0       0       0       0
  2161 ;;Total ram usage:       11 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 4
  2164 ;; This function calls:
  2165 ;;		_SetSegments
  2166 ;;		___awdiv
  2167 ;;		___awmod
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173     02B5                     _Display:	
  2174                           ;psect for function _Display
  2175                           
  2176     02B5                     l1701:	
  2177                           ;incstack = 0
  2178                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2179                           
  2180                           
  2181                           ;main.c: 234:     int ones = a % 10;
  2182     02B5  300A               	movlw	10
  2183     02B6  0020               	movlb	0	; select bank0
  2184     02B7  00B7               	movwf	___awmod@divisor
  2185     02B8  3000               	movlw	0
  2186     02B9  00B8               	movwf	___awmod@divisor+1
  2187     02BA  083F               	movf	Display@a+1,w
  2188     02BB  00BA               	movwf	___awmod@dividend+1
  2189     02BC  083E               	movf	Display@a,w
  2190     02BD  00B9               	movwf	___awmod@dividend
  2191     02BE  3183  2384  3182   	fcall	___awmod
  2192     02C1  0020               	movlb	0	; select bank0
  2193     02C2  0838               	movf	?___awmod+1,w
  2194     02C3  00C4               	movwf	Display@ones+1
  2195     02C4  0837               	movf	?___awmod,w
  2196     02C5  00C3               	movwf	Display@ones
  2197                           
  2198                           ;main.c: 235:     int tens = (a / 10) % 10;
  2199     02C6  300A               	movlw	10
  2200     02C7  00B7               	movwf	___awmod@divisor
  2201     02C8  3000               	movlw	0
  2202     02C9  00B8               	movwf	___awmod@divisor+1
  2203     02CA  300A               	movlw	10
  2204     02CB  00F2               	movwf	___awdiv@divisor
  2205     02CC  3000               	movlw	0
  2206     02CD  00F3               	movwf	___awdiv@divisor+1
  2207     02CE  083F               	movf	Display@a+1,w
  2208     02CF  00F5               	movwf	___awdiv@dividend+1
  2209     02D0  083E               	movf	Display@a,w
  2210     02D1  00F4               	movwf	___awdiv@dividend
  2211     02D2  3183  2325  3182   	fcall	___awdiv
  2212     02D5  0873               	movf	?___awdiv+1,w
  2213     02D6  0020               	movlb	0	; select bank0
  2214     02D7  00BA               	movwf	___awmod@dividend+1
  2215     02D8  0872               	movf	?___awdiv,w
  2216     02D9  00B9               	movwf	___awmod@dividend
  2217     02DA  3183  2384  3182   	fcall	___awmod
  2218     02DD  0020               	movlb	0	; select bank0
  2219     02DE  0838               	movf	?___awmod+1,w
  2220     02DF  00C6               	movwf	Display@tens+1
  2221     02E0  0837               	movf	?___awmod,w
  2222     02E1  00C5               	movwf	Display@tens
  2223     02E2                     l1703:
  2224                           
  2225                           ;main.c: 236:     int hundreds = a > 99;
  2226     02E2  083F               	movf	Display@a+1,w
  2227     02E3  3A80               	xorlw	128
  2228     02E4  00C0               	movwf	??_Display
  2229     02E5  3080               	movlw	128
  2230     02E6  0240               	subwf	??_Display,w
  2231     02E7  1D03               	skipz
  2232     02E8  2AEB               	goto	u825
  2233     02E9  3064               	movlw	100
  2234     02EA  023E               	subwf	Display@a,w
  2235     02EB                     u825:
  2236     02EB  1803               	skipnc
  2237     02EC  2AEE               	goto	u821
  2238     02ED  2AF0               	goto	u820
  2239     02EE                     u821:
  2240     02EE  3001               	movlw	1
  2241     02EF  2AF1               	goto	u830
  2242     02F0                     u820:
  2243     02F0  3000               	movlw	0
  2244     02F1                     u830:
  2245     02F1  0020               	movlb	0	; select bank0
  2246     02F2  00C1               	movwf	??_Display+1
  2247     02F3  01C2               	clrf	??_Display+2
  2248     02F4  0841               	movf	??_Display+1,w
  2249     02F5  00C7               	movwf	Display@hundreds
  2250     02F6  0842               	movf	??_Display+2,w
  2251     02F7  00C8               	movwf	Display@hundreds+1
  2252     02F8                     l1705:
  2253                           
  2254                           ;main.c: 238:     SetSegments(&one, ones, 0);
  2255     02F8  0844               	movf	Display@ones+1,w
  2256     02F9  00F3               	movwf	SetSegments@a+1
  2257     02FA  0843               	movf	Display@ones,w
  2258     02FB  00F2               	movwf	SetSegments@a
  2259     02FC  01F4               	clrf	SetSegments@blank
  2260     02FD  3030               	movlw	(low (_one| 0))& (0+255)
  2261     02FE  3180  2028  3182   	fcall	_SetSegments
  2262     0301                     l1707:
  2263                           
  2264                           ;main.c: 239:     SetSegments(&ten, tens, (a < 10));
  2265     0301  0020               	movlb	0	; select bank0
  2266     0302  0846               	movf	Display@tens+1,w
  2267     0303  00F3               	movwf	SetSegments@a+1
  2268     0304  0845               	movf	Display@tens,w
  2269     0305  00F2               	movwf	SetSegments@a
  2270     0306  083F               	movf	Display@a+1,w
  2271     0307  3A80               	xorlw	128
  2272     0308  00C0               	movwf	??_Display
  2273     0309  3080               	movlw	128
  2274     030A  0240               	subwf	??_Display,w
  2275     030B  1D03               	skipz
  2276     030C  2B0F               	goto	u845
  2277     030D  300A               	movlw	10
  2278     030E  023E               	subwf	Display@a,w
  2279     030F                     u845:
  2280     030F  1C03               	skipc
  2281     0310  2B12               	goto	u841
  2282     0311  2B14               	goto	u840
  2283     0312                     u841:
  2284     0312  3001               	movlw	1
  2285     0313  2B15               	goto	u850
  2286     0314                     u840:
  2287     0314  3000               	movlw	0
  2288     0315                     u850:
  2289     0315  00F4               	movwf	SetSegments@blank
  2290     0316  3029               	movlw	(low (_ten| 0))& (0+255)
  2291     0317  3180  2028  3182   	fcall	_SetSegments
  2292     031A                     l1709:
  2293                           
  2294                           ;main.c: 240:     SetSegments(&hundred, hundreds, 0);
  2295     031A  0020               	movlb	0	; select bank0
  2296     031B  0848               	movf	Display@hundreds+1,w
  2297     031C  00F3               	movwf	SetSegments@a+1
  2298     031D  0847               	movf	Display@hundreds,w
  2299     031E  00F2               	movwf	SetSegments@a
  2300     031F  01F4               	clrf	SetSegments@blank
  2301     0320  3022               	movlw	(low (_hundred| 0))& (0+255)
  2302     0321  3180  2028  3182   	fcall	_SetSegments
  2303     0324                     l55:
  2304     0324  0008               	return
  2305     0325                     __end_of_Display:
  2306                           
  2307                           	psect	text9
  2308     0384                     __ptext9:	
  2309 ;; *************** function ___awmod *****************
  2310 ;; Defined at:
  2311 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  divisor         2    0[BANK0 ] int 
  2314 ;;  dividend        2    2[BANK0 ] int 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  sign            1    6[BANK0 ] unsigned char 
  2317 ;;  counter         1    5[BANK0 ] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  2    0[BANK0 ] int 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2327 ;;      Params:         0       4       0       0       0       0       0       0
  2328 ;;      Locals:         0       2       0       0       0       0       0       0
  2329 ;;      Temps:          0       1       0       0       0       0       0       0
  2330 ;;      Totals:         0       7       0       0       0       0       0       0
  2331 ;;Total ram usage:        7 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 3
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_Display
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341     0384                     ___awmod:	
  2342                           ;psect for function ___awmod
  2343                           
  2344     0384                     l1663:	
  2345                           ;incstack = 0
  2346                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2347                           
  2348     0384  0020               	movlb	0	; select bank0
  2349     0385  01BD               	clrf	___awmod@sign
  2350     0386                     l1665:
  2351     0386  1FBA               	btfss	___awmod@dividend+1,7
  2352     0387  2B89               	goto	u731
  2353     0388  2B8A               	goto	u730
  2354     0389                     u731:
  2355     0389  2B91               	goto	l1671
  2356     038A                     u730:
  2357     038A                     l1667:
  2358     038A  09B9               	comf	___awmod@dividend,f
  2359     038B  09BA               	comf	___awmod@dividend+1,f
  2360     038C  0AB9               	incf	___awmod@dividend,f
  2361     038D  1903               	skipnz
  2362     038E  0ABA               	incf	___awmod@dividend+1,f
  2363     038F                     l1669:
  2364     038F  01BD               	clrf	___awmod@sign
  2365     0390  0ABD               	incf	___awmod@sign,f
  2366     0391                     l1671:
  2367     0391  1FB8               	btfss	___awmod@divisor+1,7
  2368     0392  2B94               	goto	u741
  2369     0393  2B95               	goto	u740
  2370     0394                     u741:
  2371     0394  2B9A               	goto	l1675
  2372     0395                     u740:
  2373     0395                     l1673:
  2374     0395  09B7               	comf	___awmod@divisor,f
  2375     0396  09B8               	comf	___awmod@divisor+1,f
  2376     0397  0AB7               	incf	___awmod@divisor,f
  2377     0398  1903               	skipnz
  2378     0399  0AB8               	incf	___awmod@divisor+1,f
  2379     039A                     l1675:
  2380     039A  0837               	movf	___awmod@divisor,w
  2381     039B  0438               	iorwf	___awmod@divisor+1,w
  2382     039C  1903               	btfsc	3,2
  2383     039D  2B9F               	goto	u751
  2384     039E  2BA0               	goto	u750
  2385     039F                     u751:
  2386     039F  2BC9               	goto	l1693
  2387     03A0                     u750:
  2388     03A0                     l1677:
  2389     03A0  01BC               	clrf	___awmod@counter
  2390     03A1  0ABC               	incf	___awmod@counter,f
  2391     03A2  2BAC               	goto	l1683
  2392     03A3                     l1679:
  2393     03A3  3001               	movlw	1
  2394     03A4                     u765:
  2395     03A4  35B7               	lslf	___awmod@divisor,f
  2396     03A5  0DB8               	rlf	___awmod@divisor+1,f
  2397     03A6  0B89               	decfsz	9,f
  2398     03A7  2BA4               	goto	u765
  2399     03A8                     l1681:
  2400     03A8  3001               	movlw	1
  2401     03A9  00BB               	movwf	??___awmod
  2402     03AA  083B               	movf	??___awmod,w
  2403     03AB  07BC               	addwf	___awmod@counter,f
  2404     03AC                     l1683:
  2405     03AC  1FB8               	btfss	___awmod@divisor+1,7
  2406     03AD  2BAF               	goto	u771
  2407     03AE  2BB0               	goto	u770
  2408     03AF                     u771:
  2409     03AF  2BA3               	goto	l1679
  2410     03B0                     u770:
  2411     03B0                     l1685:
  2412     03B0  0838               	movf	___awmod@divisor+1,w
  2413     03B1  023A               	subwf	___awmod@dividend+1,w
  2414     03B2  1D03               	skipz
  2415     03B3  2BB6               	goto	u785
  2416     03B4  0837               	movf	___awmod@divisor,w
  2417     03B5  0239               	subwf	___awmod@dividend,w
  2418     03B6                     u785:
  2419     03B6  1C03               	skipc
  2420     03B7  2BB9               	goto	u781
  2421     03B8  2BBA               	goto	u780
  2422     03B9                     u781:
  2423     03B9  2BBE               	goto	l1689
  2424     03BA                     u780:
  2425     03BA                     l1687:
  2426     03BA  0837               	movf	___awmod@divisor,w
  2427     03BB  02B9               	subwf	___awmod@dividend,f
  2428     03BC  0838               	movf	___awmod@divisor+1,w
  2429     03BD  3BBA               	subwfb	___awmod@dividend+1,f
  2430     03BE                     l1689:
  2431     03BE  3001               	movlw	1
  2432     03BF                     u795:
  2433     03BF  36B8               	lsrf	___awmod@divisor+1,f
  2434     03C0  0CB7               	rrf	___awmod@divisor,f
  2435     03C1  0B89               	decfsz	9,f
  2436     03C2  2BBF               	goto	u795
  2437     03C3                     l1691:
  2438     03C3  3001               	movlw	1
  2439     03C4  02BC               	subwf	___awmod@counter,f
  2440     03C5  1D03               	btfss	3,2
  2441     03C6  2BC8               	goto	u801
  2442     03C7  2BC9               	goto	u800
  2443     03C8                     u801:
  2444     03C8  2BB0               	goto	l1685
  2445     03C9                     u800:
  2446     03C9                     l1693:
  2447     03C9  083D               	movf	___awmod@sign,w
  2448     03CA  1903               	btfsc	3,2
  2449     03CB  2BCD               	goto	u811
  2450     03CC  2BCE               	goto	u810
  2451     03CD                     u811:
  2452     03CD  2BD3               	goto	l1697
  2453     03CE                     u810:
  2454     03CE                     l1695:
  2455     03CE  09B9               	comf	___awmod@dividend,f
  2456     03CF  09BA               	comf	___awmod@dividend+1,f
  2457     03D0  0AB9               	incf	___awmod@dividend,f
  2458     03D1  1903               	skipnz
  2459     03D2  0ABA               	incf	___awmod@dividend+1,f
  2460     03D3                     l1697:
  2461     03D3  083A               	movf	___awmod@dividend+1,w
  2462     03D4  00B8               	movwf	?___awmod+1
  2463     03D5  0839               	movf	___awmod@dividend,w
  2464     03D6  00B7               	movwf	?___awmod
  2465     03D7                     l477:
  2466     03D7  0008               	return
  2467     03D8                     __end_of___awmod:
  2468                           
  2469                           	psect	text10
  2470     0325                     __ptext10:	
  2471 ;; *************** function ___awdiv *****************
  2472 ;; Defined at:
  2473 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  divisor         2    2[COMMON] int 
  2476 ;;  dividend        2    4[COMMON] int 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  quotient        2    9[COMMON] int 
  2479 ;;  sign            1    8[COMMON] unsigned char 
  2480 ;;  counter         1    7[COMMON] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  2    2[COMMON] int 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2490 ;;      Params:         4       0       0       0       0       0       0       0
  2491 ;;      Locals:         4       0       0       0       0       0       0       0
  2492 ;;      Temps:          1       0       0       0       0       0       0       0
  2493 ;;      Totals:         9       0       0       0       0       0       0       0
  2494 ;;Total ram usage:        9 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 3
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_Display
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504     0325                     ___awdiv:	
  2505                           ;psect for function ___awdiv
  2506                           
  2507     0325                     l1477:	
  2508                           ;incstack = 0
  2509                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2510                           
  2511     0325  01F8               	clrf	___awdiv@sign
  2512     0326                     l1479:
  2513     0326  1FF3               	btfss	___awdiv@divisor+1,7
  2514     0327  2B29               	goto	u441
  2515     0328  2B2A               	goto	u440
  2516     0329                     u441:
  2517     0329  2B31               	goto	l1485
  2518     032A                     u440:
  2519     032A                     l1481:
  2520     032A  09F2               	comf	___awdiv@divisor,f
  2521     032B  09F3               	comf	___awdiv@divisor+1,f
  2522     032C  0AF2               	incf	___awdiv@divisor,f
  2523     032D  1903               	skipnz
  2524     032E  0AF3               	incf	___awdiv@divisor+1,f
  2525     032F                     l1483:
  2526     032F  01F8               	clrf	___awdiv@sign
  2527     0330  0AF8               	incf	___awdiv@sign,f
  2528     0331                     l1485:
  2529     0331  1FF5               	btfss	___awdiv@dividend+1,7
  2530     0332  2B34               	goto	u451
  2531     0333  2B35               	goto	u450
  2532     0334                     u451:
  2533     0334  2B3E               	goto	l1491
  2534     0335                     u450:
  2535     0335                     l1487:
  2536     0335  09F4               	comf	___awdiv@dividend,f
  2537     0336  09F5               	comf	___awdiv@dividend+1,f
  2538     0337  0AF4               	incf	___awdiv@dividend,f
  2539     0338  1903               	skipnz
  2540     0339  0AF5               	incf	___awdiv@dividend+1,f
  2541     033A                     l1489:
  2542     033A  3001               	movlw	1
  2543     033B  00F6               	movwf	??___awdiv
  2544     033C  0876               	movf	??___awdiv,w
  2545     033D  06F8               	xorwf	___awdiv@sign,f
  2546     033E                     l1491:
  2547     033E  01F9               	clrf	___awdiv@quotient
  2548     033F  01FA               	clrf	___awdiv@quotient+1
  2549     0340                     l1493:
  2550     0340  0872               	movf	___awdiv@divisor,w
  2551     0341  0473               	iorwf	___awdiv@divisor+1,w
  2552     0342  1903               	btfsc	3,2
  2553     0343  2B45               	goto	u461
  2554     0344  2B46               	goto	u460
  2555     0345                     u461:
  2556     0345  2B75               	goto	l1513
  2557     0346                     u460:
  2558     0346                     l1495:
  2559     0346  01F7               	clrf	___awdiv@counter
  2560     0347  0AF7               	incf	___awdiv@counter,f
  2561     0348  2B52               	goto	l1501
  2562     0349                     l1497:
  2563     0349  3001               	movlw	1
  2564     034A                     u475:
  2565     034A  35F2               	lslf	___awdiv@divisor,f
  2566     034B  0DF3               	rlf	___awdiv@divisor+1,f
  2567     034C  0B89               	decfsz	9,f
  2568     034D  2B4A               	goto	u475
  2569     034E                     l1499:
  2570     034E  3001               	movlw	1
  2571     034F  00F6               	movwf	??___awdiv
  2572     0350  0876               	movf	??___awdiv,w
  2573     0351  07F7               	addwf	___awdiv@counter,f
  2574     0352                     l1501:
  2575     0352  1FF3               	btfss	___awdiv@divisor+1,7
  2576     0353  2B55               	goto	u481
  2577     0354  2B56               	goto	u480
  2578     0355                     u481:
  2579     0355  2B49               	goto	l1497
  2580     0356                     u480:
  2581     0356                     l1503:
  2582     0356  3001               	movlw	1
  2583     0357                     u495:
  2584     0357  35F9               	lslf	___awdiv@quotient,f
  2585     0358  0DFA               	rlf	___awdiv@quotient+1,f
  2586     0359  0B89               	decfsz	9,f
  2587     035A  2B57               	goto	u495
  2588     035B  0873               	movf	___awdiv@divisor+1,w
  2589     035C  0275               	subwf	___awdiv@dividend+1,w
  2590     035D  1D03               	skipz
  2591     035E  2B61               	goto	u505
  2592     035F  0872               	movf	___awdiv@divisor,w
  2593     0360  0274               	subwf	___awdiv@dividend,w
  2594     0361                     u505:
  2595     0361  1C03               	skipc
  2596     0362  2B64               	goto	u501
  2597     0363  2B65               	goto	u500
  2598     0364                     u501:
  2599     0364  2B6A               	goto	l1509
  2600     0365                     u500:
  2601     0365                     l1505:
  2602     0365  0872               	movf	___awdiv@divisor,w
  2603     0366  02F4               	subwf	___awdiv@dividend,f
  2604     0367  0873               	movf	___awdiv@divisor+1,w
  2605     0368  3BF5               	subwfb	___awdiv@dividend+1,f
  2606     0369                     l1507:
  2607     0369  1479               	bsf	___awdiv@quotient,0
  2608     036A                     l1509:
  2609     036A  3001               	movlw	1
  2610     036B                     u515:
  2611     036B  36F3               	lsrf	___awdiv@divisor+1,f
  2612     036C  0CF2               	rrf	___awdiv@divisor,f
  2613     036D  0B89               	decfsz	9,f
  2614     036E  2B6B               	goto	u515
  2615     036F                     l1511:
  2616     036F  3001               	movlw	1
  2617     0370  02F7               	subwf	___awdiv@counter,f
  2618     0371  1D03               	btfss	3,2
  2619     0372  2B74               	goto	u521
  2620     0373  2B75               	goto	u520
  2621     0374                     u521:
  2622     0374  2B56               	goto	l1503
  2623     0375                     u520:
  2624     0375                     l1513:
  2625     0375  0878               	movf	___awdiv@sign,w
  2626     0376  1903               	btfsc	3,2
  2627     0377  2B79               	goto	u531
  2628     0378  2B7A               	goto	u530
  2629     0379                     u531:
  2630     0379  2B7F               	goto	l1517
  2631     037A                     u530:
  2632     037A                     l1515:
  2633     037A  09F9               	comf	___awdiv@quotient,f
  2634     037B  09FA               	comf	___awdiv@quotient+1,f
  2635     037C  0AF9               	incf	___awdiv@quotient,f
  2636     037D  1903               	skipnz
  2637     037E  0AFA               	incf	___awdiv@quotient+1,f
  2638     037F                     l1517:
  2639     037F  087A               	movf	___awdiv@quotient+1,w
  2640     0380  00F3               	movwf	?___awdiv+1
  2641     0381  0879               	movf	___awdiv@quotient,w
  2642     0382  00F2               	movwf	?___awdiv
  2643     0383                     l464:
  2644     0383  0008               	return
  2645     0384                     __end_of___awdiv:
  2646                           
  2647                           	psect	text11
  2648     0028                     __ptext11:	
  2649 ;; *************** function _SetSegments *****************
  2650 ;; Defined at:
  2651 ;;		line 119 in file "main.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  digit           1    wreg     PTR struct digit
  2654 ;;		 -> one(7), ten(7), hundred(7), 
  2655 ;;  a               2    2[COMMON] int 
  2656 ;;  blank           1    4[COMMON] unsigned char 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  digit           1    5[COMMON] PTR struct digit
  2659 ;;		 -> one(7), ten(7), hundred(7), 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2669 ;;      Params:         3       0       0       0       0       0       0       0
  2670 ;;      Locals:         1       0       0       0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0
  2672 ;;      Totals:         4       0       0       0       0       0       0       0
  2673 ;;Total ram usage:        4 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 3
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_Display
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683     0028                     _SetSegments:	
  2684                           ;psect for function _SetSegments
  2685                           
  2686                           
  2687                           ;incstack = 0
  2688                           ; Regs used in _SetSegments: [wreg-fsr1h+status,2+status,0]
  2689                           ;SetSegments@digit stored from wreg
  2690     0028  00F5               	movwf	SetSegments@digit
  2691     0029                     l1263:
  2692                           
  2693                           ;main.c: 120:     if (blank) {
  2694     0029  0874               	movf	SetSegments@blank,w
  2695     002A  1903               	btfsc	3,2
  2696     002B  282D               	goto	u421
  2697     002C  282E               	goto	u420
  2698     002D                     u421:
  2699     002D  29D5               	goto	l1407
  2700     002E                     u420:
  2701     002E                     l1265:
  2702                           
  2703                           ;main.c: 121:         digit->a = 0;
  2704     002E  0875               	movf	SetSegments@digit,w
  2705     002F  0086               	movwf	6
  2706     0030  0187               	clrf	7
  2707     0031  0181               	clrf	1
  2708                           
  2709                           ;main.c: 122:         digit->b = 0;
  2710     0032  0A75               	incf	SetSegments@digit,w
  2711     0033  0086               	movwf	6
  2712     0034  0187               	clrf	7
  2713     0035  0181               	clrf	1
  2714     0036                     l1267:
  2715                           
  2716                           ;main.c: 123:         digit->c = 0;
  2717     0036  0875               	movf	SetSegments@digit,w
  2718     0037  3E02               	addlw	2
  2719     0038  0086               	movwf	6
  2720     0039  0187               	clrf	7
  2721     003A  0181               	clrf	1
  2722     003B                     l1269:
  2723                           
  2724                           ;main.c: 124:         digit->d = 0;
  2725     003B  0875               	movf	SetSegments@digit,w
  2726     003C  3E03               	addlw	3
  2727     003D  0086               	movwf	6
  2728     003E  0187               	clrf	7
  2729     003F  0181               	clrf	1
  2730     0040                     l1271:
  2731                           
  2732                           ;main.c: 125:         digit->e = 0;
  2733     0040  0875               	movf	SetSegments@digit,w
  2734     0041  3E04               	addlw	4
  2735     0042  0086               	movwf	6
  2736     0043  0187               	clrf	7
  2737     0044  0181               	clrf	1
  2738     0045                     l1273:
  2739                           
  2740                           ;main.c: 126:         digit->f = 0;
  2741     0045  0875               	movf	SetSegments@digit,w
  2742     0046  3E05               	addlw	5
  2743     0047  0086               	movwf	6
  2744     0048  0187               	clrf	7
  2745     0049  0181               	clrf	1
  2746     004A                     l1275:
  2747                           
  2748                           ;main.c: 127:         digit->g = 0;
  2749     004A  0875               	movf	SetSegments@digit,w
  2750     004B  3E06               	addlw	6
  2751     004C  0086               	movwf	6
  2752     004D  0187               	clrf	7
  2753     004E  0181               	clrf	1
  2754                           
  2755                           ;main.c: 128:     } else {
  2756     004F  29FA               	goto	l52
  2757     0050                     l1277:
  2758                           
  2759                           ;main.c: 131:                 digit->a = 1;
  2760     0050  0875               	movf	SetSegments@digit,w
  2761     0051  0086               	movwf	6
  2762     0052  0187               	clrf	7
  2763     0053  0181               	clrf	1
  2764     0054  0A81               	incf	1,f
  2765                           
  2766                           ;main.c: 132:                 digit->b = 1;
  2767     0055  0A75               	incf	SetSegments@digit,w
  2768     0056  0086               	movwf	6
  2769     0057  0187               	clrf	7
  2770     0058  0181               	clrf	1
  2771     0059  0A81               	incf	1,f
  2772     005A                     l1279:
  2773                           
  2774                           ;main.c: 133:                 digit->c = 1;
  2775     005A  0875               	movf	SetSegments@digit,w
  2776     005B  3E02               	addlw	2
  2777     005C  0086               	movwf	6
  2778     005D  0187               	clrf	7
  2779     005E  0181               	clrf	1
  2780     005F  0A81               	incf	1,f
  2781     0060                     l1281:
  2782                           
  2783                           ;main.c: 134:                 digit->d = 1;
  2784     0060  0875               	movf	SetSegments@digit,w
  2785     0061  3E03               	addlw	3
  2786     0062  0086               	movwf	6
  2787     0063  0187               	clrf	7
  2788     0064  0181               	clrf	1
  2789     0065  0A81               	incf	1,f
  2790     0066                     l1283:
  2791                           
  2792                           ;main.c: 135:                 digit->e = 1;
  2793     0066  0875               	movf	SetSegments@digit,w
  2794     0067  3E04               	addlw	4
  2795     0068  0086               	movwf	6
  2796     0069  0187               	clrf	7
  2797     006A  0181               	clrf	1
  2798     006B  0A81               	incf	1,f
  2799     006C                     l1285:
  2800                           
  2801                           ;main.c: 136:                 digit->f = 1;
  2802     006C  0875               	movf	SetSegments@digit,w
  2803     006D  3E05               	addlw	5
  2804     006E  0086               	movwf	6
  2805     006F  0187               	clrf	7
  2806     0070  0181               	clrf	1
  2807     0071  0A81               	incf	1,f
  2808     0072                     l1287:
  2809                           
  2810                           ;main.c: 137:                 digit->g = 0;
  2811     0072  0875               	movf	SetSegments@digit,w
  2812     0073  3E06               	addlw	6
  2813     0074  0086               	movwf	6
  2814     0075  0187               	clrf	7
  2815     0076  0181               	clrf	1
  2816                           
  2817                           ;main.c: 138:                 break;
  2818     0077  29FA               	goto	l52
  2819     0078                     l1289:
  2820                           
  2821                           ;main.c: 141:                 digit->a = 0;
  2822     0078  0875               	movf	SetSegments@digit,w
  2823     0079  0086               	movwf	6
  2824     007A  0187               	clrf	7
  2825     007B  0181               	clrf	1
  2826     007C                     l1291:
  2827                           
  2828                           ;main.c: 142:                 digit->b = 1;
  2829     007C  0A75               	incf	SetSegments@digit,w
  2830     007D  0086               	movwf	6
  2831     007E  0187               	clrf	7
  2832     007F  0181               	clrf	1
  2833     0080  0A81               	incf	1,f
  2834     0081                     l1293:
  2835                           
  2836                           ;main.c: 143:                 digit->c = 1;
  2837     0081  0875               	movf	SetSegments@digit,w
  2838     0082  3E02               	addlw	2
  2839     0083  0086               	movwf	6
  2840     0084  0187               	clrf	7
  2841     0085  0181               	clrf	1
  2842     0086  0A81               	incf	1,f
  2843     0087                     l1295:
  2844                           
  2845                           ;main.c: 144:                 digit->d = 0;
  2846     0087  0875               	movf	SetSegments@digit,w
  2847     0088  3E03               	addlw	3
  2848     0089  0086               	movwf	6
  2849     008A  0187               	clrf	7
  2850     008B  0181               	clrf	1
  2851     008C                     l1297:
  2852                           
  2853                           ;main.c: 145:                 digit->e = 0;
  2854     008C  0875               	movf	SetSegments@digit,w
  2855     008D  3E04               	addlw	4
  2856     008E  0086               	movwf	6
  2857     008F  0187               	clrf	7
  2858     0090  0181               	clrf	1
  2859     0091                     l1299:
  2860                           
  2861                           ;main.c: 146:                 digit->f = 0;
  2862     0091  0875               	movf	SetSegments@digit,w
  2863     0092  3E05               	addlw	5
  2864     0093  0086               	movwf	6
  2865     0094  0187               	clrf	7
  2866     0095  0181               	clrf	1
  2867     0096                     l1301:
  2868                           
  2869                           ;main.c: 147:                 digit->g = 0;
  2870     0096  0875               	movf	SetSegments@digit,w
  2871     0097  3E06               	addlw	6
  2872     0098  0086               	movwf	6
  2873     0099  0187               	clrf	7
  2874     009A  0181               	clrf	1
  2875                           
  2876                           ;main.c: 148:                 break;
  2877     009B  29FA               	goto	l52
  2878     009C                     l1303:
  2879                           
  2880                           ;main.c: 151:                 digit->a = 1;
  2881     009C  0875               	movf	SetSegments@digit,w
  2882     009D  0086               	movwf	6
  2883     009E  0187               	clrf	7
  2884     009F  0181               	clrf	1
  2885     00A0  0A81               	incf	1,f
  2886                           
  2887                           ;main.c: 152:                 digit->b = 1;
  2888     00A1  0A75               	incf	SetSegments@digit,w
  2889     00A2  0086               	movwf	6
  2890     00A3  0187               	clrf	7
  2891     00A4  0181               	clrf	1
  2892     00A5  0A81               	incf	1,f
  2893     00A6                     l1305:
  2894                           
  2895                           ;main.c: 153:                 digit->c = 0;
  2896     00A6  0875               	movf	SetSegments@digit,w
  2897     00A7  3E02               	addlw	2
  2898     00A8  0086               	movwf	6
  2899     00A9  0187               	clrf	7
  2900     00AA  0181               	clrf	1
  2901     00AB                     l1307:
  2902                           
  2903                           ;main.c: 154:                 digit->d = 1;
  2904     00AB  0875               	movf	SetSegments@digit,w
  2905     00AC  3E03               	addlw	3
  2906     00AD  0086               	movwf	6
  2907     00AE  0187               	clrf	7
  2908     00AF  0181               	clrf	1
  2909     00B0  0A81               	incf	1,f
  2910     00B1                     l1309:
  2911                           
  2912                           ;main.c: 155:                 digit->e = 1;
  2913     00B1  0875               	movf	SetSegments@digit,w
  2914     00B2  3E04               	addlw	4
  2915     00B3  0086               	movwf	6
  2916     00B4  0187               	clrf	7
  2917     00B5  0181               	clrf	1
  2918     00B6  0A81               	incf	1,f
  2919     00B7                     l1311:
  2920                           
  2921                           ;main.c: 156:                 digit->f = 0;
  2922     00B7  0875               	movf	SetSegments@digit,w
  2923     00B8  3E05               	addlw	5
  2924     00B9  0086               	movwf	6
  2925     00BA  0187               	clrf	7
  2926     00BB  0181               	clrf	1
  2927     00BC                     l1313:
  2928                           
  2929                           ;main.c: 157:                 digit->g = 1;
  2930     00BC  0875               	movf	SetSegments@digit,w
  2931     00BD  3E06               	addlw	6
  2932     00BE  0086               	movwf	6
  2933     00BF  0187               	clrf	7
  2934     00C0  0181               	clrf	1
  2935     00C1  0A81               	incf	1,f
  2936                           
  2937                           ;main.c: 158:                 break;
  2938     00C2  29FA               	goto	l52
  2939     00C3                     l1315:
  2940                           
  2941                           ;main.c: 161:                 digit->a = 1;
  2942     00C3  0875               	movf	SetSegments@digit,w
  2943     00C4  0086               	movwf	6
  2944     00C5  0187               	clrf	7
  2945     00C6  0181               	clrf	1
  2946     00C7  0A81               	incf	1,f
  2947                           
  2948                           ;main.c: 162:                 digit->b = 1;
  2949     00C8  0A75               	incf	SetSegments@digit,w
  2950     00C9  0086               	movwf	6
  2951     00CA  0187               	clrf	7
  2952     00CB  0181               	clrf	1
  2953     00CC  0A81               	incf	1,f
  2954     00CD                     l1317:
  2955                           
  2956                           ;main.c: 163:                 digit->c = 1;
  2957     00CD  0875               	movf	SetSegments@digit,w
  2958     00CE  3E02               	addlw	2
  2959     00CF  0086               	movwf	6
  2960     00D0  0187               	clrf	7
  2961     00D1  0181               	clrf	1
  2962     00D2  0A81               	incf	1,f
  2963     00D3                     l1319:
  2964                           
  2965                           ;main.c: 164:                 digit->d = 1;
  2966     00D3  0875               	movf	SetSegments@digit,w
  2967     00D4  3E03               	addlw	3
  2968     00D5  0086               	movwf	6
  2969     00D6  0187               	clrf	7
  2970     00D7  0181               	clrf	1
  2971     00D8  0A81               	incf	1,f
  2972     00D9                     l1321:
  2973                           
  2974                           ;main.c: 165:                 digit->e = 0;
  2975     00D9  0875               	movf	SetSegments@digit,w
  2976     00DA  3E04               	addlw	4
  2977     00DB  0086               	movwf	6
  2978     00DC  0187               	clrf	7
  2979     00DD  0181               	clrf	1
  2980     00DE                     l1323:
  2981                           
  2982                           ;main.c: 166:                 digit->f = 0;
  2983     00DE  0875               	movf	SetSegments@digit,w
  2984     00DF  3E05               	addlw	5
  2985     00E0  0086               	movwf	6
  2986     00E1  0187               	clrf	7
  2987     00E2  0181               	clrf	1
  2988     00E3                     l1325:
  2989                           
  2990                           ;main.c: 167:                 digit->g = 1;
  2991     00E3  0875               	movf	SetSegments@digit,w
  2992     00E4  3E06               	addlw	6
  2993     00E5  0086               	movwf	6
  2994     00E6  0187               	clrf	7
  2995     00E7  0181               	clrf	1
  2996     00E8  0A81               	incf	1,f
  2997                           
  2998                           ;main.c: 168:                 break;
  2999     00E9  29FA               	goto	l52
  3000     00EA                     l1327:
  3001                           
  3002                           ;main.c: 171:                 digit->a = 0;
  3003     00EA  0875               	movf	SetSegments@digit,w
  3004     00EB  0086               	movwf	6
  3005     00EC  0187               	clrf	7
  3006     00ED  0181               	clrf	1
  3007     00EE                     l1329:
  3008                           
  3009                           ;main.c: 172:                 digit->b = 1;
  3010     00EE  0A75               	incf	SetSegments@digit,w
  3011     00EF  0086               	movwf	6
  3012     00F0  0187               	clrf	7
  3013     00F1  0181               	clrf	1
  3014     00F2  0A81               	incf	1,f
  3015     00F3                     l1331:
  3016                           
  3017                           ;main.c: 173:                 digit->c = 1;
  3018     00F3  0875               	movf	SetSegments@digit,w
  3019     00F4  3E02               	addlw	2
  3020     00F5  0086               	movwf	6
  3021     00F6  0187               	clrf	7
  3022     00F7  0181               	clrf	1
  3023     00F8  0A81               	incf	1,f
  3024     00F9                     l1333:
  3025                           
  3026                           ;main.c: 174:                 digit->d = 0;
  3027     00F9  0875               	movf	SetSegments@digit,w
  3028     00FA  3E03               	addlw	3
  3029     00FB  0086               	movwf	6
  3030     00FC  0187               	clrf	7
  3031     00FD  0181               	clrf	1
  3032     00FE                     l1335:
  3033                           
  3034                           ;main.c: 175:                 digit->e = 0;
  3035     00FE  0875               	movf	SetSegments@digit,w
  3036     00FF  3E04               	addlw	4
  3037     0100  0086               	movwf	6
  3038     0101  0187               	clrf	7
  3039     0102  0181               	clrf	1
  3040     0103                     l1337:
  3041                           
  3042                           ;main.c: 176:                 digit->f = 1;
  3043     0103  0875               	movf	SetSegments@digit,w
  3044     0104  3E05               	addlw	5
  3045     0105  0086               	movwf	6
  3046     0106  0187               	clrf	7
  3047     0107  0181               	clrf	1
  3048     0108  0A81               	incf	1,f
  3049     0109                     l1339:
  3050                           
  3051                           ;main.c: 177:                 digit->g = 1;
  3052     0109  0875               	movf	SetSegments@digit,w
  3053     010A  3E06               	addlw	6
  3054     010B  0086               	movwf	6
  3055     010C  0187               	clrf	7
  3056     010D  0181               	clrf	1
  3057     010E  0A81               	incf	1,f
  3058                           
  3059                           ;main.c: 178:                 break;
  3060     010F  29FA               	goto	l52
  3061     0110                     l1341:
  3062                           
  3063                           ;main.c: 181:                 digit->a = 1;
  3064     0110  0875               	movf	SetSegments@digit,w
  3065     0111  0086               	movwf	6
  3066     0112  0187               	clrf	7
  3067     0113  0181               	clrf	1
  3068     0114  0A81               	incf	1,f
  3069     0115                     l1343:
  3070                           
  3071                           ;main.c: 182:                 digit->b = 0;
  3072     0115  0A75               	incf	SetSegments@digit,w
  3073     0116  0086               	movwf	6
  3074     0117  0187               	clrf	7
  3075     0118  0181               	clrf	1
  3076     0119                     l1345:
  3077                           
  3078                           ;main.c: 183:                 digit->c = 1;
  3079     0119  0875               	movf	SetSegments@digit,w
  3080     011A  3E02               	addlw	2
  3081     011B  0086               	movwf	6
  3082     011C  0187               	clrf	7
  3083     011D  0181               	clrf	1
  3084     011E  0A81               	incf	1,f
  3085     011F                     l1347:
  3086                           
  3087                           ;main.c: 184:                 digit->d = 1;
  3088     011F  0875               	movf	SetSegments@digit,w
  3089     0120  3E03               	addlw	3
  3090     0121  0086               	movwf	6
  3091     0122  0187               	clrf	7
  3092     0123  0181               	clrf	1
  3093     0124  0A81               	incf	1,f
  3094     0125                     l1349:
  3095                           
  3096                           ;main.c: 185:                 digit->e = 0;
  3097     0125  0875               	movf	SetSegments@digit,w
  3098     0126  3E04               	addlw	4
  3099     0127  0086               	movwf	6
  3100     0128  0187               	clrf	7
  3101     0129  0181               	clrf	1
  3102     012A                     l1351:
  3103                           
  3104                           ;main.c: 186:                 digit->f = 1;
  3105     012A  0875               	movf	SetSegments@digit,w
  3106     012B  3E05               	addlw	5
  3107     012C  0086               	movwf	6
  3108     012D  0187               	clrf	7
  3109     012E  0181               	clrf	1
  3110     012F  0A81               	incf	1,f
  3111     0130                     l1353:
  3112                           
  3113                           ;main.c: 187:                 digit->g = 1;
  3114     0130  0875               	movf	SetSegments@digit,w
  3115     0131  3E06               	addlw	6
  3116     0132  0086               	movwf	6
  3117     0133  0187               	clrf	7
  3118     0134  0181               	clrf	1
  3119     0135  0A81               	incf	1,f
  3120                           
  3121                           ;main.c: 188:                 break;
  3122     0136  29FA               	goto	l52
  3123     0137                     l1355:
  3124                           
  3125                           ;main.c: 191:                 digit->a = 1;
  3126     0137  0875               	movf	SetSegments@digit,w
  3127     0138  0086               	movwf	6
  3128     0139  0187               	clrf	7
  3129     013A  0181               	clrf	1
  3130     013B  0A81               	incf	1,f
  3131     013C                     l1357:
  3132                           
  3133                           ;main.c: 192:                 digit->b = 0;
  3134     013C  0A75               	incf	SetSegments@digit,w
  3135     013D  0086               	movwf	6
  3136     013E  0187               	clrf	7
  3137     013F  0181               	clrf	1
  3138     0140                     l1359:
  3139                           
  3140                           ;main.c: 193:                 digit->c = 1;
  3141     0140  0875               	movf	SetSegments@digit,w
  3142     0141  3E02               	addlw	2
  3143     0142  0086               	movwf	6
  3144     0143  0187               	clrf	7
  3145     0144  0181               	clrf	1
  3146     0145  0A81               	incf	1,f
  3147     0146                     l1361:
  3148                           
  3149                           ;main.c: 194:                 digit->d = 1;
  3150     0146  0875               	movf	SetSegments@digit,w
  3151     0147  3E03               	addlw	3
  3152     0148  0086               	movwf	6
  3153     0149  0187               	clrf	7
  3154     014A  0181               	clrf	1
  3155     014B  0A81               	incf	1,f
  3156     014C                     l1363:
  3157                           
  3158                           ;main.c: 195:                 digit->e = 1;
  3159     014C  0875               	movf	SetSegments@digit,w
  3160     014D  3E04               	addlw	4
  3161     014E  0086               	movwf	6
  3162     014F  0187               	clrf	7
  3163     0150  0181               	clrf	1
  3164     0151  0A81               	incf	1,f
  3165     0152                     l1365:
  3166                           
  3167                           ;main.c: 196:                 digit->f = 1;
  3168     0152  0875               	movf	SetSegments@digit,w
  3169     0153  3E05               	addlw	5
  3170     0154  0086               	movwf	6
  3171     0155  0187               	clrf	7
  3172     0156  0181               	clrf	1
  3173     0157  0A81               	incf	1,f
  3174     0158                     l1367:
  3175                           
  3176                           ;main.c: 197:                 digit->g = 1;
  3177     0158  0875               	movf	SetSegments@digit,w
  3178     0159  3E06               	addlw	6
  3179     015A  0086               	movwf	6
  3180     015B  0187               	clrf	7
  3181     015C  0181               	clrf	1
  3182     015D  0A81               	incf	1,f
  3183                           
  3184                           ;main.c: 198:                 break;
  3185     015E  29FA               	goto	l52
  3186     015F                     l1369:
  3187                           
  3188                           ;main.c: 201:                 digit->a = 1;
  3189     015F  0875               	movf	SetSegments@digit,w
  3190     0160  0086               	movwf	6
  3191     0161  0187               	clrf	7
  3192     0162  0181               	clrf	1
  3193     0163  0A81               	incf	1,f
  3194                           
  3195                           ;main.c: 202:                 digit->b = 1;
  3196     0164  0A75               	incf	SetSegments@digit,w
  3197     0165  0086               	movwf	6
  3198     0166  0187               	clrf	7
  3199     0167  0181               	clrf	1
  3200     0168  0A81               	incf	1,f
  3201     0169                     l1371:
  3202                           
  3203                           ;main.c: 203:                 digit->c = 1;
  3204     0169  0875               	movf	SetSegments@digit,w
  3205     016A  3E02               	addlw	2
  3206     016B  0086               	movwf	6
  3207     016C  0187               	clrf	7
  3208     016D  0181               	clrf	1
  3209     016E  0A81               	incf	1,f
  3210     016F                     l1373:
  3211                           
  3212                           ;main.c: 204:                 digit->d = 0;
  3213     016F  0875               	movf	SetSegments@digit,w
  3214     0170  3E03               	addlw	3
  3215     0171  0086               	movwf	6
  3216     0172  0187               	clrf	7
  3217     0173  0181               	clrf	1
  3218     0174                     l1375:
  3219                           
  3220                           ;main.c: 205:                 digit->e = 0;
  3221     0174  0875               	movf	SetSegments@digit,w
  3222     0175  3E04               	addlw	4
  3223     0176  0086               	movwf	6
  3224     0177  0187               	clrf	7
  3225     0178  0181               	clrf	1
  3226     0179                     l1377:
  3227                           
  3228                           ;main.c: 206:                 digit->f = 0;
  3229     0179  0875               	movf	SetSegments@digit,w
  3230     017A  3E05               	addlw	5
  3231     017B  0086               	movwf	6
  3232     017C  0187               	clrf	7
  3233     017D  0181               	clrf	1
  3234     017E                     l1379:
  3235                           
  3236                           ;main.c: 207:                 digit->g = 0;
  3237     017E  0875               	movf	SetSegments@digit,w
  3238     017F  3E06               	addlw	6
  3239     0180  0086               	movwf	6
  3240     0181  0187               	clrf	7
  3241     0182  0181               	clrf	1
  3242                           
  3243                           ;main.c: 208:                 break;
  3244     0183  29FA               	goto	l52
  3245     0184                     l1381:
  3246                           
  3247                           ;main.c: 211:                 digit->a = 1;
  3248     0184  0875               	movf	SetSegments@digit,w
  3249     0185  0086               	movwf	6
  3250     0186  0187               	clrf	7
  3251     0187  0181               	clrf	1
  3252     0188  0A81               	incf	1,f
  3253                           
  3254                           ;main.c: 212:                 digit->b = 1;
  3255     0189  0A75               	incf	SetSegments@digit,w
  3256     018A  0086               	movwf	6
  3257     018B  0187               	clrf	7
  3258     018C  0181               	clrf	1
  3259     018D  0A81               	incf	1,f
  3260     018E                     l1383:
  3261                           
  3262                           ;main.c: 213:                 digit->c = 1;
  3263     018E  0875               	movf	SetSegments@digit,w
  3264     018F  3E02               	addlw	2
  3265     0190  0086               	movwf	6
  3266     0191  0187               	clrf	7
  3267     0192  0181               	clrf	1
  3268     0193  0A81               	incf	1,f
  3269     0194                     l1385:
  3270                           
  3271                           ;main.c: 214:                 digit->d = 1;
  3272     0194  0875               	movf	SetSegments@digit,w
  3273     0195  3E03               	addlw	3
  3274     0196  0086               	movwf	6
  3275     0197  0187               	clrf	7
  3276     0198  0181               	clrf	1
  3277     0199  0A81               	incf	1,f
  3278     019A                     l1387:
  3279                           
  3280                           ;main.c: 215:                 digit->e = 1;
  3281     019A  0875               	movf	SetSegments@digit,w
  3282     019B  3E04               	addlw	4
  3283     019C  0086               	movwf	6
  3284     019D  0187               	clrf	7
  3285     019E  0181               	clrf	1
  3286     019F  0A81               	incf	1,f
  3287     01A0                     l1389:
  3288                           
  3289                           ;main.c: 216:                 digit->f = 1;
  3290     01A0  0875               	movf	SetSegments@digit,w
  3291     01A1  3E05               	addlw	5
  3292     01A2  0086               	movwf	6
  3293     01A3  0187               	clrf	7
  3294     01A4  0181               	clrf	1
  3295     01A5  0A81               	incf	1,f
  3296     01A6                     l1391:
  3297                           
  3298                           ;main.c: 217:                 digit->g = 1;
  3299     01A6  0875               	movf	SetSegments@digit,w
  3300     01A7  3E06               	addlw	6
  3301     01A8  0086               	movwf	6
  3302     01A9  0187               	clrf	7
  3303     01AA  0181               	clrf	1
  3304     01AB  0A81               	incf	1,f
  3305                           
  3306                           ;main.c: 218:                 break;
  3307     01AC  29FA               	goto	l52
  3308     01AD                     l1393:
  3309                           
  3310                           ;main.c: 221:                 digit->a = 1;
  3311     01AD  0875               	movf	SetSegments@digit,w
  3312     01AE  0086               	movwf	6
  3313     01AF  0187               	clrf	7
  3314     01B0  0181               	clrf	1
  3315     01B1  0A81               	incf	1,f
  3316                           
  3317                           ;main.c: 222:                 digit->b = 1;
  3318     01B2  0A75               	incf	SetSegments@digit,w
  3319     01B3  0086               	movwf	6
  3320     01B4  0187               	clrf	7
  3321     01B5  0181               	clrf	1
  3322     01B6  0A81               	incf	1,f
  3323     01B7                     l1395:
  3324                           
  3325                           ;main.c: 223:                 digit->c = 1;
  3326     01B7  0875               	movf	SetSegments@digit,w
  3327     01B8  3E02               	addlw	2
  3328     01B9  0086               	movwf	6
  3329     01BA  0187               	clrf	7
  3330     01BB  0181               	clrf	1
  3331     01BC  0A81               	incf	1,f
  3332     01BD                     l1397:
  3333                           
  3334                           ;main.c: 224:                 digit->d = 1;
  3335     01BD  0875               	movf	SetSegments@digit,w
  3336     01BE  3E03               	addlw	3
  3337     01BF  0086               	movwf	6
  3338     01C0  0187               	clrf	7
  3339     01C1  0181               	clrf	1
  3340     01C2  0A81               	incf	1,f
  3341     01C3                     l1399:
  3342                           
  3343                           ;main.c: 225:                 digit->e = 0;
  3344     01C3  0875               	movf	SetSegments@digit,w
  3345     01C4  3E04               	addlw	4
  3346     01C5  0086               	movwf	6
  3347     01C6  0187               	clrf	7
  3348     01C7  0181               	clrf	1
  3349     01C8                     l1401:
  3350                           
  3351                           ;main.c: 226:                 digit->f = 1;
  3352     01C8  0875               	movf	SetSegments@digit,w
  3353     01C9  3E05               	addlw	5
  3354     01CA  0086               	movwf	6
  3355     01CB  0187               	clrf	7
  3356     01CC  0181               	clrf	1
  3357     01CD  0A81               	incf	1,f
  3358     01CE                     l1403:
  3359                           
  3360                           ;main.c: 227:                 digit->g = 1;
  3361     01CE  0875               	movf	SetSegments@digit,w
  3362     01CF  3E06               	addlw	6
  3363     01D0  0086               	movwf	6
  3364     01D1  0187               	clrf	7
  3365     01D2  0181               	clrf	1
  3366     01D3  0A81               	incf	1,f
  3367                           
  3368                           ;main.c: 228:                 break;
  3369     01D4  29FA               	goto	l52
  3370     01D5                     l1407:
  3371                           
  3372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3373                           ; Switch size 1, requested type "simple"
  3374                           ; Number of cases is 1, Range of values is 0 to 0
  3375                           ; switch strategies available:
  3376                           ; Name         Instructions Cycles
  3377                           ; simple_byte            4     3 (average)
  3378                           ; direct_byte            8     6 (fixed)
  3379                           ; jumptable            260     6 (fixed)
  3380                           ;	Chosen strategy is simple_byte
  3381     01D5  0873               	movf	SetSegments@a+1,w
  3382     01D6  3A00               	xorlw	0	; case 0
  3383     01D7  1903               	skipnz
  3384     01D8  29DA               	goto	l1763
  3385     01D9  29FA               	goto	l52
  3386     01DA                     l1763:
  3387                           
  3388                           ; Switch size 1, requested type "simple"
  3389                           ; Number of cases is 10, Range of values is 0 to 9
  3390                           ; switch strategies available:
  3391                           ; Name         Instructions Cycles
  3392                           ; direct_byte           26     6 (fixed)
  3393                           ; simple_byte           31    16 (average)
  3394                           ; jumptable            260     6 (fixed)
  3395                           ;	Chosen strategy is simple_byte
  3396     01DA  0872               	movf	SetSegments@a,w
  3397     01DB  3A00               	xorlw	0	; case 0
  3398     01DC  1903               	skipnz
  3399     01DD  2850               	goto	l1277
  3400     01DE  3A01               	xorlw	1	; case 1
  3401     01DF  1903               	skipnz
  3402     01E0  2878               	goto	l1289
  3403     01E1  3A03               	xorlw	3	; case 2
  3404     01E2  1903               	skipnz
  3405     01E3  289C               	goto	l1303
  3406     01E4  3A01               	xorlw	1	; case 3
  3407     01E5  1903               	skipnz
  3408     01E6  28C3               	goto	l1315
  3409     01E7  3A07               	xorlw	7	; case 4
  3410     01E8  1903               	skipnz
  3411     01E9  28EA               	goto	l1327
  3412     01EA  3A01               	xorlw	1	; case 5
  3413     01EB  1903               	skipnz
  3414     01EC  2910               	goto	l1341
  3415     01ED  3A03               	xorlw	3	; case 6
  3416     01EE  1903               	skipnz
  3417     01EF  2937               	goto	l1355
  3418     01F0  3A01               	xorlw	1	; case 7
  3419     01F1  1903               	skipnz
  3420     01F2  295F               	goto	l1369
  3421     01F3  3A0F               	xorlw	15	; case 8
  3422     01F4  1903               	skipnz
  3423     01F5  2984               	goto	l1381
  3424     01F6  3A01               	xorlw	1	; case 9
  3425     01F7  1903               	skipnz
  3426     01F8  29AD               	goto	l1393
  3427     01F9  29FA               	goto	l52
  3428     01FA                     l52:
  3429     01FA  0008               	return
  3430     01FB                     __end_of_SetSegments:
  3431                           
  3432                           	psect	text12
  3433     0426                     __ptext12:	
  3434 ;; *************** function _ClearDigit *****************
  3435 ;; Defined at:
  3436 ;;		line 78 in file "main.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  digit           1    wreg     PTR struct digit
  3439 ;;		 -> one(7), ten(7), hundred(7), 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  digit           1    2[COMMON] PTR struct digit
  3442 ;;		 -> one(7), ten(7), hundred(7), 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3452 ;;      Params:         0       0       0       0       0       0       0       0
  3453 ;;      Locals:         1       0       0       0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0
  3455 ;;      Totals:         1       0       0       0       0       0       0       0
  3456 ;;Total ram usage:        1 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 3
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466     0426                     _ClearDigit:	
  3467                           ;psect for function _ClearDigit
  3468                           
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _ClearDigit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3472                           ;ClearDigit@digit stored from wreg
  3473     0426  00F2               	movwf	ClearDigit@digit
  3474     0427                     l1559:
  3475                           
  3476                           ;main.c: 79:     digit->a = 0;
  3477     0427  0872               	movf	ClearDigit@digit,w
  3478     0428  0086               	movwf	6
  3479     0429  0187               	clrf	7
  3480     042A  0181               	clrf	1
  3481                           
  3482                           ;main.c: 80:     digit->b = 0;
  3483     042B  0A72               	incf	ClearDigit@digit,w
  3484     042C  0086               	movwf	6
  3485     042D  0187               	clrf	7
  3486     042E  0181               	clrf	1
  3487     042F                     l1561:
  3488                           
  3489                           ;main.c: 81:     digit->c = 0;
  3490     042F  0872               	movf	ClearDigit@digit,w
  3491     0430  3E02               	addlw	2
  3492     0431  0086               	movwf	6
  3493     0432  0187               	clrf	7
  3494     0433  0181               	clrf	1
  3495     0434                     l1563:
  3496                           
  3497                           ;main.c: 82:     digit->d = 0;
  3498     0434  0872               	movf	ClearDigit@digit,w
  3499     0435  3E03               	addlw	3
  3500     0436  0086               	movwf	6
  3501     0437  0187               	clrf	7
  3502     0438  0181               	clrf	1
  3503     0439                     l1565:
  3504                           
  3505                           ;main.c: 83:     digit->e = 0;
  3506     0439  0872               	movf	ClearDigit@digit,w
  3507     043A  3E04               	addlw	4
  3508     043B  0086               	movwf	6
  3509     043C  0187               	clrf	7
  3510     043D  0181               	clrf	1
  3511     043E                     l1567:
  3512                           
  3513                           ;main.c: 84:     digit->f = 0;
  3514     043E  0872               	movf	ClearDigit@digit,w
  3515     043F  3E05               	addlw	5
  3516     0440  0086               	movwf	6
  3517     0441  0187               	clrf	7
  3518     0442  0181               	clrf	1
  3519     0443                     l1569:
  3520                           
  3521                           ;main.c: 85:     digit->g = 0;
  3522     0443  0872               	movf	ClearDigit@digit,w
  3523     0444  3E06               	addlw	6
  3524     0445  0086               	movwf	6
  3525     0446  0187               	clrf	7
  3526     0447  0181               	clrf	1
  3527     0448                     l32:
  3528     0448  0008               	return
  3529     0449                     __end_of_ClearDigit:
  3530                           
  3531                           	psect	intentry
  3532     0004                     __pintentry:	
  3533 ;; *************** function _INTERRUPT_InterruptManager *****************
  3534 ;; Defined at:
  3535 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;		None
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0, pclath, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3549 ;;      Params:         0       0       0       0       0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0
  3552 ;;      Totals:         0       0       0       0       0       0       0       0
  3553 ;;Total ram usage:        0 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 2
  3556 ;; This function calls:
  3557 ;;		_TMR1_OverflowISR
  3558 ;; This function is called by:
  3559 ;;		Interrupt level 1
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563     0004                     _INTERRUPT_InterruptManager:
  3564                           
  3565                           ;incstack = 0
  3566     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3567                           
  3568                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3569     0005  3180               	pagesel	$
  3570     0006                     i1l1623:
  3571                           
  3572                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
  3573     0006  1F0B               	btfss	11,6	;volatile
  3574     0007  2809               	goto	u69_21
  3575     0008  280A               	goto	u69_20
  3576     0009                     u69_21:
  3577     0009  2817               	goto	i1l149
  3578     000A                     u69_20:
  3579     000A                     i1l1625:
  3580                           
  3581                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3582     000A  0021               	movlb	1	; select bank1
  3583     000B  1C11               	btfss	17,0	;volatile
  3584     000C  280E               	goto	u70_21
  3585     000D  280F               	goto	u70_20
  3586     000E                     u70_21:
  3587     000E  2817               	goto	i1l149
  3588     000F                     u70_20:
  3589     000F                     i1l1627:
  3590     000F  0020               	movlb	0	; select bank0
  3591     0010  1C11               	btfss	17,0	;volatile
  3592     0011  2813               	goto	u71_21
  3593     0012  2814               	goto	u71_20
  3594     0013                     u71_21:
  3595     0013  2817               	goto	i1l149
  3596     0014                     u71_20:
  3597     0014                     i1l1629:
  3598                           
  3599                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             TMR1_OverflowISR();
  3600     0014  3184  247F  3180   	fcall	_TMR1_OverflowISR
  3601     0017                     i1l149:	
  3602                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
  3603                           
  3604     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3605     0018  0009               	retfie
  3606     0019                     __end_of_INTERRUPT_InterruptManager:
  3607                           
  3608                           	psect	text14
  3609     047F                     __ptext14:	
  3610 ;; *************** function _TMR1_OverflowISR *****************
  3611 ;; Defined at:
  3612 ;;		line 150 in file "mcc_generated_files/timer/src/tmr1.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, pclath, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3626 ;;      Params:         0       0       0       0       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0
  3629 ;;      Totals:         0       0       0       0       0       0       0       0
  3630 ;;Total ram usage:        0 bytes
  3631 ;; Hardware stack levels used: 1
  3632 ;; Hardware stack levels required when called: 1
  3633 ;; This function calls:
  3634 ;;		Absolute function
  3635 ;;		_TMR1_DefaultOverflowCallback
  3636 ;;		_TMR1_Write
  3637 ;;		_Tmr1CallBack
  3638 ;; This function is called by:
  3639 ;;		_INTERRUPT_InterruptManager
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643     047F                     _TMR1_OverflowISR:	
  3644                           ;psect for function _TMR1_OverflowISR
  3645                           
  3646     047F                     i1l1583:	
  3647                           ;incstack = 0
  3648                           ; Regs used in _TMR1_OverflowISR: [wreg+status,2+status,0+pclath+cstack]
  3649                           
  3650                           
  3651                           ;mcc_generated_files/timer/src/tmr1.c: 154:     PIR1bits.TMR1IF = 0;
  3652     047F  0020               	movlb	0	; select bank0
  3653     0480  1011               	bcf	17,0	;volatile
  3654     0481                     i1l1585:
  3655                           
  3656                           ;mcc_generated_files/timer/src/tmr1.c: 155:     TMR1_Write(timer1ReloadVal);
  3657     0481  0850               	movf	_timer1ReloadVal+1,w	;volatile
  3658     0482  00F1               	movwf	TMR1_Write@timerVal+1
  3659     0483  084F               	movf	_timer1ReloadVal,w	;volatile
  3660     0484  00F0               	movwf	TMR1_Write@timerVal
  3661     0485  3184  2495  3184   	fcall	_TMR1_Write
  3662     0488                     i1l1587:
  3663                           
  3664                           ;mcc_generated_files/timer/src/tmr1.c: 157:     if(TMR1_OverflowCallback)
  3665     0488  0020               	movlb	0	; select bank0
  3666     0489  084D               	movf	_TMR1_OverflowCallback,w
  3667     048A  044E               	iorwf	_TMR1_OverflowCallback+1,w
  3668     048B  1903               	btfsc	3,2
  3669     048C  2C8E               	goto	u67_21
  3670     048D  2C8F               	goto	u67_20
  3671     048E                     u67_21:
  3672     048E  2C94               	goto	i1l231
  3673     048F                     u67_20:
  3674     048F                     i1l1589:
  3675                           
  3676                           ;mcc_generated_files/timer/src/tmr1.c: 158:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          159:         TMR1_OverflowCallback();
  3677     048F  084E               	movf	_TMR1_OverflowCallback+1,w
  3678     0490  008A               	movwf	10
  3679     0491  084D               	movf	_TMR1_OverflowCallback,w
  3680     0492  000A               	callw
  3681     0493  3184               	pagesel	$
  3682     0494                     i1l231:
  3683     0494  0008               	return
  3684     0495                     __end_of_TMR1_OverflowISR:
  3685                           
  3686                           	psect	text15
  3687     04E2                     __ptext15:	
  3688 ;; *************** function _TMR1_DefaultOverflowCallback *****************
  3689 ;; Defined at:
  3690 ;;		line 168 in file "mcc_generated_files/timer/src/tmr1.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		None
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3704 ;;      Params:         0       0       0       0       0       0       0       0
  3705 ;;      Locals:         0       0       0       0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0
  3707 ;;      Totals:         0       0       0       0       0       0       0       0
  3708 ;;Total ram usage:        0 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_TMR1_Initialize
  3714 ;;		_TMR1_OverflowISR
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718     04E2                     _TMR1_DefaultOverflowCallback:	
  3719                           ;psect for function _TMR1_DefaultOverflowCallback
  3720                           
  3721     04E2                     i1l237:	
  3722                           ;incstack = 0
  3723                           ; Regs used in _TMR1_DefaultOverflowCallback: []
  3724                           
  3725     04E2  0008               	return
  3726     04E3                     __end_of_TMR1_DefaultOverflowCallback:
  3727                           
  3728                           	psect	text16
  3729     01FB                     __ptext16:	
  3730 ;; *************** function _Tmr1CallBack *****************
  3731 ;; Defined at:
  3732 ;;		line 88 in file "main.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;		None
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;		None
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3746 ;;      Params:         0       0       0       0       0       0       0       0
  3747 ;;      Locals:         1       0       0       0       0       0       0       0
  3748 ;;      Temps:          1       0       0       0       0       0       0       0
  3749 ;;      Totals:         2       0       0       0       0       0       0       0
  3750 ;;Total ram usage:        2 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_main
  3756 ;;		_TMR1_OverflowISR
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760     01FB                     _Tmr1CallBack:	
  3761                           ;psect for function _Tmr1CallBack
  3762                           
  3763     01FB                     i1l1245:	
  3764                           ;incstack = 0
  3765                           ; Regs used in _Tmr1CallBack: [wreg+status,2+status,0]
  3766                           
  3767                           
  3768                           ;main.c: 89:     toggle = 1 - toggle;
  3769     01FB  087B               	movf	_toggle,w
  3770     01FC  3C01               	sublw	1
  3771     01FD  00FB               	movwf	_toggle
  3772     01FE                     i1l1247:
  3773                           
  3774                           ;main.c: 91:     PORTAbits.RA5 = toggle;
  3775     01FE  0C7B               	rrf	_toggle,w
  3776     01FF  0020               	movlb	0	; select bank0
  3777     0200  1C03               	skipc
  3778     0201  128C               	bcf	12,5	;volatile
  3779     0202  1803               	skipnc
  3780     0203  168C               	bsf	12,5	;volatile
  3781                           
  3782                           ;main.c: 93:     PORTAbits.RA4 = toggle ^ !hundred.a &
  3783     0204  01F1               	clrf	_Tmr1CallBack$1081
  3784     0205                     i1l1249:
  3785     0205  0822               	movf	_hundred,w
  3786     0206  1D03               	btfss	3,2
  3787     0207  2A09               	goto	u37_21
  3788     0208  2A0A               	goto	u37_20
  3789     0209                     u37_21:
  3790     0209  2A20               	goto	i1l1261
  3791     020A                     u37_20:
  3792     020A                     i1l1251:
  3793     020A  0825               	movf	_hundred+3,w
  3794     020B  1D03               	btfss	3,2
  3795     020C  2A0E               	goto	u38_21
  3796     020D  2A0F               	goto	u38_20
  3797     020E                     u38_21:
  3798     020E  2A20               	goto	i1l1261
  3799     020F                     u38_20:
  3800     020F                     i1l1253:
  3801     020F  0826               	movf	_hundred+4,w
  3802     0210  1D03               	btfss	3,2
  3803     0211  2A13               	goto	u39_21
  3804     0212  2A14               	goto	u39_20
  3805     0213                     u39_21:
  3806     0213  2A20               	goto	i1l1261
  3807     0214                     u39_20:
  3808     0214                     i1l1255:
  3809     0214  0827               	movf	_hundred+5,w
  3810     0215  1D03               	btfss	3,2
  3811     0216  2A18               	goto	u40_21
  3812     0217  2A19               	goto	u40_20
  3813     0218                     u40_21:
  3814     0218  2A20               	goto	i1l1261
  3815     0219                     u40_20:
  3816     0219                     i1l1257:
  3817     0219  0828               	movf	_hundred+6,w
  3818     021A  1D03               	btfss	3,2
  3819     021B  2A1D               	goto	u41_21
  3820     021C  2A1E               	goto	u41_20
  3821     021D                     u41_21:
  3822     021D  2A20               	goto	i1l1261
  3823     021E                     u41_20:
  3824     021E                     i1l1259:
  3825     021E  01F1               	clrf	_Tmr1CallBack$1081
  3826     021F  0AF1               	incf	_Tmr1CallBack$1081,f
  3827     0220                     i1l1261:
  3828     0220  0823               	movf	_hundred+1,w
  3829     0221  0524               	andwf	_hundred+2,w
  3830     0222  0571               	andwf	_Tmr1CallBack$1081,w
  3831     0223  067B               	xorwf	_toggle,w
  3832     0224  00F0               	movwf	??_Tmr1CallBack
  3833     0225  0EF0               	swapf	??_Tmr1CallBack,f
  3834     0226  080C               	movf	12,w	;volatile
  3835     0227  0670               	xorwf	??_Tmr1CallBack,w
  3836     0228  39EF               	andlw	-17
  3837     0229  0670               	xorwf	??_Tmr1CallBack,w
  3838     022A  008C               	movwf	12	;volatile
  3839                           
  3840                           ;main.c: 102:     PORTCbits.RC5 = toggle ^ ten.a;
  3841     022B  0829               	movf	_ten,w
  3842     022C  067B               	xorwf	_toggle,w
  3843     022D  00F0               	movwf	??_Tmr1CallBack
  3844     022E  0EF0               	swapf	??_Tmr1CallBack,f
  3845     022F  0DF0               	rlf	??_Tmr1CallBack,f
  3846     0230  080E               	movf	14,w	;volatile
  3847     0231  0670               	xorwf	??_Tmr1CallBack,w
  3848     0232  39DF               	andlw	-33
  3849     0233  0670               	xorwf	??_Tmr1CallBack,w
  3850     0234  008E               	movwf	14	;volatile
  3851                           
  3852                           ;main.c: 103:     PORTCbits.RC4 = toggle ^ ten.b;
  3853     0235  082A               	movf	_ten+1,w
  3854     0236  067B               	xorwf	_toggle,w
  3855     0237  00F0               	movwf	??_Tmr1CallBack
  3856     0238  0EF0               	swapf	??_Tmr1CallBack,f
  3857     0239  080E               	movf	14,w	;volatile
  3858     023A  0670               	xorwf	??_Tmr1CallBack,w
  3859     023B  39EF               	andlw	-17
  3860     023C  0670               	xorwf	??_Tmr1CallBack,w
  3861     023D  008E               	movwf	14	;volatile
  3862                           
  3863                           ;main.c: 104:     PORTCbits.RC3 = toggle ^ ten.c;
  3864     023E  082B               	movf	_ten+2,w
  3865     023F  067B               	xorwf	_toggle,w
  3866     0240  00F0               	movwf	??_Tmr1CallBack
  3867     0241  0DF0               	rlf	??_Tmr1CallBack,f
  3868     0242  0DF0               	rlf	??_Tmr1CallBack,f
  3869     0243  0DF0               	rlf	??_Tmr1CallBack,f
  3870     0244  080E               	movf	14,w	;volatile
  3871     0245  0670               	xorwf	??_Tmr1CallBack,w
  3872     0246  39F7               	andlw	-9
  3873     0247  0670               	xorwf	??_Tmr1CallBack,w
  3874     0248  008E               	movwf	14	;volatile
  3875                           
  3876                           ;main.c: 105:     PORTCbits.RC6 = toggle ^ ten.d;
  3877     0249  082C               	movf	_ten+3,w
  3878     024A  067B               	xorwf	_toggle,w
  3879     024B  00F0               	movwf	??_Tmr1CallBack
  3880     024C  0EF0               	swapf	??_Tmr1CallBack,f
  3881     024D  0DF0               	rlf	??_Tmr1CallBack,f
  3882     024E  0DF0               	rlf	??_Tmr1CallBack,f
  3883     024F  080E               	movf	14,w	;volatile
  3884     0250  0670               	xorwf	??_Tmr1CallBack,w
  3885     0251  39BF               	andlw	-65
  3886     0252  0670               	xorwf	??_Tmr1CallBack,w
  3887     0253  008E               	movwf	14	;volatile
  3888                           
  3889                           ;main.c: 106:     PORTCbits.RC7 = toggle ^ ten.e;
  3890     0254  082D               	movf	_ten+4,w
  3891     0255  067B               	xorwf	_toggle,w
  3892     0256  00F0               	movwf	??_Tmr1CallBack
  3893     0257  0CF0               	rrf	??_Tmr1CallBack,f
  3894     0258  0CF0               	rrf	??_Tmr1CallBack,f
  3895     0259  080E               	movf	14,w	;volatile
  3896     025A  0670               	xorwf	??_Tmr1CallBack,w
  3897     025B  397F               	andlw	-129
  3898     025C  0670               	xorwf	??_Tmr1CallBack,w
  3899     025D  008E               	movwf	14	;volatile
  3900                           
  3901                           ;main.c: 107:     PORTBbits.RB7 = toggle ^ ten.f;
  3902     025E  082E               	movf	_ten+5,w
  3903     025F  067B               	xorwf	_toggle,w
  3904     0260  00F0               	movwf	??_Tmr1CallBack
  3905     0261  0CF0               	rrf	??_Tmr1CallBack,f
  3906     0262  0CF0               	rrf	??_Tmr1CallBack,f
  3907     0263  080D               	movf	13,w	;volatile
  3908     0264  0670               	xorwf	??_Tmr1CallBack,w
  3909     0265  397F               	andlw	-129
  3910     0266  0670               	xorwf	??_Tmr1CallBack,w
  3911     0267  008D               	movwf	13	;volatile
  3912                           
  3913                           ;main.c: 108:     PORTBbits.RB6 = toggle ^ ten.g;
  3914     0268  082F               	movf	_ten+6,w
  3915     0269  067B               	xorwf	_toggle,w
  3916     026A  00F0               	movwf	??_Tmr1CallBack
  3917     026B  0EF0               	swapf	??_Tmr1CallBack,f
  3918     026C  0DF0               	rlf	??_Tmr1CallBack,f
  3919     026D  0DF0               	rlf	??_Tmr1CallBack,f
  3920     026E  080D               	movf	13,w	;volatile
  3921     026F  0670               	xorwf	??_Tmr1CallBack,w
  3922     0270  39BF               	andlw	-65
  3923     0271  0670               	xorwf	??_Tmr1CallBack,w
  3924     0272  008D               	movwf	13	;volatile
  3925                           
  3926                           ;main.c: 110:     PORTBbits.RB5 = toggle ^ one.a;
  3927     0273  0830               	movf	_one,w
  3928     0274  067B               	xorwf	_toggle,w
  3929     0275  00F0               	movwf	??_Tmr1CallBack
  3930     0276  0EF0               	swapf	??_Tmr1CallBack,f
  3931     0277  0DF0               	rlf	??_Tmr1CallBack,f
  3932     0278  080D               	movf	13,w	;volatile
  3933     0279  0670               	xorwf	??_Tmr1CallBack,w
  3934     027A  39DF               	andlw	-33
  3935     027B  0670               	xorwf	??_Tmr1CallBack,w
  3936     027C  008D               	movwf	13	;volatile
  3937                           
  3938                           ;main.c: 111:     PORTBbits.RB4 = toggle ^ one.b;
  3939     027D  0831               	movf	_one+1,w
  3940     027E  067B               	xorwf	_toggle,w
  3941     027F  00F0               	movwf	??_Tmr1CallBack
  3942     0280  0EF0               	swapf	??_Tmr1CallBack,f
  3943     0281  080D               	movf	13,w	;volatile
  3944     0282  0670               	xorwf	??_Tmr1CallBack,w
  3945     0283  39EF               	andlw	-17
  3946     0284  0670               	xorwf	??_Tmr1CallBack,w
  3947     0285  008D               	movwf	13	;volatile
  3948                           
  3949                           ;main.c: 112:     PORTCbits.RC2 = toggle ^ one.c;
  3950     0286  0832               	movf	_one+2,w
  3951     0287  067B               	xorwf	_toggle,w
  3952     0288  00F0               	movwf	??_Tmr1CallBack
  3953     0289  0DF0               	rlf	??_Tmr1CallBack,f
  3954     028A  0DF0               	rlf	??_Tmr1CallBack,f
  3955     028B  080E               	movf	14,w	;volatile
  3956     028C  0670               	xorwf	??_Tmr1CallBack,w
  3957     028D  39FB               	andlw	-5
  3958     028E  0670               	xorwf	??_Tmr1CallBack,w
  3959     028F  008E               	movwf	14	;volatile
  3960                           
  3961                           ;main.c: 113:     PORTCbits.RC1 = toggle ^ one.d;
  3962     0290  0833               	movf	_one+3,w
  3963     0291  067B               	xorwf	_toggle,w
  3964     0292  00F0               	movwf	??_Tmr1CallBack
  3965     0293  0DF0               	rlf	??_Tmr1CallBack,f
  3966     0294  080E               	movf	14,w	;volatile
  3967     0295  0670               	xorwf	??_Tmr1CallBack,w
  3968     0296  39FD               	andlw	-3
  3969     0297  0670               	xorwf	??_Tmr1CallBack,w
  3970     0298  008E               	movwf	14	;volatile
  3971                           
  3972                           ;main.c: 114:     PORTCbits.RC0 = toggle ^ one.e;
  3973     0299  087B               	movf	_toggle,w
  3974     029A  0634               	xorwf	_one+4,w
  3975     029B  00F0               	movwf	??_Tmr1CallBack
  3976     029C  080E               	movf	14,w	;volatile
  3977     029D  0670               	xorwf	??_Tmr1CallBack,w
  3978     029E  39FE               	andlw	-2
  3979     029F  0670               	xorwf	??_Tmr1CallBack,w
  3980     02A0  008E               	movwf	14	;volatile
  3981                           
  3982                           ;main.c: 115:     PORTAbits.RA2 = toggle ^ one.f;
  3983     02A1  0835               	movf	_one+5,w
  3984     02A2  067B               	xorwf	_toggle,w
  3985     02A3  00F0               	movwf	??_Tmr1CallBack
  3986     02A4  0DF0               	rlf	??_Tmr1CallBack,f
  3987     02A5  0DF0               	rlf	??_Tmr1CallBack,f
  3988     02A6  080C               	movf	12,w	;volatile
  3989     02A7  0670               	xorwf	??_Tmr1CallBack,w
  3990     02A8  39FB               	andlw	-5
  3991     02A9  0670               	xorwf	??_Tmr1CallBack,w
  3992     02AA  008C               	movwf	12	;volatile
  3993                           
  3994                           ;main.c: 116:     PORTAbits.RA1 = toggle ^ one.g;
  3995     02AB  0836               	movf	_one+6,w
  3996     02AC  067B               	xorwf	_toggle,w
  3997     02AD  00F0               	movwf	??_Tmr1CallBack
  3998     02AE  0DF0               	rlf	??_Tmr1CallBack,f
  3999     02AF  080C               	movf	12,w	;volatile
  4000     02B0  0670               	xorwf	??_Tmr1CallBack,w
  4001     02B1  39FD               	andlw	-3
  4002     02B2  0670               	xorwf	??_Tmr1CallBack,w
  4003     02B3  008C               	movwf	12	;volatile
  4004     02B4                     i1l35:
  4005     02B4  0008               	return
  4006     02B5                     __end_of_Tmr1CallBack:
  4007                           
  4008                           	psect	text17
  4009     0495                     __ptext17:	
  4010 ;; *************** function _TMR1_Write *****************
  4011 ;; Defined at:
  4012 ;;		line 108 in file "mcc_generated_files/timer/src/tmr1.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  timerVal        2    0[COMMON] unsigned int 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4026 ;;      Params:         2       0       0       0       0       0       0       0
  4027 ;;      Locals:         0       0       0       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0
  4029 ;;      Totals:         2       0       0       0       0       0       0       0
  4030 ;;Total ram usage:        2 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_TMR1_OverflowISR
  4036 ;;		_TMR1_Reload
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040     0495                     _TMR1_Write:	
  4041                           ;psect for function _TMR1_Write
  4042                           
  4043     0495                     i1l1463:	
  4044                           ;incstack = 0
  4045                           ; Regs used in _TMR1_Write: [wreg+status,2]
  4046                           
  4047                           
  4048                           ;mcc_generated_files/timer/src/tmr1.c: 108: static void TMR1_Write(size_t timerVal);mcc_
      +                          generated_files/timer/src/tmr1.c: 109: {;mcc_generated_files/timer/src/tmr1.c: 110:     
      +                          if (T1CONbits.nT1SYNC == 1)
  4049     0495  0020               	movlb	0	; select bank0
  4050     0496  1D18               	btfss	24,2	;volatile
  4051     0497  2C99               	goto	u43_21
  4052     0498  2C9A               	goto	u43_20
  4053     0499                     u43_21:
  4054     0499  2CA1               	goto	i1l1473
  4055     049A                     u43_20:
  4056     049A                     i1l1465:
  4057                           
  4058                           ;mcc_generated_files/timer/src/tmr1.c: 111:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          113:         T1CONbits.TMR1ON = 0;
  4059     049A  1018               	bcf	24,0	;volatile
  4060     049B                     i1l1467:
  4061                           
  4062                           ;mcc_generated_files/timer/src/tmr1.c: 116:         TMR1H = (uint8_t)(timerVal >> 8);
  4063     049B  0871               	movf	TMR1_Write@timerVal+1,w
  4064     049C  0097               	movwf	23	;volatile
  4065     049D                     i1l1469:
  4066                           
  4067                           ;mcc_generated_files/timer/src/tmr1.c: 117:         TMR1L = (uint8_t)timerVal;
  4068     049D  0870               	movf	TMR1_Write@timerVal,w
  4069     049E  0096               	movwf	22	;volatile
  4070     049F                     i1l1471:
  4071                           
  4072                           ;mcc_generated_files/timer/src/tmr1.c: 120:         T1CONbits.TMR1ON = 1;
  4073     049F  1418               	bsf	24,0	;volatile
  4074                           
  4075                           ;mcc_generated_files/timer/src/tmr1.c: 121:     }
  4076     04A0  2CA5               	goto	i1l215
  4077     04A1                     i1l1473:
  4078                           
  4079                           ;mcc_generated_files/timer/src/tmr1.c: 123:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          125:         TMR1H = (uint8_t)(timerVal >> 8);
  4080     04A1  0871               	movf	TMR1_Write@timerVal+1,w
  4081     04A2  0097               	movwf	23	;volatile
  4082     04A3                     i1l1475:
  4083                           
  4084                           ;mcc_generated_files/timer/src/tmr1.c: 126:         TMR1L = (uint8_t)timerVal;
  4085     04A3  0870               	movf	TMR1_Write@timerVal,w
  4086     04A4  0096               	movwf	22	;volatile
  4087     04A5                     i1l215:
  4088     04A5  0008               	return
  4089     04A6                     __end_of_TMR1_Write:
  4090     007E                     btemp	set	126	;btemp
  4091     007E                     int$flags	set	126
  4092     007E                     wtemp0	set	126
  4093                           
  4094                           	psect	idloc
  4095                           
  4096                           ;Config register IDLOC0 @ 0x8000
  4097                           ;	unspecified, using default values
  4098     8000                     	org	32768
  4099     8000  3FFF               	dw	16383
  4100                           
  4101                           ;Config register IDLOC1 @ 0x8001
  4102                           ;	unspecified, using default values
  4103     8001                     	org	32769
  4104     8001  3FFF               	dw	16383
  4105                           
  4106                           ;Config register IDLOC2 @ 0x8002
  4107                           ;	unspecified, using default values
  4108     8002                     	org	32770
  4109     8002  3FFF               	dw	16383
  4110                           
  4111                           ;Config register IDLOC3 @ 0x8003
  4112                           ;	unspecified, using default values
  4113     8003                     	org	32771
  4114     8003  3FFF               	dw	16383
  4115                           
  4116                           	psect	config
  4117                           
  4118                           ;Config register CONFIG1 @ 0x8007
  4119                           ;	Oscillator Selection Bits
  4120                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4121                           ;	Watchdog Timer Enable
  4122                           ;	WDTE = OFF, WDT disabled
  4123                           ;	Power-up Timer Enable
  4124                           ;	PWRTE = OFF, PWRT disabled
  4125                           ;	MCLR Pin Function Select
  4126                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4127                           ;	Flash Program Memory Code Protection
  4128                           ;	CP = OFF, Program memory code protection is disabled
  4129                           ;	Brown-out Reset Enable
  4130                           ;	BOREN = ON, Brown-out Reset enabled
  4131                           ;	Clock Out Enable
  4132                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4133                           ;	Internal/External Switchover Mode
  4134                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  4135                           ;	Fail-Safe Clock Monitor Enable
  4136                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4137     8007                     	org	32775
  4138     8007  3FE4               	dw	16356
  4139                           
  4140                           ;Config register CONFIG2 @ 0x8008
  4141                           ;	Flash Memory Self-Write Protection
  4142                           ;	WRT = OFF, Write protection off
  4143                           ;	Stack Overflow/Underflow Reset Enable
  4144                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4145                           ;	Brown-out Reset Voltage Selection
  4146                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4147                           ;	Low-Power Brown Out Reset
  4148                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4149                           ;	Low-Voltage Programming Enable
  4150                           ;	LVP = ON, Low-voltage programming enabled
  4151     8008                     	org	32776
  4152     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         24
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     22      51
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    S450$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultOverflowCallback(), Tmr1CallBack(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultOverflowCallback(), Tmr1CallBack(), 

    TMR1_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultOverflowCallback(), Absolute function(), Tmr1CallBack(), 

    S450TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    tmr1.Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S450TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR1_OverflowCallbackRegister(), 

    tmr1.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR1_OverflowCallbackRegister(), 

    S450TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR1_PeriodCountSet(), 

    tmr1.PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR1_PeriodCountSet(), 

    S450TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), 

    tmr1.Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), 

    S450TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), 

    tmr1.Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), 

    S450TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Initialize(), 

    tmr1.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Initialize(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), INT_DefaultInterruptHandler(), 

    SetSegments@digit	PTR struct digit size(1) Largest target is 7
		 -> one(BANK0[7]), ten(BANK0[7]), hundred(BANK0[7]), 

    ClearDigit@digit	PTR struct digit size(1) Largest target is 7
		 -> one(BANK0[7]), ten(BANK0[7]), hundred(BANK0[7]), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _Display->___awdiv
    ___awmod->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_OverflowISR->_TMR1_Write
    _TMR1_OverflowISR->_Tmr1CallBack

Critical Paths under _main in BANK0

    _main->_Display
    _Display->___awmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4624
                                             18 BANK0      4     4      0
                         _ClearDigit
                            _Display
                  _SYSTEM_Initialize
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR1_OverflowCallbackRegister                        2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display                                             11     9      2    3854
                                              7 BANK0     11     9      2
                        _SetSegments
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _SetSegments                                          4     1      3    2293
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ClearDigit                                           1     1      0     253
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     264
                   _TMR1_OverflowISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_OverflowISR                                     0     0      0     264
                   Absolute function *
       _TMR1_DefaultOverflowCallback *
                         _TMR1_Write
                       _Tmr1CallBack *
 ---------------------------------------------------------------------------------
 (6) _Tmr1CallBack                                         2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_Write                                           2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearDigit
   _Display
     _SetSegments
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_OverflowCallbackRegister
   _TMR1_OverflowCallbackRegister

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_OverflowISR
     Absolute function(Fake) *
     _TMR1_DefaultOverflowCallback *
     _TMR1_Write *
     _Tmr1CallBack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     16      33       6       63.7%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      3F      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Sep 03 13:25:48 2025

                                           l7 04E1                                            l32 0448  
                                          l52 01FA                                            l55 0324  
                                ___awdiv@sign 0078                                           l105 0465  
                                         l201 047E                                           l140 04C9  
                                         l119 04B2                                           l234 04D5  
                                         l159 04DB                                           l464 0383  
                                         l477 03D7                                           u420 002E  
                                         u500 0365                                           u421 002D  
                                         u501 0364                                           u520 0375  
                                         u440 032A                                           u521 0374  
                                         u505 0361                                           u441 0329  
                                         u530 037A                                           u450 0335  
                                         u531 0379                                           u515 036B  
                                         u451 0334                                           u460 0346  
                                         u461 0345                                           u480 0356  
                                         u800 03C9                                           u481 0355  
                                         u801 03C8                                           u810 03CE  
                                         u730 038A                                           u475 034A  
                                         u811 03CD                                           u731 0389  
                                         u740 0395                                           u820 02F0  
                                         u741 0394                                           u821 02EE  
                                         u750 03A0                                           u830 02F1  
                                         u495 0357                                           u751 039F  
                                         u840 0314                                           u841 0312  
                                         u825 02EB                                           u770 03B0  
                                         u850 0315                                           u771 03AF  
                                         u780 03BA                                           u860 0414  
                                         u781 03B9                                           u765 03A4  
                                         u845 030F                                           u861 0413  
                                         u785 03B6                                           u865 0410  
                                         u795 03BF                                           u877 041D  
                             _timer1ReloadVal 004F                                           _one 0030  
                                         _ten 0029                                  ___awmod@sign 003D  
                                         wreg 0009                                          l1301 0096  
                                        l1311 00B7                                          l1303 009C  
                                        l1401 01C8                                          l1321 00D9  
                                        l1313 00BC                                          l1305 00A6  
                                        l1241 04DC                                          l1403 01CE  
                                        l1331 00F3                                          l1323 00DE  
                                        l1315 00C3                                          l1307 00AB  
                                        l1243 04DF                                          l1341 0110  
                                        l1333 00F9                                          l1325 00E3  
                                        l1317 00CD                                          l1309 00B1  
                                        l1501 0352                                          l1421 0452  
                                        l1413 0449                                          l1237 04D0  
                                        l1351 012A                                          l1343 0115  
                                        l1335 00FE                                          l1327 00EA  
                                        l1319 00D3                                          l1271 0040  
                                        l1407 01D5                                          l1263 0029  
                                        l1511 036F                                          l1503 0356  
                                        l1239 04D6                                          l1431 045F  
                                        l1423 0454                                          l1415 044D  
                                        l1361 0146                                          l1353 0130  
                                        l1345 0119                                          l1337 0103  
                                        l1329 00EE                                          l1281 0060  
                                        l1273 0045                                          l1265 002E  
                                        l1505 0365                                          l1513 0375  
                                        l1441 0464                                          l1433 0460  
                                        l1425 0455                                          l1417 0450  
                                        l1371 0169                                          l1363 014C  
                                        l1355 0137                                          l1347 011F  
                                        l1339 0109                                          l1291 007C  
                                        l1283 0066                                          l1275 004A  
                                        l1267 0036                                          l1515 037A  
                                        l1507 0369                                          l1435 0461  
                                        l1427 045B                                          l1419 0451  
                                        l1451 0470                                          l1443 0466  
                                        l1381 0184                                          l1373 016F  
                                        l1365 0152                                          l1357 013C  
                                        l1349 0125                                          l1293 0081  
                                        l1285 006C                                          l1277 0050  
                                        l1269 003B                                          l1517 037F  
                                        l1509 036A                                          l1701 02B5  
                                        l1461 04C2                                          l1437 0462  
                                        l1429 045D                                          l1453 0477  
                                        l1445 0468                                          l1391 01A6  
                                        l1383 018E                                          l1375 0174  
                                        l1367 0158                                          l1359 0140  
                                        l1295 0087                                          l1287 0072  
                                        l1279 005A                                          l1703 02E2  
                                        l1439 0463                                          l1455 0479  
                                        l1447 046A                                          l1711 03D8  
                                        l1561 042F                                          l1393 01AD  
                                        l1385 0194                                          l1377 0179  
                                        l1369 015F                                          l1297 008C  
                                        l1289 0078                                          l1481 032A  
                                        l1705 02F8                                          l1457 047B  
                                        l1449 046C                                          l1721 03E9  
                                        l1713 03DB                                          l1563 0434  
                                        l1395 01B7                                          l1387 019A  
                                        l1379 017E                                          l1299 0091  
                                        l1491 033E                                          l1483 032F  
                                        l1707 0301                                          l1459 04BF  
                                        l1731 03F7                                          l1723 03EC  
                                        l1715 03DD                                          l1565 0439  
                                        l1397 01BD                                          l1389 01A0  
                                        l1493 0340                                          l1485 0331  
                                        l1477 0325                                          l1709 031A  
                                        l1581 04A6                                          l1741 0417  
                                        l1733 03FA                                          l1725 03EE  
                                        l1717 03E1                                          l1567 043E  
                                        l1559 0427                                          l1399 01C3  
                                        l1495 0346                                          l1487 0335  
                                        l1479 0326                                          l1671 0391  
                                        l1663 0384                                          l1735 0402  
                                        l1727 03F5                                          l1719 03E5  
                                        l1569 0443                                          l1497 0349  
                                        l1489 033A                                          l1681 03A8  
                                        l1673 0395                                          l1665 0386  
                                        l1737 0407                                          l1729 03F6  
                                        l1763 01DA                                          l1499 034E  
                                        l1691 03C3                                          l1683 03AC  
                                        l1675 039A                                          l1667 038A  
                                        l1739 0414                                          l1685 03B0  
                                        l1677 03A0                                          l1693 03C9  
                                        l1669 038F                                          l1695 03CE  
                                        l1687 03BA                                          l1679 03A3  
                                        l1697 03D3                                          l1689 03BE  
                                        _LATA 010C                                          _LATB 010D  
                                        _LATC 010E                                          i1l35 02B4  
                                        _WPUA 020C                                          _WPUB 020D  
                                        _main 03D8                                          _tmr1 04B3  
                                  _ClearDigit 0426                                          fsr0h 0005  
                                        fsr1h 0007                                          indf0 0000  
                                        fsr0l 0004                                          indf1 0001  
                                        fsr1l 0006                                          btemp 007E  
                 _INT_DefaultInterruptHandler 0000                                          start 0019  
             __end_of_INT_SetInterruptHandler 04DC                               __end_of_Display 0325  
              ??_TMR1_DefaultOverflowCallback 0070                                         ?_main 0070  
                             __end_of___awdiv 0384                               __end_of___awmod 03D8  
                             ___awdiv@divisor 0072                                         _T1CON 0018  
                                       _IOCAF 0393                                         _IOCBF 0396  
                                       _IOCAN 0392                                         _IOCAP 0391  
                                       _IOCBN 0395                                         _IOCBP 0394  
                                       i1l215 04A5                                         i1l231 0494  
                                       i1l237 04E2                                         i1l149 0017  
                             ___awdiv@counter 0077                                         u40_20 0219  
                                       u40_21 0218                                         u41_20 021E  
                                       u41_21 021D                                         _TMR1H 0017  
                                       _TMR1L 0016                                         u43_20 049A  
                                       u43_21 0499                                         u37_20 020A  
                                       u37_21 0209                                         u38_20 020F  
                                       u70_20 000F                                         u38_21 020E  
                                       u70_21 000E                                         u39_20 0214  
                                       u71_20 0014                                         u39_21 0213  
                                       u71_21 0013                                         _TRISA 008C  
                                       _TRISB 008D                                         _TRISC 008E  
                                       u67_20 048F                                         u67_21 048E  
                                       u69_20 000A                                         u69_21 0009  
                                 ?_TMR1_Write 0070                                         main@i 004B  
                     __end_of_TMR1_Initialize 047F                                         pclath 000A  
                                       status 0003                                         wtemp0 007E  
                             __initialization 001B                                  __end_of_main 0426  
                                __end_of_tmr1 04BF                              _TMR1_OverflowISR 047F  
                 ?_INTERRUPT_InterruptManager 0070                                        ??_main 0049  
                               ??_SetSegments 0075                              ___awdiv@dividend 0074  
       __end_of_TMR1_OverflowCallbackRegister 04D6                 _TMR1_OverflowCallbackRegister 04D0  
                                      _ANSELA 018C                                        _ANSELB 018D  
                                      _ANSELC 018E                                 ?_Tmr1CallBack 0070  
                                      _BORCON 0116                                        _T1GCON 0019  
                                      i1l1251 020A                                        i1l1253 020F  
                                      i1l1261 0220                                        i1l1245 01FB  
                                      i1l1255 0214                                        i1l1247 01FE  
                                      i1l1257 0219                                        i1l1249 0205  
                                      i1l1259 021E                                        i1l1471 049F  
                                      i1l1463 0495                                        i1l1623 0006  
                                      i1l1465 049A                                        i1l1473 04A1  
                                      i1l1625 000A                                        i1l1475 04A3  
                                      i1l1467 049B                                        i1l1627 000F  
                                      i1l1469 049D                                        i1l1629 0014  
                                      i1l1583 047F                                        i1l1585 0481  
                                      i1l1587 0488                                        i1l1589 048F  
                                      _OSCCON 0099                                   ?_ClearDigit 0070  
                                   ??_Display 0040                                     ??___awdiv 0076  
                                   ??___awmod 003B                              ___awdiv@quotient 0079  
                             ___awmod@divisor 0037                               ___awmod@counter 003C  
                                      _toggle 007B                             ?_CLOCK_Initialize 0070  
                          ??_CLOCK_Initialize 0072                              SetSegments@blank 0074  
                            SetSegments@digit 0075       INT_SetInterruptHandler@InterruptHandler 0072  
                              ??_Tmr1CallBack 0070                           __end_of_SetSegments 01FB  
                            ?_TMR1_Initialize 0070                             _SYSTEM_Initialize 04A6  
                     __end_of__initialization 0024                            ?_SYSTEM_Initialize 0070  
                              __pcstackCOMMON 0070                           ??_SYSTEM_Initialize 0074  
                              _OPTION_REGbits 0095                     __end_of_SYSTEM_Initialize 04B3  
                                  __pbssBANK0 0020                ?_TMR1_OverflowCallbackRegister 0072  
                                  __pmaintext 03D8                                    __pintentry 0004  
                                 _SetSegments 0028                           _TMR1_PeriodCountSet 0000  
                                ??_TMR1_Write 0072                      __end_of_TMR1_OverflowISR 0495  
                                     _Display 02B5                                       ___awdiv 0325  
                                     ___awmod 0384                          __end_of_Tmr1CallBack 02B5  
                          __end_of_TMR1_Write 04A6                                       __ptext1 04A6  
                                     __ptext2 0466                                       __ptext3 04D0  
                                     __ptext4 0449                                       __ptext5 04BF  
                                     __ptext6 04D6                                       __ptext7 04DC  
                                     __ptext8 02B5                                       __ptext9 0384  
                                   _T1CONbits 0018                              ___awmod@dividend 0039  
                                     _hundred 0022                      ??_PIN_MANAGER_Initialize 0072  
                     _INT_SetInterruptHandler 04D6                                       clrloop0 04CB  
                        end_of_initialization 0024                                  ??_ClearDigit 0072  
                             Display@hundreds 0047                                     _PORTAbits 000C  
                                   _PORTBbits 000D                                     _PORTCbits 000E  
                                   _TMR1_Stop 0000                         _TMR1_OverflowCallback 004D  
                          __end_of_ClearDigit 0449  TMR1_OverflowCallbackRegister@CallbackHandler 0072  
                __end_of_INTERRUPT_Initialize 04CA                     ??_INT_SetInterruptHandler 0074  
                             ClearDigit@digit 0072                           start_initialization 001B  
                          TMR1_Write@timerVal 0070                                  SetSegments@a 0072  
             ??_TMR1_OverflowCallbackRegister 0074                                  ?_SetSegments 0072  
                           _Tmr1CallBack$1081 0071                                   __pbssCOMMON 007B  
                                   ___latbits 0002                                 __pcstackBANK0 0037  
                           ?_TMR1_OverflowISR 0070                                  _Tmr1CallBack 01FB  
                          ??_TMR1_OverflowISR 0072                                      ?_Display 003E  
                                   __pnvBANK0 004D                        _PIN_MANAGER_Initialize 0449  
                                    ?___awdiv 0072                                      ?___awmod 0037  
                ??_INTERRUPT_InterruptManager 0072                          _INTERRUPT_Initialize 04BF  
                            _CLOCK_Initialize 04DC                                     clear_ram0 04CA  
                                    _PIE1bits 0091                                      _PIR1bits 0011  
                                    Display@a 003E                             ??_TMR1_Initialize 0074  
                       ?_INTERRUPT_Initialize 0070                         _TMR1_InterruptHandler 0020  
                                    __ptext10 0325                                      __ptext11 0028  
                                    __ptext12 0426                                    _T1GCONbits 0019  
                                    __ptext14 047F                                      __ptext15 04E2  
                                    __ptext16 01FB                                      __ptext17 0495  
        __end_of_TMR1_DefaultOverflowCallback 04E3                  _TMR1_DefaultOverflowCallback 04E2  
                                    int$flags 007E            __end_of_INTERRUPT_InterruptManager 0019  
                  _INTERRUPT_InterruptManager 0004                                    _INTCONbits 000B  
                        _INT_InterruptHandler 0051                        ??_INTERRUPT_Initialize 0074  
                                    intlevel1 0000                       ?_PIN_MANAGER_Initialize 0070  
               ?_TMR1_DefaultOverflowCallback 0070                      ?_INT_SetInterruptHandler 0072  
                    __end_of_CLOCK_Initialize 04E2                                 __pstringtext1 04B3  
                                 Display@ones 0043                                   Display@tens 0045  
                                  _TMR1_Start 0000                                    _TMR1_Write 0495  
              __end_of_PIN_MANAGER_Initialize 0466                               _TMR1_Initialize 0466  
