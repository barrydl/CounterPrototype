

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Sep 03 13:14:19 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16LF1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16LF1509 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0095                     	;# 
   103     0096                     	;# 
   104     0097                     	;# 
   105     0099                     	;# 
   106     009A                     	;# 
   107     009B                     	;# 
   108     009B                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     0111                     	;# 
   117     0112                     	;# 
   118     0113                     	;# 
   119     0114                     	;# 
   120     0115                     	;# 
   121     0116                     	;# 
   122     0117                     	;# 
   123     0118                     	;# 
   124     0119                     	;# 
   125     011D                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     018E                     	;# 
   129     0191                     	;# 
   130     0191                     	;# 
   131     0192                     	;# 
   132     0193                     	;# 
   133     0193                     	;# 
   134     0194                     	;# 
   135     0195                     	;# 
   136     0196                     	;# 
   137     0199                     	;# 
   138     019A                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019C                     	;# 
   142     019D                     	;# 
   143     019E                     	;# 
   144     019F                     	;# 
   145     020C                     	;# 
   146     020D                     	;# 
   147     0211                     	;# 
   148     0211                     	;# 
   149     0212                     	;# 
   150     0212                     	;# 
   151     0213                     	;# 
   152     0213                     	;# 
   153     0214                     	;# 
   154     0214                     	;# 
   155     0215                     	;# 
   156     0215                     	;# 
   157     0215                     	;# 
   158     0216                     	;# 
   159     0216                     	;# 
   160     0217                     	;# 
   161     0217                     	;# 
   162     0391                     	;# 
   163     0392                     	;# 
   164     0393                     	;# 
   165     0394                     	;# 
   166     0395                     	;# 
   167     0396                     	;# 
   168     0498                     	;# 
   169     0498                     	;# 
   170     0499                     	;# 
   171     049A                     	;# 
   172     049B                     	;# 
   173     049B                     	;# 
   174     049C                     	;# 
   175     049D                     	;# 
   176     049E                     	;# 
   177     049F                     	;# 
   178     0611                     	;# 
   179     0612                     	;# 
   180     0613                     	;# 
   181     0613                     	;# 
   182     0614                     	;# 
   183     0615                     	;# 
   184     0616                     	;# 
   185     0616                     	;# 
   186     0617                     	;# 
   187     0618                     	;# 
   188     0619                     	;# 
   189     0619                     	;# 
   190     061A                     	;# 
   191     061B                     	;# 
   192     061C                     	;# 
   193     061C                     	;# 
   194     0691                     	;# 
   195     0692                     	;# 
   196     0693                     	;# 
   197     0694                     	;# 
   198     0695                     	;# 
   199     0F0F                     	;# 
   200     0F10                     	;# 
   201     0F11                     	;# 
   202     0F12                     	;# 
   203     0F13                     	;# 
   204     0F14                     	;# 
   205     0F15                     	;# 
   206     0F16                     	;# 
   207     0F17                     	;# 
   208     0F18                     	;# 
   209     0F19                     	;# 
   210     0F1A                     	;# 
   211     0F1B                     	;# 
   212     0F1C                     	;# 
   213     0F1D                     	;# 
   214     0F1E                     	;# 
   215     0F1F                     	;# 
   216     0F20                     	;# 
   217     0F21                     	;# 
   218     0F22                     	;# 
   219     0F23                     	;# 
   220     0F24                     	;# 
   221     0F25                     	;# 
   222     0F26                     	;# 
   223     0F27                     	;# 
   224     0F28                     	;# 
   225     0F29                     	;# 
   226     0F2A                     	;# 
   227     0F2B                     	;# 
   228     0F2C                     	;# 
   229     0F2D                     	;# 
   230     0F2E                     	;# 
   231     0F2F                     	;# 
   232     0F8C                     	;# 
   233     0F8D                     	;# 
   234     0F91                     	;# 
   235     0F95                     	;# 
   236     0F96                     	;# 
   237     0F97                     	;# 
   238     0F9C                     	;# 
   239     0F9D                     	;# 
   240     0F9E                     	;# 
   241     0FE3                     	;# 
   242     0FE4                     	;# 
   243     0FE5                     	;# 
   244     0FE6                     	;# 
   245     0FE7                     	;# 
   246     0FE8                     	;# 
   247     0FE9                     	;# 
   248     0FEA                     	;# 
   249     0FEB                     	;# 
   250     0FED                     	;# 
   251     0FEE                     	;# 
   252     0FEF                     	;# 
   253     0000                     	;# 
   254     0001                     	;# 
   255     0002                     	;# 
   256     0003                     	;# 
   257     0004                     	;# 
   258     0005                     	;# 
   259     0006                     	;# 
   260     0007                     	;# 
   261     0008                     	;# 
   262     0009                     	;# 
   263     000A                     	;# 
   264     000B                     	;# 
   265     000C                     	;# 
   266     000D                     	;# 
   267     000E                     	;# 
   268     0011                     	;# 
   269     0012                     	;# 
   270     0013                     	;# 
   271     0015                     	;# 
   272     0016                     	;# 
   273     0016                     	;# 
   274     0017                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001B                     	;# 
   279     001C                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0095                     	;# 
   287     0096                     	;# 
   288     0097                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009B                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     009F                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     0111                     	;# 
   301     0112                     	;# 
   302     0113                     	;# 
   303     0114                     	;# 
   304     0115                     	;# 
   305     0116                     	;# 
   306     0117                     	;# 
   307     0118                     	;# 
   308     0119                     	;# 
   309     011D                     	;# 
   310     018C                     	;# 
   311     018D                     	;# 
   312     018E                     	;# 
   313     0191                     	;# 
   314     0191                     	;# 
   315     0192                     	;# 
   316     0193                     	;# 
   317     0193                     	;# 
   318     0194                     	;# 
   319     0195                     	;# 
   320     0196                     	;# 
   321     0199                     	;# 
   322     019A                     	;# 
   323     019B                     	;# 
   324     019B                     	;# 
   325     019C                     	;# 
   326     019D                     	;# 
   327     019E                     	;# 
   328     019F                     	;# 
   329     020C                     	;# 
   330     020D                     	;# 
   331     0211                     	;# 
   332     0211                     	;# 
   333     0212                     	;# 
   334     0212                     	;# 
   335     0213                     	;# 
   336     0213                     	;# 
   337     0214                     	;# 
   338     0214                     	;# 
   339     0215                     	;# 
   340     0215                     	;# 
   341     0215                     	;# 
   342     0216                     	;# 
   343     0216                     	;# 
   344     0217                     	;# 
   345     0217                     	;# 
   346     0391                     	;# 
   347     0392                     	;# 
   348     0393                     	;# 
   349     0394                     	;# 
   350     0395                     	;# 
   351     0396                     	;# 
   352     0498                     	;# 
   353     0498                     	;# 
   354     0499                     	;# 
   355     049A                     	;# 
   356     049B                     	;# 
   357     049B                     	;# 
   358     049C                     	;# 
   359     049D                     	;# 
   360     049E                     	;# 
   361     049F                     	;# 
   362     0611                     	;# 
   363     0612                     	;# 
   364     0613                     	;# 
   365     0613                     	;# 
   366     0614                     	;# 
   367     0615                     	;# 
   368     0616                     	;# 
   369     0616                     	;# 
   370     0617                     	;# 
   371     0618                     	;# 
   372     0619                     	;# 
   373     0619                     	;# 
   374     061A                     	;# 
   375     061B                     	;# 
   376     061C                     	;# 
   377     061C                     	;# 
   378     0691                     	;# 
   379     0692                     	;# 
   380     0693                     	;# 
   381     0694                     	;# 
   382     0695                     	;# 
   383     0F0F                     	;# 
   384     0F10                     	;# 
   385     0F11                     	;# 
   386     0F12                     	;# 
   387     0F13                     	;# 
   388     0F14                     	;# 
   389     0F15                     	;# 
   390     0F16                     	;# 
   391     0F17                     	;# 
   392     0F18                     	;# 
   393     0F19                     	;# 
   394     0F1A                     	;# 
   395     0F1B                     	;# 
   396     0F1C                     	;# 
   397     0F1D                     	;# 
   398     0F1E                     	;# 
   399     0F1F                     	;# 
   400     0F20                     	;# 
   401     0F21                     	;# 
   402     0F22                     	;# 
   403     0F23                     	;# 
   404     0F24                     	;# 
   405     0F25                     	;# 
   406     0F26                     	;# 
   407     0F27                     	;# 
   408     0F28                     	;# 
   409     0F29                     	;# 
   410     0F2A                     	;# 
   411     0F2B                     	;# 
   412     0F2C                     	;# 
   413     0F2D                     	;# 
   414     0F2E                     	;# 
   415     0F2F                     	;# 
   416     0F8C                     	;# 
   417     0F8D                     	;# 
   418     0F91                     	;# 
   419     0F95                     	;# 
   420     0F96                     	;# 
   421     0F97                     	;# 
   422     0F9C                     	;# 
   423     0F9D                     	;# 
   424     0F9E                     	;# 
   425     0FE3                     	;# 
   426     0FE4                     	;# 
   427     0FE5                     	;# 
   428     0FE6                     	;# 
   429     0FE7                     	;# 
   430     0FE8                     	;# 
   431     0FE9                     	;# 
   432     0FEA                     	;# 
   433     0FEB                     	;# 
   434     0FED                     	;# 
   435     0FEE                     	;# 
   436     0FEF                     	;# 
   437     0000                     	;# 
   438     0001                     	;# 
   439     0002                     	;# 
   440     0003                     	;# 
   441     0004                     	;# 
   442     0005                     	;# 
   443     0006                     	;# 
   444     0007                     	;# 
   445     0008                     	;# 
   446     0009                     	;# 
   447     000A                     	;# 
   448     000B                     	;# 
   449     000C                     	;# 
   450     000D                     	;# 
   451     000E                     	;# 
   452     0011                     	;# 
   453     0012                     	;# 
   454     0013                     	;# 
   455     0015                     	;# 
   456     0016                     	;# 
   457     0016                     	;# 
   458     0017                     	;# 
   459     0018                     	;# 
   460     0019                     	;# 
   461     001A                     	;# 
   462     001B                     	;# 
   463     001C                     	;# 
   464     008C                     	;# 
   465     008D                     	;# 
   466     008E                     	;# 
   467     0091                     	;# 
   468     0092                     	;# 
   469     0093                     	;# 
   470     0095                     	;# 
   471     0096                     	;# 
   472     0097                     	;# 
   473     0099                     	;# 
   474     009A                     	;# 
   475     009B                     	;# 
   476     009B                     	;# 
   477     009C                     	;# 
   478     009D                     	;# 
   479     009E                     	;# 
   480     009F                     	;# 
   481     010C                     	;# 
   482     010D                     	;# 
   483     010E                     	;# 
   484     0111                     	;# 
   485     0112                     	;# 
   486     0113                     	;# 
   487     0114                     	;# 
   488     0115                     	;# 
   489     0116                     	;# 
   490     0117                     	;# 
   491     0118                     	;# 
   492     0119                     	;# 
   493     011D                     	;# 
   494     018C                     	;# 
   495     018D                     	;# 
   496     018E                     	;# 
   497     0191                     	;# 
   498     0191                     	;# 
   499     0192                     	;# 
   500     0193                     	;# 
   501     0193                     	;# 
   502     0194                     	;# 
   503     0195                     	;# 
   504     0196                     	;# 
   505     0199                     	;# 
   506     019A                     	;# 
   507     019B                     	;# 
   508     019B                     	;# 
   509     019C                     	;# 
   510     019D                     	;# 
   511     019E                     	;# 
   512     019F                     	;# 
   513     020C                     	;# 
   514     020D                     	;# 
   515     0211                     	;# 
   516     0211                     	;# 
   517     0212                     	;# 
   518     0212                     	;# 
   519     0213                     	;# 
   520     0213                     	;# 
   521     0214                     	;# 
   522     0214                     	;# 
   523     0215                     	;# 
   524     0215                     	;# 
   525     0215                     	;# 
   526     0216                     	;# 
   527     0216                     	;# 
   528     0217                     	;# 
   529     0217                     	;# 
   530     0391                     	;# 
   531     0392                     	;# 
   532     0393                     	;# 
   533     0394                     	;# 
   534     0395                     	;# 
   535     0396                     	;# 
   536     0498                     	;# 
   537     0498                     	;# 
   538     0499                     	;# 
   539     049A                     	;# 
   540     049B                     	;# 
   541     049B                     	;# 
   542     049C                     	;# 
   543     049D                     	;# 
   544     049E                     	;# 
   545     049F                     	;# 
   546     0611                     	;# 
   547     0612                     	;# 
   548     0613                     	;# 
   549     0613                     	;# 
   550     0614                     	;# 
   551     0615                     	;# 
   552     0616                     	;# 
   553     0616                     	;# 
   554     0617                     	;# 
   555     0618                     	;# 
   556     0619                     	;# 
   557     0619                     	;# 
   558     061A                     	;# 
   559     061B                     	;# 
   560     061C                     	;# 
   561     061C                     	;# 
   562     0691                     	;# 
   563     0692                     	;# 
   564     0693                     	;# 
   565     0694                     	;# 
   566     0695                     	;# 
   567     0F0F                     	;# 
   568     0F10                     	;# 
   569     0F11                     	;# 
   570     0F12                     	;# 
   571     0F13                     	;# 
   572     0F14                     	;# 
   573     0F15                     	;# 
   574     0F16                     	;# 
   575     0F17                     	;# 
   576     0F18                     	;# 
   577     0F19                     	;# 
   578     0F1A                     	;# 
   579     0F1B                     	;# 
   580     0F1C                     	;# 
   581     0F1D                     	;# 
   582     0F1E                     	;# 
   583     0F1F                     	;# 
   584     0F20                     	;# 
   585     0F21                     	;# 
   586     0F22                     	;# 
   587     0F23                     	;# 
   588     0F24                     	;# 
   589     0F25                     	;# 
   590     0F26                     	;# 
   591     0F27                     	;# 
   592     0F28                     	;# 
   593     0F29                     	;# 
   594     0F2A                     	;# 
   595     0F2B                     	;# 
   596     0F2C                     	;# 
   597     0F2D                     	;# 
   598     0F2E                     	;# 
   599     0F2F                     	;# 
   600     0F8C                     	;# 
   601     0F8D                     	;# 
   602     0F91                     	;# 
   603     0F95                     	;# 
   604     0F96                     	;# 
   605     0F97                     	;# 
   606     0F9C                     	;# 
   607     0F9D                     	;# 
   608     0F9E                     	;# 
   609     0FE3                     	;# 
   610     0FE4                     	;# 
   611     0FE5                     	;# 
   612     0FE6                     	;# 
   613     0FE7                     	;# 
   614     0FE8                     	;# 
   615     0FE9                     	;# 
   616     0FEA                     	;# 
   617     0FEB                     	;# 
   618     0FED                     	;# 
   619     0FEE                     	;# 
   620     0FEF                     	;# 
   621     0000                     	;# 
   622     0001                     	;# 
   623     0002                     	;# 
   624     0003                     	;# 
   625     0004                     	;# 
   626     0005                     	;# 
   627     0006                     	;# 
   628     0007                     	;# 
   629     0008                     	;# 
   630     0009                     	;# 
   631     000A                     	;# 
   632     000B                     	;# 
   633     000C                     	;# 
   634     000D                     	;# 
   635     000E                     	;# 
   636     0011                     	;# 
   637     0012                     	;# 
   638     0013                     	;# 
   639     0015                     	;# 
   640     0016                     	;# 
   641     0016                     	;# 
   642     0017                     	;# 
   643     0018                     	;# 
   644     0019                     	;# 
   645     001A                     	;# 
   646     001B                     	;# 
   647     001C                     	;# 
   648     008C                     	;# 
   649     008D                     	;# 
   650     008E                     	;# 
   651     0091                     	;# 
   652     0092                     	;# 
   653     0093                     	;# 
   654     0095                     	;# 
   655     0096                     	;# 
   656     0097                     	;# 
   657     0099                     	;# 
   658     009A                     	;# 
   659     009B                     	;# 
   660     009B                     	;# 
   661     009C                     	;# 
   662     009D                     	;# 
   663     009E                     	;# 
   664     009F                     	;# 
   665     010C                     	;# 
   666     010D                     	;# 
   667     010E                     	;# 
   668     0111                     	;# 
   669     0112                     	;# 
   670     0113                     	;# 
   671     0114                     	;# 
   672     0115                     	;# 
   673     0116                     	;# 
   674     0117                     	;# 
   675     0118                     	;# 
   676     0119                     	;# 
   677     011D                     	;# 
   678     018C                     	;# 
   679     018D                     	;# 
   680     018E                     	;# 
   681     0191                     	;# 
   682     0191                     	;# 
   683     0192                     	;# 
   684     0193                     	;# 
   685     0193                     	;# 
   686     0194                     	;# 
   687     0195                     	;# 
   688     0196                     	;# 
   689     0199                     	;# 
   690     019A                     	;# 
   691     019B                     	;# 
   692     019B                     	;# 
   693     019C                     	;# 
   694     019D                     	;# 
   695     019E                     	;# 
   696     019F                     	;# 
   697     020C                     	;# 
   698     020D                     	;# 
   699     0211                     	;# 
   700     0211                     	;# 
   701     0212                     	;# 
   702     0212                     	;# 
   703     0213                     	;# 
   704     0213                     	;# 
   705     0214                     	;# 
   706     0214                     	;# 
   707     0215                     	;# 
   708     0215                     	;# 
   709     0215                     	;# 
   710     0216                     	;# 
   711     0216                     	;# 
   712     0217                     	;# 
   713     0217                     	;# 
   714     0391                     	;# 
   715     0392                     	;# 
   716     0393                     	;# 
   717     0394                     	;# 
   718     0395                     	;# 
   719     0396                     	;# 
   720     0498                     	;# 
   721     0498                     	;# 
   722     0499                     	;# 
   723     049A                     	;# 
   724     049B                     	;# 
   725     049B                     	;# 
   726     049C                     	;# 
   727     049D                     	;# 
   728     049E                     	;# 
   729     049F                     	;# 
   730     0611                     	;# 
   731     0612                     	;# 
   732     0613                     	;# 
   733     0613                     	;# 
   734     0614                     	;# 
   735     0615                     	;# 
   736     0616                     	;# 
   737     0616                     	;# 
   738     0617                     	;# 
   739     0618                     	;# 
   740     0619                     	;# 
   741     0619                     	;# 
   742     061A                     	;# 
   743     061B                     	;# 
   744     061C                     	;# 
   745     061C                     	;# 
   746     0691                     	;# 
   747     0692                     	;# 
   748     0693                     	;# 
   749     0694                     	;# 
   750     0695                     	;# 
   751     0F0F                     	;# 
   752     0F10                     	;# 
   753     0F11                     	;# 
   754     0F12                     	;# 
   755     0F13                     	;# 
   756     0F14                     	;# 
   757     0F15                     	;# 
   758     0F16                     	;# 
   759     0F17                     	;# 
   760     0F18                     	;# 
   761     0F19                     	;# 
   762     0F1A                     	;# 
   763     0F1B                     	;# 
   764     0F1C                     	;# 
   765     0F1D                     	;# 
   766     0F1E                     	;# 
   767     0F1F                     	;# 
   768     0F20                     	;# 
   769     0F21                     	;# 
   770     0F22                     	;# 
   771     0F23                     	;# 
   772     0F24                     	;# 
   773     0F25                     	;# 
   774     0F26                     	;# 
   775     0F27                     	;# 
   776     0F28                     	;# 
   777     0F29                     	;# 
   778     0F2A                     	;# 
   779     0F2B                     	;# 
   780     0F2C                     	;# 
   781     0F2D                     	;# 
   782     0F2E                     	;# 
   783     0F2F                     	;# 
   784     0F8C                     	;# 
   785     0F8D                     	;# 
   786     0F91                     	;# 
   787     0F95                     	;# 
   788     0F96                     	;# 
   789     0F97                     	;# 
   790     0F9C                     	;# 
   791     0F9D                     	;# 
   792     0F9E                     	;# 
   793     0FE3                     	;# 
   794     0FE4                     	;# 
   795     0FE5                     	;# 
   796     0FE6                     	;# 
   797     0FE7                     	;# 
   798     0FE8                     	;# 
   799     0FE9                     	;# 
   800     0FEA                     	;# 
   801     0FEB                     	;# 
   802     0FED                     	;# 
   803     0FEE                     	;# 
   804     0FEF                     	;# 
   805     0000                     	;# 
   806     0001                     	;# 
   807     0002                     	;# 
   808     0003                     	;# 
   809     0004                     	;# 
   810     0005                     	;# 
   811     0006                     	;# 
   812     0007                     	;# 
   813     0008                     	;# 
   814     0009                     	;# 
   815     000A                     	;# 
   816     000B                     	;# 
   817     000C                     	;# 
   818     000D                     	;# 
   819     000E                     	;# 
   820     0011                     	;# 
   821     0012                     	;# 
   822     0013                     	;# 
   823     0015                     	;# 
   824     0016                     	;# 
   825     0016                     	;# 
   826     0017                     	;# 
   827     0018                     	;# 
   828     0019                     	;# 
   829     001A                     	;# 
   830     001B                     	;# 
   831     001C                     	;# 
   832     008C                     	;# 
   833     008D                     	;# 
   834     008E                     	;# 
   835     0091                     	;# 
   836     0092                     	;# 
   837     0093                     	;# 
   838     0095                     	;# 
   839     0096                     	;# 
   840     0097                     	;# 
   841     0099                     	;# 
   842     009A                     	;# 
   843     009B                     	;# 
   844     009B                     	;# 
   845     009C                     	;# 
   846     009D                     	;# 
   847     009E                     	;# 
   848     009F                     	;# 
   849     010C                     	;# 
   850     010D                     	;# 
   851     010E                     	;# 
   852     0111                     	;# 
   853     0112                     	;# 
   854     0113                     	;# 
   855     0114                     	;# 
   856     0115                     	;# 
   857     0116                     	;# 
   858     0117                     	;# 
   859     0118                     	;# 
   860     0119                     	;# 
   861     011D                     	;# 
   862     018C                     	;# 
   863     018D                     	;# 
   864     018E                     	;# 
   865     0191                     	;# 
   866     0191                     	;# 
   867     0192                     	;# 
   868     0193                     	;# 
   869     0193                     	;# 
   870     0194                     	;# 
   871     0195                     	;# 
   872     0196                     	;# 
   873     0199                     	;# 
   874     019A                     	;# 
   875     019B                     	;# 
   876     019B                     	;# 
   877     019C                     	;# 
   878     019D                     	;# 
   879     019E                     	;# 
   880     019F                     	;# 
   881     020C                     	;# 
   882     020D                     	;# 
   883     0211                     	;# 
   884     0211                     	;# 
   885     0212                     	;# 
   886     0212                     	;# 
   887     0213                     	;# 
   888     0213                     	;# 
   889     0214                     	;# 
   890     0214                     	;# 
   891     0215                     	;# 
   892     0215                     	;# 
   893     0215                     	;# 
   894     0216                     	;# 
   895     0216                     	;# 
   896     0217                     	;# 
   897     0217                     	;# 
   898     0391                     	;# 
   899     0392                     	;# 
   900     0393                     	;# 
   901     0394                     	;# 
   902     0395                     	;# 
   903     0396                     	;# 
   904     0498                     	;# 
   905     0498                     	;# 
   906     0499                     	;# 
   907     049A                     	;# 
   908     049B                     	;# 
   909     049B                     	;# 
   910     049C                     	;# 
   911     049D                     	;# 
   912     049E                     	;# 
   913     049F                     	;# 
   914     0611                     	;# 
   915     0612                     	;# 
   916     0613                     	;# 
   917     0613                     	;# 
   918     0614                     	;# 
   919     0615                     	;# 
   920     0616                     	;# 
   921     0616                     	;# 
   922     0617                     	;# 
   923     0618                     	;# 
   924     0619                     	;# 
   925     0619                     	;# 
   926     061A                     	;# 
   927     061B                     	;# 
   928     061C                     	;# 
   929     061C                     	;# 
   930     0691                     	;# 
   931     0692                     	;# 
   932     0693                     	;# 
   933     0694                     	;# 
   934     0695                     	;# 
   935     0F0F                     	;# 
   936     0F10                     	;# 
   937     0F11                     	;# 
   938     0F12                     	;# 
   939     0F13                     	;# 
   940     0F14                     	;# 
   941     0F15                     	;# 
   942     0F16                     	;# 
   943     0F17                     	;# 
   944     0F18                     	;# 
   945     0F19                     	;# 
   946     0F1A                     	;# 
   947     0F1B                     	;# 
   948     0F1C                     	;# 
   949     0F1D                     	;# 
   950     0F1E                     	;# 
   951     0F1F                     	;# 
   952     0F20                     	;# 
   953     0F21                     	;# 
   954     0F22                     	;# 
   955     0F23                     	;# 
   956     0F24                     	;# 
   957     0F25                     	;# 
   958     0F26                     	;# 
   959     0F27                     	;# 
   960     0F28                     	;# 
   961     0F29                     	;# 
   962     0F2A                     	;# 
   963     0F2B                     	;# 
   964     0F2C                     	;# 
   965     0F2D                     	;# 
   966     0F2E                     	;# 
   967     0F2F                     	;# 
   968     0F8C                     	;# 
   969     0F8D                     	;# 
   970     0F91                     	;# 
   971     0F95                     	;# 
   972     0F96                     	;# 
   973     0F97                     	;# 
   974     0F9C                     	;# 
   975     0F9D                     	;# 
   976     0F9E                     	;# 
   977     0FE3                     	;# 
   978     0FE4                     	;# 
   979     0FE5                     	;# 
   980     0FE6                     	;# 
   981     0FE7                     	;# 
   982     0FE8                     	;# 
   983     0FE9                     	;# 
   984     0FEA                     	;# 
   985     0FEB                     	;# 
   986     0FED                     	;# 
   987     0FEE                     	;# 
   988     0FEF                     	;# 
   989     0000                     	;# 
   990     0001                     	;# 
   991     0002                     	;# 
   992     0003                     	;# 
   993     0004                     	;# 
   994     0005                     	;# 
   995     0006                     	;# 
   996     0007                     	;# 
   997     0008                     	;# 
   998     0009                     	;# 
   999     000A                     	;# 
  1000     000B                     	;# 
  1001     000C                     	;# 
  1002     000D                     	;# 
  1003     000E                     	;# 
  1004     0011                     	;# 
  1005     0012                     	;# 
  1006     0013                     	;# 
  1007     0015                     	;# 
  1008     0016                     	;# 
  1009     0016                     	;# 
  1010     0017                     	;# 
  1011     0018                     	;# 
  1012     0019                     	;# 
  1013     001A                     	;# 
  1014     001B                     	;# 
  1015     001C                     	;# 
  1016     008C                     	;# 
  1017     008D                     	;# 
  1018     008E                     	;# 
  1019     0091                     	;# 
  1020     0092                     	;# 
  1021     0093                     	;# 
  1022     0095                     	;# 
  1023     0096                     	;# 
  1024     0097                     	;# 
  1025     0099                     	;# 
  1026     009A                     	;# 
  1027     009B                     	;# 
  1028     009B                     	;# 
  1029     009C                     	;# 
  1030     009D                     	;# 
  1031     009E                     	;# 
  1032     009F                     	;# 
  1033     010C                     	;# 
  1034     010D                     	;# 
  1035     010E                     	;# 
  1036     0111                     	;# 
  1037     0112                     	;# 
  1038     0113                     	;# 
  1039     0114                     	;# 
  1040     0115                     	;# 
  1041     0116                     	;# 
  1042     0117                     	;# 
  1043     0118                     	;# 
  1044     0119                     	;# 
  1045     011D                     	;# 
  1046     018C                     	;# 
  1047     018D                     	;# 
  1048     018E                     	;# 
  1049     0191                     	;# 
  1050     0191                     	;# 
  1051     0192                     	;# 
  1052     0193                     	;# 
  1053     0193                     	;# 
  1054     0194                     	;# 
  1055     0195                     	;# 
  1056     0196                     	;# 
  1057     0199                     	;# 
  1058     019A                     	;# 
  1059     019B                     	;# 
  1060     019B                     	;# 
  1061     019C                     	;# 
  1062     019D                     	;# 
  1063     019E                     	;# 
  1064     019F                     	;# 
  1065     020C                     	;# 
  1066     020D                     	;# 
  1067     0211                     	;# 
  1068     0211                     	;# 
  1069     0212                     	;# 
  1070     0212                     	;# 
  1071     0213                     	;# 
  1072     0213                     	;# 
  1073     0214                     	;# 
  1074     0214                     	;# 
  1075     0215                     	;# 
  1076     0215                     	;# 
  1077     0215                     	;# 
  1078     0216                     	;# 
  1079     0216                     	;# 
  1080     0217                     	;# 
  1081     0217                     	;# 
  1082     0391                     	;# 
  1083     0392                     	;# 
  1084     0393                     	;# 
  1085     0394                     	;# 
  1086     0395                     	;# 
  1087     0396                     	;# 
  1088     0498                     	;# 
  1089     0498                     	;# 
  1090     0499                     	;# 
  1091     049A                     	;# 
  1092     049B                     	;# 
  1093     049B                     	;# 
  1094     049C                     	;# 
  1095     049D                     	;# 
  1096     049E                     	;# 
  1097     049F                     	;# 
  1098     0611                     	;# 
  1099     0612                     	;# 
  1100     0613                     	;# 
  1101     0613                     	;# 
  1102     0614                     	;# 
  1103     0615                     	;# 
  1104     0616                     	;# 
  1105     0616                     	;# 
  1106     0617                     	;# 
  1107     0618                     	;# 
  1108     0619                     	;# 
  1109     0619                     	;# 
  1110     061A                     	;# 
  1111     061B                     	;# 
  1112     061C                     	;# 
  1113     061C                     	;# 
  1114     0691                     	;# 
  1115     0692                     	;# 
  1116     0693                     	;# 
  1117     0694                     	;# 
  1118     0695                     	;# 
  1119     0F0F                     	;# 
  1120     0F10                     	;# 
  1121     0F11                     	;# 
  1122     0F12                     	;# 
  1123     0F13                     	;# 
  1124     0F14                     	;# 
  1125     0F15                     	;# 
  1126     0F16                     	;# 
  1127     0F17                     	;# 
  1128     0F18                     	;# 
  1129     0F19                     	;# 
  1130     0F1A                     	;# 
  1131     0F1B                     	;# 
  1132     0F1C                     	;# 
  1133     0F1D                     	;# 
  1134     0F1E                     	;# 
  1135     0F1F                     	;# 
  1136     0F20                     	;# 
  1137     0F21                     	;# 
  1138     0F22                     	;# 
  1139     0F23                     	;# 
  1140     0F24                     	;# 
  1141     0F25                     	;# 
  1142     0F26                     	;# 
  1143     0F27                     	;# 
  1144     0F28                     	;# 
  1145     0F29                     	;# 
  1146     0F2A                     	;# 
  1147     0F2B                     	;# 
  1148     0F2C                     	;# 
  1149     0F2D                     	;# 
  1150     0F2E                     	;# 
  1151     0F2F                     	;# 
  1152     0F8C                     	;# 
  1153     0F8D                     	;# 
  1154     0F91                     	;# 
  1155     0F95                     	;# 
  1156     0F96                     	;# 
  1157     0F97                     	;# 
  1158     0F9C                     	;# 
  1159     0F9D                     	;# 
  1160     0F9E                     	;# 
  1161     0FE3                     	;# 
  1162     0FE4                     	;# 
  1163     0FE5                     	;# 
  1164     0FE6                     	;# 
  1165     0FE7                     	;# 
  1166     0FE8                     	;# 
  1167     0FE9                     	;# 
  1168     0FEA                     	;# 
  1169     0FEB                     	;# 
  1170     0FED                     	;# 
  1171     0FEE                     	;# 
  1172     0FEF                     	;# 
  1173                           
  1174 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1175     0000                     
  1176 ;; Function _TMR1_Start is unused but had its address taken
  1177     0000                     
  1178 ;; Function _TMR1_Stop is unused but had its address taken
  1179     0000                     
  1180 ;; Function _TMR1_PeriodCountSet is unused but had its address taken
  1181     0000                     
  1182                           	psect	stringtext1
  1183     0456                     __pstringtext1:
  1184     0456                     _tmr1:
  1185     0456  3409               	retlw	low _TMR1_Initialize
  1186     0457  3404               	retlw	high _TMR1_Initialize
  1187     0458  3400               	retlw	0
  1188     0459  3400               	retlw	0
  1189     045A  3400               	retlw	0
  1190     045B  3400               	retlw	0
  1191     045C  3400               	retlw	0
  1192     045D  3400               	retlw	0
  1193     045E  3473               	retlw	low _TMR1_OverflowCallbackRegister
  1194     045F  3404               	retlw	high _TMR1_OverflowCallbackRegister
  1195     0460  3400               	retlw	0
  1196     0461  3400               	retlw	0
  1197     0462                     __end_of_tmr1:
  1198                           
  1199                           	psect	nvBANK0
  1200     004D                     __pnvBANK0:
  1201     004D                     _TMR1_OverflowCallback:
  1202     004D                     	ds	2
  1203     004F                     _timer1ReloadVal:
  1204     004F                     	ds	2
  1205     0051                     _INT_InterruptHandler:
  1206     0051                     	ds	2
  1207     0019                     _T1GCONbits	set	25
  1208     0018                     _T1CONbits	set	24
  1209     0018                     _T1CON	set	24
  1210     0016                     _TMR1L	set	22
  1211     0017                     _TMR1H	set	23
  1212     0019                     _T1GCON	set	25
  1213     0011                     _PIR1bits	set	17
  1214     000B                     _INTCONbits	set	11
  1215     000D                     _PORTBbits	set	13
  1216     000E                     _PORTCbits	set	14
  1217     000C                     _PORTAbits	set	12
  1218     0091                     _PIE1bits	set	145
  1219     0095                     _OPTION_REGbits	set	149
  1220     008E                     _TRISC	set	142
  1221     008D                     _TRISB	set	141
  1222     008C                     _TRISA	set	140
  1223     0099                     _OSCCON	set	153
  1224     010E                     _LATC	set	270
  1225     010D                     _LATB	set	269
  1226     010C                     _LATA	set	268
  1227     0116                     _BORCON	set	278
  1228     018E                     _ANSELC	set	398
  1229     018D                     _ANSELB	set	397
  1230     018C                     _ANSELA	set	396
  1231     020D                     _WPUB	set	525
  1232     020C                     _WPUA	set	524
  1233     0396                     _IOCBF	set	918
  1234     0395                     _IOCBN	set	917
  1235     0394                     _IOCBP	set	916
  1236     0393                     _IOCAF	set	915
  1237     0392                     _IOCAN	set	914
  1238     0391                     _IOCAP	set	913
  1239                           
  1240                           	psect	cinit
  1241     001B                     start_initialization:	
  1242                           ; #config settings
  1243                           
  1244     001B                     __initialization:
  1245                           
  1246                           ; Clear objects allocated to COMMON
  1247     001B  01FB               	clrf	__pbssCOMMON& (0+127)
  1248                           
  1249                           ; Clear objects allocated to BANK0
  1250     001C  3020               	movlw	low __pbssBANK0
  1251     001D  0084               	movwf	4
  1252     001E  3000               	movlw	high __pbssBANK0
  1253     001F  0085               	movwf	5
  1254     0020  3017               	movlw	23
  1255     0021  3184  246D  3180   	fcall	clear_ram0
  1256     0024                     end_of_initialization:	
  1257                           ;End of C runtime variable initialization code
  1258                           
  1259     0024                     __end_of__initialization:
  1260     0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1261     0025  0020               	movlb	0
  1262     0026  3183  2B7E         	ljmp	_main	;jump to C main() function
  1263                           
  1264                           	psect	bssCOMMON
  1265     007B                     __pbssCOMMON:
  1266     007B                     _toggle:
  1267     007B                     	ds	1
  1268                           
  1269                           	psect	bssBANK0
  1270     0020                     __pbssBANK0:
  1271     0020                     _TMR1_InterruptHandler:
  1272     0020                     	ds	2
  1273     0022                     _hundred:
  1274     0022                     	ds	7
  1275     0029                     _ten:
  1276     0029                     	ds	7
  1277     0030                     _one:
  1278     0030                     	ds	7
  1279                           
  1280                           	psect	clrtext
  1281     046D                     clear_ram0:	
  1282                           ;	Called with FSR0 containing the base address, and
  1283                           ;	WREG with the size to clear
  1284                           
  1285     046D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1286     046E                     clrloop0:
  1287     046E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1288     046F  3101               	addfsr 0,1
  1289     0470  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1290     0471  2C6E               	goto	clrloop0	;have we reached the end yet?
  1291     0472  3400               	retlw	0	;all done for this memory range, return
  1292                           
  1293                           	psect	cstackCOMMON
  1294     0070                     __pcstackCOMMON:
  1295     0070                     ?_SYSTEM_Initialize:
  1296     0070                     ?_TMR1_Initialize:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299     0070                     ?_INTERRUPT_Initialize:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302     0070                     ?_TMR1_OverflowISR:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305     0070                     ?_TMR1_DefaultOverflowCallback:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308     0070                     ??_TMR1_DefaultOverflowCallback:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311     0070                     ?_CLOCK_Initialize:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314     0070                     ?_ClearDigit:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317     0070                     ?_Tmr1CallBack:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320     0070                     ??_Tmr1CallBack:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323     0070                     ?_PIN_MANAGER_Initialize:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326     0070                     ?_INTERRUPT_InterruptManager:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329     0070                     ?_TMR1_Write:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332     0070                     ?_main:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335     0070                     TMR1_Write@timerVal:	
  1336                           ; 2 bytes @ 0x0
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0x0
  1340     0070                     	ds	2
  1341     0072                     ?_TMR1_OverflowCallbackRegister:
  1342     0072                     ?_INT_SetInterruptHandler:	
  1343                           ; 1 bytes @ 0x2
  1344                           
  1345     0072                     ??_TMR1_OverflowISR:	
  1346                           ; 1 bytes @ 0x2
  1347                           
  1348     0072                     ??_CLOCK_Initialize:	
  1349                           ; 1 bytes @ 0x2
  1350                           
  1351     0072                     ??_ClearDigit:	
  1352                           ; 1 bytes @ 0x2
  1353                           
  1354     0072                     ?_SetSegments:	
  1355                           ; 1 bytes @ 0x2
  1356                           
  1357     0072                     ??_PIN_MANAGER_Initialize:	
  1358                           ; 1 bytes @ 0x2
  1359                           
  1360     0072                     ??_INTERRUPT_InterruptManager:	
  1361                           ; 1 bytes @ 0x2
  1362                           
  1363     0072                     ??_TMR1_Write:	
  1364                           ; 1 bytes @ 0x2
  1365                           
  1366     0072                     ?___awdiv:	
  1367                           ; 1 bytes @ 0x2
  1368                           
  1369     0072                     ClearDigit@digit:	
  1370                           ; 2 bytes @ 0x2
  1371                           
  1372     0072                     SetSegments@a:	
  1373                           ; 1 bytes @ 0x2
  1374                           
  1375     0072                     INT_SetInterruptHandler@InterruptHandler:	
  1376                           ; 2 bytes @ 0x2
  1377                           
  1378     0072                     TMR1_OverflowCallbackRegister@CallbackHandler:	
  1379                           ; 2 bytes @ 0x2
  1380                           
  1381     0072                     ___awdiv@divisor:	
  1382                           ; 2 bytes @ 0x2
  1383                           
  1384                           
  1385                           ; 2 bytes @ 0x2
  1386     0072                     	ds	2
  1387     0074                     ??_SYSTEM_Initialize:
  1388     0074                     ??_TMR1_OverflowCallbackRegister:	
  1389                           ; 1 bytes @ 0x4
  1390                           
  1391     0074                     ??_TMR1_Initialize:	
  1392                           ; 1 bytes @ 0x4
  1393                           
  1394     0074                     ??_INTERRUPT_Initialize:	
  1395                           ; 1 bytes @ 0x4
  1396                           
  1397     0074                     ??_INT_SetInterruptHandler:	
  1398                           ; 1 bytes @ 0x4
  1399                           
  1400     0074                     ??_SetSegments:	
  1401                           ; 1 bytes @ 0x4
  1402                           
  1403     0074                     SetSegments@digit:	
  1404                           ; 1 bytes @ 0x4
  1405                           
  1406     0074                     ___awdiv@dividend:	
  1407                           ; 1 bytes @ 0x4
  1408                           
  1409                           
  1410                           ; 2 bytes @ 0x4
  1411     0074                     	ds	2
  1412     0076                     ??___awdiv:
  1413                           
  1414                           ; 1 bytes @ 0x6
  1415     0076                     	ds	1
  1416     0077                     ___awdiv@counter:
  1417                           
  1418                           ; 1 bytes @ 0x7
  1419     0077                     	ds	1
  1420     0078                     ___awdiv@sign:
  1421                           
  1422                           ; 1 bytes @ 0x8
  1423     0078                     	ds	1
  1424     0079                     ___awdiv@quotient:
  1425                           
  1426                           ; 2 bytes @ 0x9
  1427     0079                     	ds	2
  1428                           
  1429                           	psect	cstackBANK0
  1430     0037                     __pcstackBANK0:
  1431     0037                     ?___awmod:
  1432     0037                     ___awmod@divisor:	
  1433                           ; 2 bytes @ 0x0
  1434                           
  1435                           
  1436                           ; 2 bytes @ 0x0
  1437     0037                     	ds	2
  1438     0039                     ___awmod@dividend:
  1439                           
  1440                           ; 2 bytes @ 0x2
  1441     0039                     	ds	2
  1442     003B                     ??___awmod:
  1443                           
  1444                           ; 1 bytes @ 0x4
  1445     003B                     	ds	1
  1446     003C                     ___awmod@counter:
  1447                           
  1448                           ; 1 bytes @ 0x5
  1449     003C                     	ds	1
  1450     003D                     ___awmod@sign:
  1451                           
  1452                           ; 1 bytes @ 0x6
  1453     003D                     	ds	1
  1454     003E                     ?_Display:
  1455     003E                     Display@a:	
  1456                           ; 1 bytes @ 0x7
  1457                           
  1458                           
  1459                           ; 2 bytes @ 0x7
  1460     003E                     	ds	2
  1461     0040                     ??_Display:
  1462                           
  1463                           ; 1 bytes @ 0x9
  1464     0040                     	ds	3
  1465     0043                     Display@ones:
  1466                           
  1467                           ; 2 bytes @ 0xC
  1468     0043                     	ds	2
  1469     0045                     Display@tens:
  1470                           
  1471                           ; 2 bytes @ 0xE
  1472     0045                     	ds	2
  1473     0047                     Display@hundreds:
  1474                           
  1475                           ; 2 bytes @ 0x10
  1476     0047                     	ds	2
  1477     0049                     ??_main:
  1478                           
  1479                           ; 1 bytes @ 0x12
  1480     0049                     	ds	2
  1481     004B                     main@i:
  1482                           
  1483                           ; 2 bytes @ 0x14
  1484     004B                     	ds	2
  1485                           
  1486                           	psect	maintext
  1487     037E                     __pmaintext:	
  1488 ;;
  1489 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1490 ;;
  1491 ;; *************** function _main *****************
  1492 ;; Defined at:
  1493 ;;		line 232 in file "main.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  i               2   20[BANK0 ] int 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2   57[None  ] int 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : B1F/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1507 ;;      Params:         0       0       0       0       0       0       0
  1508 ;;      Locals:         0       2       0       0       0       0       0
  1509 ;;      Temps:          0       2       0       0       0       0       0
  1510 ;;      Totals:         0       4       0       0       0       0       0
  1511 ;;Total ram usage:        4 bytes
  1512 ;; Hardware stack levels required when called: 6
  1513 ;; This function calls:
  1514 ;;		_ClearDigit
  1515 ;;		_Display
  1516 ;;		_SYSTEM_Initialize
  1517 ;;		_TMR1_OverflowCallbackRegister
  1518 ;; This function is called by:
  1519 ;;		Startup code after reset
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523     037E                     _main:	
  1524                           ;psect for function _main
  1525                           
  1526     037E                     l1635:	
  1527                           ;incstack = 0
  1528                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1529                           
  1530                           
  1531                           ;main.c: 234:     SYSTEM_Initialize();
  1532     037E  3184  2449  3183   	fcall	_SYSTEM_Initialize
  1533     0381                     l1637:
  1534                           
  1535                           ;main.c: 236:     PORTAbits.RA5 = 1;
  1536     0381  0020               	movlb	0	; select bank0
  1537     0382  168C               	bsf	12,5	;volatile
  1538     0383                     l1639:
  1539                           
  1540                           ;main.c: 256:     ClearDigit(&one);
  1541     0383  3030               	movlw	(low (_one| 0))& (0+255)
  1542     0384  3183  23C9  3183   	fcall	_ClearDigit
  1543     0387                     l1641:
  1544                           
  1545                           ;main.c: 257:     ClearDigit(&ten);
  1546     0387  3029               	movlw	(low (_ten| 0))& (0+255)
  1547     0388  3183  23C9  3183   	fcall	_ClearDigit
  1548     038B                     l1643:
  1549                           
  1550                           ;main.c: 258:     ClearDigit(&hundred);
  1551     038B  3022               	movlw	(low (_hundred| 0))& (0+255)
  1552     038C  3183  23C9  3183   	fcall	_ClearDigit
  1553     038F                     l1645:
  1554                           
  1555                           ;main.c: 260:     one.b = 1;
  1556     038F  0020               	movlb	0	; select bank0
  1557     0390  01B1               	clrf	_one+1
  1558     0391  0AB1               	incf	_one+1,f
  1559     0392                     l1647:
  1560                           
  1561                           ;main.c: 261:     one.c = 1;
  1562     0392  01B2               	clrf	_one+2
  1563     0393  0AB2               	incf	_one+2,f
  1564     0394                     l1649:
  1565                           
  1566                           ;main.c: 274:     TMR1_OverflowCallbackRegister(Tmr1CallBack);
  1567     0394  30D5               	movlw	low _Tmr1CallBack
  1568     0395  00F2               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler
  1569     0396  3001               	movlw	high _Tmr1CallBack
  1570     0397  00F3               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler+1
  1571     0398  3184  2473  3183   	fcall	_TMR1_OverflowCallbackRegister
  1572     039B                     l1651:
  1573                           
  1574                           ;main.c: 277:     (INTCONbits.GIE = 1);
  1575     039B  178B               	bsf	11,7	;volatile
  1576     039C                     l1653:
  1577                           
  1578                           ;main.c: 283:     (INTCONbits.PEIE = 1);
  1579     039C  170B               	bsf	11,6	;volatile
  1580     039D                     l1655:
  1581                           
  1582                           ;main.c: 288:     int i = 0;
  1583     039D  0020               	movlb	0	; select bank0
  1584     039E  01CB               	clrf	main@i
  1585     039F  01CC               	clrf	main@i+1
  1586     03A0                     l1657:
  1587                           
  1588                           ;main.c: 291:     {;main.c: 292:         Display(i);
  1589     03A0  0020               	movlb	0	; select bank0
  1590     03A1  084C               	movf	main@i+1,w
  1591     03A2  00BF               	movwf	Display@a+1
  1592     03A3  084B               	movf	main@i,w
  1593     03A4  00BE               	movwf	Display@a
  1594     03A5  3182  22CC  3183   	fcall	_Display
  1595     03A8                     l1659:
  1596                           
  1597                           ;main.c: 294:         if (i > 199)
  1598     03A8  0020               	movlb	0	; select bank0
  1599     03A9  084C               	movf	main@i+1,w
  1600     03AA  3A80               	xorlw	128
  1601     03AB  00C9               	movwf	??_main
  1602     03AC  3080               	movlw	128
  1603     03AD  0249               	subwf	??_main,w
  1604     03AE  1D03               	skipz
  1605     03AF  2BB2               	goto	u685
  1606     03B0  30C8               	movlw	200
  1607     03B1  024B               	subwf	main@i,w
  1608     03B2                     u685:
  1609     03B2  1C03               	skipc
  1610     03B3  2BB5               	goto	u681
  1611     03B4  2BB6               	goto	u680
  1612     03B5                     u681:
  1613     03B5  2BB9               	goto	l1663
  1614     03B6                     u680:
  1615     03B6                     l1661:
  1616                           
  1617                           ;main.c: 295:         {;main.c: 296:             i = 0;
  1618     03B6  0020               	movlb	0	; select bank0
  1619     03B7  01CB               	clrf	main@i
  1620     03B8  01CC               	clrf	main@i+1
  1621     03B9                     l1663:
  1622                           
  1623                           ;main.c: 298:         _delay((unsigned long)((500)*(16000000/4000.0)));
  1624     03B9  300B               	movlw	11
  1625     03BA  0020               	movlb	0	; select bank0
  1626     03BB  00CA               	movwf	??_main+1
  1627     03BC  3026               	movlw	38
  1628     03BD  00C9               	movwf	??_main
  1629     03BE  305D               	movlw	93
  1630     03BF                     u697:
  1631     03BF  0B89               	decfsz	9,f
  1632     03C0  2BBF               	goto	u697
  1633     03C1  0BC9               	decfsz	??_main,f
  1634     03C2  2BBF               	goto	u697
  1635     03C3  0BCA               	decfsz	??_main+1,f
  1636     03C4  2BBF               	goto	u697
  1637     03C5  3200               	nop2
  1638     03C6  2BA0               	goto	l1657
  1639     03C7  3180  2819         	ljmp	start
  1640     03C9                     __end_of_main:
  1641                           
  1642                           	psect	text1
  1643     0449                     __ptext1:	
  1644 ;; *************** function _SYSTEM_Initialize *****************
  1645 ;; Defined at:
  1646 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0, pclath, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1660 ;;      Params:         0       0       0       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0
  1663 ;;      Totals:         0       0       0       0       0       0       0
  1664 ;;Total ram usage:        0 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 5
  1667 ;; This function calls:
  1668 ;;		_CLOCK_Initialize
  1669 ;;		_INTERRUPT_Initialize
  1670 ;;		_PIN_MANAGER_Initialize
  1671 ;;		_TMR1_Initialize
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677     0449                     _SYSTEM_Initialize:	
  1678                           ;psect for function _SYSTEM_Initialize
  1679                           
  1680     0449                     l1507:	
  1681                           ;incstack = 0
  1682                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1683                           
  1684                           
  1685                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  1686     0449  3184  247F  3184   	fcall	_CLOCK_Initialize
  1687                           
  1688                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  1689     044C  3183  23EC  3184   	fcall	_PIN_MANAGER_Initialize
  1690                           
  1691                           ;mcc_generated_files/system/src/system.c: 43:     TMR1_Initialize();
  1692     044F  3184  2409  3184   	fcall	_TMR1_Initialize
  1693                           
  1694                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  1695     0452  3184  2462  3184   	fcall	_INTERRUPT_Initialize
  1696     0455                     l117:
  1697     0455  0008               	return
  1698     0456                     __end_of_SYSTEM_Initialize:
  1699                           
  1700                           	psect	text2
  1701     0409                     __ptext2:	
  1702 ;; *************** function _TMR1_Initialize *****************
  1703 ;; Defined at:
  1704 ;;		line 57 in file "mcc_generated_files/timer/src/tmr1.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1718 ;;      Params:         0       0       0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0
  1721 ;;      Totals:         0       0       0       0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 4
  1725 ;; This function calls:
  1726 ;;		_TMR1_OverflowCallbackRegister
  1727 ;; This function is called by:
  1728 ;;		_SYSTEM_Initialize
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732     0409                     _TMR1_Initialize:	
  1733                           ;psect for function _TMR1_Initialize
  1734                           
  1735     0409                     l1369:	
  1736                           ;incstack = 0
  1737                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1738                           
  1739                           
  1740                           ;mcc_generated_files/timer/src/tmr1.c: 60:     T1GCON = 0x0;
  1741     0409  0020               	movlb	0	; select bank0
  1742     040A  0199               	clrf	25	;volatile
  1743     040B                     l1371:
  1744                           
  1745                           ;mcc_generated_files/timer/src/tmr1.c: 62:     TMR1H = 0xEC;
  1746     040B  30EC               	movlw	236
  1747     040C  0097               	movwf	23	;volatile
  1748     040D                     l1373:
  1749                           
  1750                           ;mcc_generated_files/timer/src/tmr1.c: 64:     TMR1L = 0x77;
  1751     040D  3077               	movlw	119
  1752     040E  0096               	movwf	22	;volatile
  1753     040F                     l1375:
  1754                           
  1755                           ;mcc_generated_files/timer/src/tmr1.c: 67:     timer1ReloadVal=((uint16_t)TMR1H << 8) | 
      +                          TMR1L;
  1756     040F  0817               	movf	23,w	;volatile
  1757     0410  00D0               	movwf	_timer1ReloadVal+1	;volatile
  1758     0411  0816               	movf	22,w	;volatile
  1759     0412  00CF               	movwf	_timer1ReloadVal	;volatile
  1760     0413                     l1377:
  1761                           
  1762                           ;mcc_generated_files/timer/src/tmr1.c: 70:     TMR1_OverflowCallbackRegister(TMR1_Defaul
      +                          tOverflowCallback);
  1763     0413  3085               	movlw	low _TMR1_DefaultOverflowCallback
  1764     0414  00F2               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler
  1765     0415  3004               	movlw	high _TMR1_DefaultOverflowCallback
  1766     0416  00F3               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler+1
  1767     0417  3184  2473  3184   	fcall	_TMR1_OverflowCallbackRegister
  1768     041A                     l1379:
  1769                           
  1770                           ;mcc_generated_files/timer/src/tmr1.c: 73:      PIR1bits.TMR1IF = 0;
  1771     041A  0020               	movlb	0	; select bank0
  1772     041B  1011               	bcf	17,0	;volatile
  1773     041C                     l1381:
  1774                           
  1775                           ;mcc_generated_files/timer/src/tmr1.c: 75:      PIE1bits.TMR1IE = 1;
  1776     041C  0021               	movlb	1	; select bank1
  1777     041D  1411               	bsf	17,0	;volatile
  1778     041E                     l1383:
  1779                           
  1780                           ;mcc_generated_files/timer/src/tmr1.c: 78:     T1CON = 0x31;
  1781     041E  3031               	movlw	49
  1782     041F  0020               	movlb	0	; select bank0
  1783     0420  0098               	movwf	24	;volatile
  1784     0421                     l199:
  1785     0421  0008               	return
  1786     0422                     __end_of_TMR1_Initialize:
  1787                           
  1788                           	psect	text3
  1789     0473                     __ptext3:	
  1790 ;; *************** function _TMR1_OverflowCallbackRegister *****************
  1791 ;; Defined at:
  1792 ;;		line 163 in file "mcc_generated_files/timer/src/tmr1.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  CallbackHand    2    2[COMMON] PTR FTN()void 
  1795 ;;		 -> TMR1_DefaultOverflowCallback(1), Tmr1CallBack(1), 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		wreg
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1807 ;;      Params:         2       0       0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0
  1810 ;;      Totals:         2       0       0       0       0       0       0
  1811 ;;Total ram usage:        2 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 3
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;;		_TMR1_Initialize
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822     0473                     _TMR1_OverflowCallbackRegister:	
  1823                           ;psect for function _TMR1_OverflowCallbackRegister
  1824                           
  1825     0473                     l1187:	
  1826                           ;incstack = 0
  1827                           ; Regs used in _TMR1_OverflowCallbackRegister: [wreg]
  1828                           
  1829                           
  1830                           ;mcc_generated_files/timer/src/tmr1.c: 163: void TMR1_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 164: {;mcc_generated_files/
      +                          timer/src/tmr1.c: 165:     TMR1_OverflowCallback = CallbackHandler;
  1831     0473  0873               	movf	TMR1_OverflowCallbackRegister@CallbackHandler+1,w
  1832     0474  0020               	movlb	0	; select bank0
  1833     0475  00CE               	movwf	_TMR1_OverflowCallback+1
  1834     0476  0872               	movf	TMR1_OverflowCallbackRegister@CallbackHandler,w
  1835     0477  00CD               	movwf	_TMR1_OverflowCallback
  1836     0478                     l232:
  1837     0478  0008               	return
  1838     0479                     __end_of_TMR1_OverflowCallbackRegister:
  1839                           
  1840                           	psect	text4
  1841     03EC                     __ptext4:	
  1842 ;; *************** function _PIN_MANAGER_Initialize *****************
  1843 ;; Defined at:
  1844 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1858 ;;      Params:         0       0       0       0       0       0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0
  1861 ;;      Totals:         0       0       0       0       0       0       0
  1862 ;;Total ram usage:        0 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 3
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_SYSTEM_Initialize
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872     03EC                     _PIN_MANAGER_Initialize:	
  1873                           ;psect for function _PIN_MANAGER_Initialize
  1874                           
  1875     03EC                     l1339:	
  1876                           ;incstack = 0
  1877                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1878                           
  1879                           
  1880                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  1881     03EC  0022               	movlb	2	; select bank2
  1882     03ED  018C               	clrf	12	;volatile
  1883                           
  1884                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  1885     03EE  018D               	clrf	13	;volatile
  1886                           
  1887                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  1888     03EF  018E               	clrf	14	;volatile
  1889     03F0                     l1341:
  1890                           
  1891                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x9;
  1892     03F0  3009               	movlw	9
  1893     03F1  0021               	movlb	1	; select bank1
  1894     03F2  008C               	movwf	12	;volatile
  1895     03F3                     l1343:
  1896                           
  1897                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x0;
  1898     03F3  018D               	clrf	13	;volatile
  1899     03F4                     l1345:
  1900                           
  1901                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x0;
  1902     03F4  018E               	clrf	14	;volatile
  1903     03F5                     l1347:
  1904                           
  1905                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x0;
  1906     03F5  0023               	movlb	3	; select bank3
  1907     03F6  018C               	clrf	12	;volatile
  1908     03F7                     l1349:
  1909                           
  1910                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x0;
  1911     03F7  018D               	clrf	13	;volatile
  1912     03F8                     l1351:
  1913                           
  1914                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0x0;
  1915     03F8  018E               	clrf	14	;volatile
  1916                           
  1917                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x3F;
  1918     03F9  303F               	movlw	63
  1919     03FA  0024               	movlb	4	; select bank4
  1920     03FB  008C               	movwf	12	;volatile
  1921                           
  1922                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xF0;
  1923     03FC  30F0               	movlw	240
  1924     03FD  008D               	movwf	13	;volatile
  1925     03FE                     l1353:
  1926                           
  1927                           ;mcc_generated_files/system/src/pins.c: 66:     OPTION_REGbits.nWPUEN = 0x0;
  1928     03FE  0021               	movlb	1	; select bank1
  1929     03FF  1395               	bcf	21,7	;volatile
  1930     0400                     l1355:
  1931                           
  1932                           ;mcc_generated_files/system/src/pins.c: 90:     IOCAP = 0x0;
  1933     0400  0027               	movlb	7	; select bank7
  1934     0401  0191               	clrf	17	;volatile
  1935     0402                     l1357:
  1936                           
  1937                           ;mcc_generated_files/system/src/pins.c: 91:     IOCAN = 0x0;
  1938     0402  0192               	clrf	18	;volatile
  1939     0403                     l1359:
  1940                           
  1941                           ;mcc_generated_files/system/src/pins.c: 92:     IOCAF = 0x0;
  1942     0403  0193               	clrf	19	;volatile
  1943     0404                     l1361:
  1944                           
  1945                           ;mcc_generated_files/system/src/pins.c: 93:     IOCBP = 0x0;
  1946     0404  0194               	clrf	20	;volatile
  1947     0405                     l1363:
  1948                           
  1949                           ;mcc_generated_files/system/src/pins.c: 94:     IOCBN = 0x0;
  1950     0405  0195               	clrf	21	;volatile
  1951     0406                     l1365:
  1952                           
  1953                           ;mcc_generated_files/system/src/pins.c: 95:     IOCBF = 0x0;
  1954     0406  0196               	clrf	22	;volatile
  1955     0407                     l1367:
  1956                           
  1957                           ;mcc_generated_files/system/src/pins.c: 99:     INTCONbits.IOCIE = 1;
  1958     0407  158B               	bsf	11,3	;volatile
  1959     0408                     l103:
  1960     0408  0008               	return
  1961     0409                     __end_of_PIN_MANAGER_Initialize:
  1962                           
  1963                           	psect	text5
  1964     0462                     __ptext5:	
  1965 ;; *************** function _INTERRUPT_Initialize *****************
  1966 ;; Defined at:
  1967 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, pclath, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1981 ;;      Params:         0       0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; Hardware stack levels required when called: 4
  1988 ;; This function calls:
  1989 ;;		_INT_SetInterruptHandler
  1990 ;; This function is called by:
  1991 ;;		_SYSTEM_Initialize
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995     0462                     _INTERRUPT_Initialize:	
  1996                           ;psect for function _INTERRUPT_Initialize
  1997                           
  1998     0462                     l1385:	
  1999                           ;incstack = 0
  2000                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2001                           
  2002                           
  2003                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  2004     0462  108B               	bcf	11,1	;volatile
  2005                           
  2006                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  2007     0463  0021               	movlb	1	; select bank1
  2008     0464  1715               	bsf	21,6	;volatile
  2009     0465                     l1387:
  2010                           
  2011                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2012     0465  3000               	movlw	0
  2013     0466  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
  2014     0467  3000               	movlw	0
  2015     0468  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2016     0469  3184  2479  3184   	fcall	_INT_SetInterruptHandler
  2017     046C                     l138:
  2018     046C  0008               	return
  2019     046D                     __end_of_INTERRUPT_Initialize:
  2020                           
  2021                           	psect	text6
  2022     0479                     __ptext6:	
  2023 ;; *************** function _INT_SetInterruptHandler *****************
  2024 ;; Defined at:
  2025 ;;		line 97 in file "mcc_generated_files/system/src/interrupt.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2028 ;;		 -> INT_DefaultInterruptHandler(1), 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2040 ;;      Params:         2       0       0       0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0       0       0
  2043 ;;      Totals:         2       0       0       0       0       0       0
  2044 ;;Total ram usage:        2 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 3
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_INTERRUPT_Initialize
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054     0479                     _INT_SetInterruptHandler:	
  2055                           ;psect for function _INT_SetInterruptHandler
  2056                           
  2057     0479                     l1189:	
  2058                           ;incstack = 0
  2059                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2060                           
  2061                           
  2062                           ;mcc_generated_files/system/src/interrupt.c: 98:     INT_InterruptHandler = InterruptHan
      +                          dler;
  2063     0479  0873               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2064     047A  0020               	movlb	0	; select bank0
  2065     047B  00D2               	movwf	_INT_InterruptHandler+1
  2066     047C  0872               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2067     047D  00D1               	movwf	_INT_InterruptHandler
  2068     047E                     l157:
  2069     047E  0008               	return
  2070     047F                     __end_of_INT_SetInterruptHandler:
  2071                           
  2072                           	psect	text7
  2073     047F                     __ptext7:	
  2074 ;; *************** function _CLOCK_Initialize *****************
  2075 ;; Defined at:
  2076 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2090 ;;      Params:         0       0       0       0       0       0       0
  2091 ;;      Locals:         0       0       0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0
  2093 ;;      Totals:         0       0       0       0       0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 3
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_SYSTEM_Initialize
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104     047F                     _CLOCK_Initialize:	
  2105                           ;psect for function _CLOCK_Initialize
  2106                           
  2107     047F                     l1191:	
  2108                           ;incstack = 0
  2109                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  2110                           
  2111                           
  2112                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  2113     047F  3078               	movlw	120
  2114     0480  0021               	movlb	1	; select bank1
  2115     0481  0099               	movwf	25	;volatile
  2116     0482                     l1193:
  2117                           
  2118                           ;mcc_generated_files/system/src/clock.c: 43:     BORCON = (0 << 0x7)
  2119     0482  0022               	movlb	2	; select bank2
  2120     0483  0196               	clrf	22	;volatile
  2121     0484                     l7:
  2122     0484  0008               	return
  2123     0485                     __end_of_CLOCK_Initialize:
  2124                           
  2125                           	psect	text8
  2126     02CC                     __ptext8:	
  2127 ;; *************** function _Display *****************
  2128 ;; Defined at:
  2129 ;;		line 221 in file "main.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  a               2    7[BANK0 ] int 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  hundreds        2   16[BANK0 ] int 
  2134 ;;  tens            2   14[BANK0 ] int 
  2135 ;;  ones            2   12[BANK0 ] int 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2145 ;;      Params:         0       2       0       0       0       0       0
  2146 ;;      Locals:         0       6       0       0       0       0       0
  2147 ;;      Temps:          0       3       0       0       0       0       0
  2148 ;;      Totals:         0      11       0       0       0       0       0
  2149 ;;Total ram usage:       11 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 4
  2152 ;; This function calls:
  2153 ;;		_SetSegments
  2154 ;;		___awdiv
  2155 ;;		___awmod
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161     02CC                     _Display:	
  2162                           ;psect for function _Display
  2163                           
  2164     02CC                     l1625:	
  2165                           ;incstack = 0
  2166                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2167                           
  2168                           
  2169                           ;main.c: 221: void Display(int a);main.c: 222: {;main.c: 223:     int ones = a % 10;
  2170     02CC  300A               	movlw	10
  2171     02CD  0020               	movlb	0	; select bank0
  2172     02CE  00B7               	movwf	___awmod@divisor
  2173     02CF  3000               	movlw	0
  2174     02D0  00B8               	movwf	___awmod@divisor+1
  2175     02D1  083F               	movf	Display@a+1,w
  2176     02D2  00BA               	movwf	___awmod@dividend+1
  2177     02D3  083E               	movf	Display@a,w
  2178     02D4  00B9               	movwf	___awmod@dividend
  2179     02D5  3183  232A  3182   	fcall	___awmod
  2180     02D8  0020               	movlb	0	; select bank0
  2181     02D9  0838               	movf	?___awmod+1,w
  2182     02DA  00C4               	movwf	Display@ones+1
  2183     02DB  0837               	movf	?___awmod,w
  2184     02DC  00C3               	movwf	Display@ones
  2185                           
  2186                           ;main.c: 224:     int tens = (a/10) % 10;
  2187     02DD  300A               	movlw	10
  2188     02DE  00B7               	movwf	___awmod@divisor
  2189     02DF  3000               	movlw	0
  2190     02E0  00B8               	movwf	___awmod@divisor+1
  2191     02E1  300A               	movlw	10
  2192     02E2  00F2               	movwf	___awdiv@divisor
  2193     02E3  3000               	movlw	0
  2194     02E4  00F3               	movwf	___awdiv@divisor+1
  2195     02E5  083F               	movf	Display@a+1,w
  2196     02E6  00F5               	movwf	___awdiv@dividend+1
  2197     02E7  083E               	movf	Display@a,w
  2198     02E8  00F4               	movwf	___awdiv@dividend
  2199     02E9  3182  226D  3182   	fcall	___awdiv
  2200     02EC  0873               	movf	?___awdiv+1,w
  2201     02ED  0020               	movlb	0	; select bank0
  2202     02EE  00BA               	movwf	___awmod@dividend+1
  2203     02EF  0872               	movf	?___awdiv,w
  2204     02F0  00B9               	movwf	___awmod@dividend
  2205     02F1  3183  232A  3182   	fcall	___awmod
  2206     02F4  0020               	movlb	0	; select bank0
  2207     02F5  0838               	movf	?___awmod+1,w
  2208     02F6  00C6               	movwf	Display@tens+1
  2209     02F7  0837               	movf	?___awmod,w
  2210     02F8  00C5               	movwf	Display@tens
  2211     02F9                     l1627:
  2212                           
  2213                           ;main.c: 225:     int hundreds = a > 99;
  2214     02F9  083F               	movf	Display@a+1,w
  2215     02FA  3A80               	xorlw	128
  2216     02FB  00C0               	movwf	??_Display
  2217     02FC  3080               	movlw	128
  2218     02FD  0240               	subwf	??_Display,w
  2219     02FE  1D03               	skipz
  2220     02FF  2B02               	goto	u665
  2221     0300  3064               	movlw	100
  2222     0301  023E               	subwf	Display@a,w
  2223     0302                     u665:
  2224     0302  1803               	skipnc
  2225     0303  2B05               	goto	u661
  2226     0304  2B07               	goto	u660
  2227     0305                     u661:
  2228     0305  3001               	movlw	1
  2229     0306  2B08               	goto	u670
  2230     0307                     u660:
  2231     0307  3000               	movlw	0
  2232     0308                     u670:
  2233     0308  0020               	movlb	0	; select bank0
  2234     0309  00C1               	movwf	??_Display+1
  2235     030A  01C2               	clrf	??_Display+2
  2236     030B  0841               	movf	??_Display+1,w
  2237     030C  00C7               	movwf	Display@hundreds
  2238     030D  0842               	movf	??_Display+2,w
  2239     030E  00C8               	movwf	Display@hundreds+1
  2240     030F                     l1629:
  2241                           
  2242                           ;main.c: 227:     SetSegments(&one, ones);
  2243     030F  0844               	movf	Display@ones+1,w
  2244     0310  00F3               	movwf	SetSegments@a+1
  2245     0311  0843               	movf	Display@ones,w
  2246     0312  00F2               	movwf	SetSegments@a
  2247     0313  3030               	movlw	(low (_one| 0))& (0+255)
  2248     0314  3180  2028  3182   	fcall	_SetSegments
  2249     0317                     l1631:
  2250                           
  2251                           ;main.c: 228:     SetSegments(&ten, tens);
  2252     0317  0020               	movlb	0	; select bank0
  2253     0318  0846               	movf	Display@tens+1,w
  2254     0319  00F3               	movwf	SetSegments@a+1
  2255     031A  0845               	movf	Display@tens,w
  2256     031B  00F2               	movwf	SetSegments@a
  2257     031C  3029               	movlw	(low (_ten| 0))& (0+255)
  2258     031D  3180  2028  3182   	fcall	_SetSegments
  2259     0320                     l1633:
  2260                           
  2261                           ;main.c: 229:     SetSegments(&hundred, hundreds);
  2262     0320  0020               	movlb	0	; select bank0
  2263     0321  0848               	movf	Display@hundreds+1,w
  2264     0322  00F3               	movwf	SetSegments@a+1
  2265     0323  0847               	movf	Display@hundreds,w
  2266     0324  00F2               	movwf	SetSegments@a
  2267     0325  3022               	movlw	(low (_hundred| 0))& (0+255)
  2268     0326  3180  2028  3182   	fcall	_SetSegments
  2269     0329                     l53:
  2270     0329  0008               	return
  2271     032A                     __end_of_Display:
  2272                           
  2273                           	psect	text9
  2274     032A                     __ptext9:	
  2275 ;; *************** function ___awmod *****************
  2276 ;; Defined at:
  2277 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  divisor         2    0[BANK0 ] int 
  2280 ;;  dividend        2    2[BANK0 ] int 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  sign            1    6[BANK0 ] unsigned char 
  2283 ;;  counter         1    5[BANK0 ] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  2    0[BANK0 ] int 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2293 ;;      Params:         0       4       0       0       0       0       0
  2294 ;;      Locals:         0       2       0       0       0       0       0
  2295 ;;      Temps:          0       1       0       0       0       0       0
  2296 ;;      Totals:         0       7       0       0       0       0       0
  2297 ;;Total ram usage:        7 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 3
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_Display
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307     032A                     ___awmod:	
  2308                           ;psect for function ___awmod
  2309                           
  2310     032A                     l1587:	
  2311                           ;incstack = 0
  2312                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2313                           
  2314     032A  0020               	movlb	0	; select bank0
  2315     032B  01BD               	clrf	___awmod@sign
  2316     032C                     l1589:
  2317     032C  1FBA               	btfss	___awmod@dividend+1,7
  2318     032D  2B2F               	goto	u571
  2319     032E  2B30               	goto	u570
  2320     032F                     u571:
  2321     032F  2B37               	goto	l1595
  2322     0330                     u570:
  2323     0330                     l1591:
  2324     0330  09B9               	comf	___awmod@dividend,f
  2325     0331  09BA               	comf	___awmod@dividend+1,f
  2326     0332  0AB9               	incf	___awmod@dividend,f
  2327     0333  1903               	skipnz
  2328     0334  0ABA               	incf	___awmod@dividend+1,f
  2329     0335                     l1593:
  2330     0335  01BD               	clrf	___awmod@sign
  2331     0336  0ABD               	incf	___awmod@sign,f
  2332     0337                     l1595:
  2333     0337  1FB8               	btfss	___awmod@divisor+1,7
  2334     0338  2B3A               	goto	u581
  2335     0339  2B3B               	goto	u580
  2336     033A                     u581:
  2337     033A  2B40               	goto	l1599
  2338     033B                     u580:
  2339     033B                     l1597:
  2340     033B  09B7               	comf	___awmod@divisor,f
  2341     033C  09B8               	comf	___awmod@divisor+1,f
  2342     033D  0AB7               	incf	___awmod@divisor,f
  2343     033E  1903               	skipnz
  2344     033F  0AB8               	incf	___awmod@divisor+1,f
  2345     0340                     l1599:
  2346     0340  0837               	movf	___awmod@divisor,w
  2347     0341  0438               	iorwf	___awmod@divisor+1,w
  2348     0342  1903               	btfsc	3,2
  2349     0343  2B45               	goto	u591
  2350     0344  2B46               	goto	u590
  2351     0345                     u591:
  2352     0345  2B6F               	goto	l1617
  2353     0346                     u590:
  2354     0346                     l1601:
  2355     0346  01BC               	clrf	___awmod@counter
  2356     0347  0ABC               	incf	___awmod@counter,f
  2357     0348  2B52               	goto	l1607
  2358     0349                     l1603:
  2359     0349  3001               	movlw	1
  2360     034A                     u605:
  2361     034A  35B7               	lslf	___awmod@divisor,f
  2362     034B  0DB8               	rlf	___awmod@divisor+1,f
  2363     034C  0B89               	decfsz	9,f
  2364     034D  2B4A               	goto	u605
  2365     034E                     l1605:
  2366     034E  3001               	movlw	1
  2367     034F  00BB               	movwf	??___awmod
  2368     0350  083B               	movf	??___awmod,w
  2369     0351  07BC               	addwf	___awmod@counter,f
  2370     0352                     l1607:
  2371     0352  1FB8               	btfss	___awmod@divisor+1,7
  2372     0353  2B55               	goto	u611
  2373     0354  2B56               	goto	u610
  2374     0355                     u611:
  2375     0355  2B49               	goto	l1603
  2376     0356                     u610:
  2377     0356                     l1609:
  2378     0356  0838               	movf	___awmod@divisor+1,w
  2379     0357  023A               	subwf	___awmod@dividend+1,w
  2380     0358  1D03               	skipz
  2381     0359  2B5C               	goto	u625
  2382     035A  0837               	movf	___awmod@divisor,w
  2383     035B  0239               	subwf	___awmod@dividend,w
  2384     035C                     u625:
  2385     035C  1C03               	skipc
  2386     035D  2B5F               	goto	u621
  2387     035E  2B60               	goto	u620
  2388     035F                     u621:
  2389     035F  2B64               	goto	l1613
  2390     0360                     u620:
  2391     0360                     l1611:
  2392     0360  0837               	movf	___awmod@divisor,w
  2393     0361  02B9               	subwf	___awmod@dividend,f
  2394     0362  0838               	movf	___awmod@divisor+1,w
  2395     0363  3BBA               	subwfb	___awmod@dividend+1,f
  2396     0364                     l1613:
  2397     0364  3001               	movlw	1
  2398     0365                     u635:
  2399     0365  36B8               	lsrf	___awmod@divisor+1,f
  2400     0366  0CB7               	rrf	___awmod@divisor,f
  2401     0367  0B89               	decfsz	9,f
  2402     0368  2B65               	goto	u635
  2403     0369                     l1615:
  2404     0369  3001               	movlw	1
  2405     036A  02BC               	subwf	___awmod@counter,f
  2406     036B  1D03               	btfss	3,2
  2407     036C  2B6E               	goto	u641
  2408     036D  2B6F               	goto	u640
  2409     036E                     u641:
  2410     036E  2B56               	goto	l1609
  2411     036F                     u640:
  2412     036F                     l1617:
  2413     036F  083D               	movf	___awmod@sign,w
  2414     0370  1903               	btfsc	3,2
  2415     0371  2B73               	goto	u651
  2416     0372  2B74               	goto	u650
  2417     0373                     u651:
  2418     0373  2B79               	goto	l1621
  2419     0374                     u650:
  2420     0374                     l1619:
  2421     0374  09B9               	comf	___awmod@dividend,f
  2422     0375  09BA               	comf	___awmod@dividend+1,f
  2423     0376  0AB9               	incf	___awmod@dividend,f
  2424     0377  1903               	skipnz
  2425     0378  0ABA               	incf	___awmod@dividend+1,f
  2426     0379                     l1621:
  2427     0379  083A               	movf	___awmod@dividend+1,w
  2428     037A  00B8               	movwf	?___awmod+1
  2429     037B  0839               	movf	___awmod@dividend,w
  2430     037C  00B7               	movwf	?___awmod
  2431     037D                     l475:
  2432     037D  0008               	return
  2433     037E                     __end_of___awmod:
  2434                           
  2435                           	psect	text10
  2436     026D                     __ptext10:	
  2437 ;; *************** function ___awdiv *****************
  2438 ;; Defined at:
  2439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  divisor         2    2[COMMON] int 
  2442 ;;  dividend        2    4[COMMON] int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  quotient        2    9[COMMON] int 
  2445 ;;  sign            1    8[COMMON] unsigned char 
  2446 ;;  counter         1    7[COMMON] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  2    2[COMMON] int 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2456 ;;      Params:         4       0       0       0       0       0       0
  2457 ;;      Locals:         4       0       0       0       0       0       0
  2458 ;;      Temps:          1       0       0       0       0       0       0
  2459 ;;      Totals:         9       0       0       0       0       0       0
  2460 ;;Total ram usage:        9 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 3
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_Display
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470     026D                     ___awdiv:	
  2471                           ;psect for function ___awdiv
  2472                           
  2473     026D                     l1403:	
  2474                           ;incstack = 0
  2475                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2476                           
  2477     026D  01F8               	clrf	___awdiv@sign
  2478     026E                     l1405:
  2479     026E  1FF3               	btfss	___awdiv@divisor+1,7
  2480     026F  2A71               	goto	u301
  2481     0270  2A72               	goto	u300
  2482     0271                     u301:
  2483     0271  2A79               	goto	l1411
  2484     0272                     u300:
  2485     0272                     l1407:
  2486     0272  09F2               	comf	___awdiv@divisor,f
  2487     0273  09F3               	comf	___awdiv@divisor+1,f
  2488     0274  0AF2               	incf	___awdiv@divisor,f
  2489     0275  1903               	skipnz
  2490     0276  0AF3               	incf	___awdiv@divisor+1,f
  2491     0277                     l1409:
  2492     0277  01F8               	clrf	___awdiv@sign
  2493     0278  0AF8               	incf	___awdiv@sign,f
  2494     0279                     l1411:
  2495     0279  1FF5               	btfss	___awdiv@dividend+1,7
  2496     027A  2A7C               	goto	u311
  2497     027B  2A7D               	goto	u310
  2498     027C                     u311:
  2499     027C  2A86               	goto	l1417
  2500     027D                     u310:
  2501     027D                     l1413:
  2502     027D  09F4               	comf	___awdiv@dividend,f
  2503     027E  09F5               	comf	___awdiv@dividend+1,f
  2504     027F  0AF4               	incf	___awdiv@dividend,f
  2505     0280  1903               	skipnz
  2506     0281  0AF5               	incf	___awdiv@dividend+1,f
  2507     0282                     l1415:
  2508     0282  3001               	movlw	1
  2509     0283  00F6               	movwf	??___awdiv
  2510     0284  0876               	movf	??___awdiv,w
  2511     0285  06F8               	xorwf	___awdiv@sign,f
  2512     0286                     l1417:
  2513     0286  01F9               	clrf	___awdiv@quotient
  2514     0287  01FA               	clrf	___awdiv@quotient+1
  2515     0288                     l1419:
  2516     0288  0872               	movf	___awdiv@divisor,w
  2517     0289  0473               	iorwf	___awdiv@divisor+1,w
  2518     028A  1903               	btfsc	3,2
  2519     028B  2A8D               	goto	u321
  2520     028C  2A8E               	goto	u320
  2521     028D                     u321:
  2522     028D  2ABD               	goto	l1439
  2523     028E                     u320:
  2524     028E                     l1421:
  2525     028E  01F7               	clrf	___awdiv@counter
  2526     028F  0AF7               	incf	___awdiv@counter,f
  2527     0290  2A9A               	goto	l1427
  2528     0291                     l1423:
  2529     0291  3001               	movlw	1
  2530     0292                     u335:
  2531     0292  35F2               	lslf	___awdiv@divisor,f
  2532     0293  0DF3               	rlf	___awdiv@divisor+1,f
  2533     0294  0B89               	decfsz	9,f
  2534     0295  2A92               	goto	u335
  2535     0296                     l1425:
  2536     0296  3001               	movlw	1
  2537     0297  00F6               	movwf	??___awdiv
  2538     0298  0876               	movf	??___awdiv,w
  2539     0299  07F7               	addwf	___awdiv@counter,f
  2540     029A                     l1427:
  2541     029A  1FF3               	btfss	___awdiv@divisor+1,7
  2542     029B  2A9D               	goto	u341
  2543     029C  2A9E               	goto	u340
  2544     029D                     u341:
  2545     029D  2A91               	goto	l1423
  2546     029E                     u340:
  2547     029E                     l1429:
  2548     029E  3001               	movlw	1
  2549     029F                     u355:
  2550     029F  35F9               	lslf	___awdiv@quotient,f
  2551     02A0  0DFA               	rlf	___awdiv@quotient+1,f
  2552     02A1  0B89               	decfsz	9,f
  2553     02A2  2A9F               	goto	u355
  2554     02A3  0873               	movf	___awdiv@divisor+1,w
  2555     02A4  0275               	subwf	___awdiv@dividend+1,w
  2556     02A5  1D03               	skipz
  2557     02A6  2AA9               	goto	u365
  2558     02A7  0872               	movf	___awdiv@divisor,w
  2559     02A8  0274               	subwf	___awdiv@dividend,w
  2560     02A9                     u365:
  2561     02A9  1C03               	skipc
  2562     02AA  2AAC               	goto	u361
  2563     02AB  2AAD               	goto	u360
  2564     02AC                     u361:
  2565     02AC  2AB2               	goto	l1435
  2566     02AD                     u360:
  2567     02AD                     l1431:
  2568     02AD  0872               	movf	___awdiv@divisor,w
  2569     02AE  02F4               	subwf	___awdiv@dividend,f
  2570     02AF  0873               	movf	___awdiv@divisor+1,w
  2571     02B0  3BF5               	subwfb	___awdiv@dividend+1,f
  2572     02B1                     l1433:
  2573     02B1  1479               	bsf	___awdiv@quotient,0
  2574     02B2                     l1435:
  2575     02B2  3001               	movlw	1
  2576     02B3                     u375:
  2577     02B3  36F3               	lsrf	___awdiv@divisor+1,f
  2578     02B4  0CF2               	rrf	___awdiv@divisor,f
  2579     02B5  0B89               	decfsz	9,f
  2580     02B6  2AB3               	goto	u375
  2581     02B7                     l1437:
  2582     02B7  3001               	movlw	1
  2583     02B8  02F7               	subwf	___awdiv@counter,f
  2584     02B9  1D03               	btfss	3,2
  2585     02BA  2ABC               	goto	u381
  2586     02BB  2ABD               	goto	u380
  2587     02BC                     u381:
  2588     02BC  2A9E               	goto	l1429
  2589     02BD                     u380:
  2590     02BD                     l1439:
  2591     02BD  0878               	movf	___awdiv@sign,w
  2592     02BE  1903               	btfsc	3,2
  2593     02BF  2AC1               	goto	u391
  2594     02C0  2AC2               	goto	u390
  2595     02C1                     u391:
  2596     02C1  2AC7               	goto	l1443
  2597     02C2                     u390:
  2598     02C2                     l1441:
  2599     02C2  09F9               	comf	___awdiv@quotient,f
  2600     02C3  09FA               	comf	___awdiv@quotient+1,f
  2601     02C4  0AF9               	incf	___awdiv@quotient,f
  2602     02C5  1903               	skipnz
  2603     02C6  0AFA               	incf	___awdiv@quotient+1,f
  2604     02C7                     l1443:
  2605     02C7  087A               	movf	___awdiv@quotient+1,w
  2606     02C8  00F3               	movwf	?___awdiv+1
  2607     02C9  0879               	movf	___awdiv@quotient,w
  2608     02CA  00F2               	movwf	?___awdiv
  2609     02CB                     l462:
  2610     02CB  0008               	return
  2611     02CC                     __end_of___awdiv:
  2612                           
  2613                           	psect	text11
  2614     0028                     __ptext11:	
  2615 ;; *************** function _SetSegments *****************
  2616 ;; Defined at:
  2617 ;;		line 115 in file "main.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  digit           1    wreg     PTR struct digit
  2620 ;;		 -> hundred(7), one(7), ten(7), 
  2621 ;;  a               2    2[COMMON] int 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  digit           1    4[COMMON] PTR struct digit
  2624 ;;		 -> hundred(7), one(7), ten(7), 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2634 ;;      Params:         2       0       0       0       0       0       0
  2635 ;;      Locals:         1       0       0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0
  2637 ;;      Totals:         3       0       0       0       0       0       0
  2638 ;;Total ram usage:        3 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 3
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_Display
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648     0028                     _SetSegments:	
  2649                           ;psect for function _SetSegments
  2650                           
  2651                           
  2652                           ;incstack = 0
  2653                           ; Regs used in _SetSegments: [wreg-fsr1h+status,2+status,0]
  2654                           ;SetSegments@digit stored from wreg
  2655     0028  00F4               	movwf	SetSegments@digit
  2656     0029                     l1201:
  2657                           
  2658                           ;main.c: 115: void SetSegments(Digit* digit, int a);main.c: 116: {;main.c: 117:     swit
      +                          ch (a)
  2659     0029  29AF               	goto	l1333
  2660     002A                     l1203:
  2661                           
  2662                           ;main.c: 120:             digit->a = 1;
  2663     002A  0874               	movf	SetSegments@digit,w
  2664     002B  0086               	movwf	6
  2665     002C  0187               	clrf	7
  2666     002D  0181               	clrf	1
  2667     002E  0A81               	incf	1,f
  2668                           
  2669                           ;main.c: 121:             digit->b = 1;
  2670     002F  0A74               	incf	SetSegments@digit,w
  2671     0030  0086               	movwf	6
  2672     0031  0187               	clrf	7
  2673     0032  0181               	clrf	1
  2674     0033  0A81               	incf	1,f
  2675     0034                     l1205:
  2676                           
  2677                           ;main.c: 122:             digit->c = 1;
  2678     0034  0874               	movf	SetSegments@digit,w
  2679     0035  3E02               	addlw	2
  2680     0036  0086               	movwf	6
  2681     0037  0187               	clrf	7
  2682     0038  0181               	clrf	1
  2683     0039  0A81               	incf	1,f
  2684     003A                     l1207:
  2685                           
  2686                           ;main.c: 123:             digit->d = 1;
  2687     003A  0874               	movf	SetSegments@digit,w
  2688     003B  3E03               	addlw	3
  2689     003C  0086               	movwf	6
  2690     003D  0187               	clrf	7
  2691     003E  0181               	clrf	1
  2692     003F  0A81               	incf	1,f
  2693     0040                     l1209:
  2694                           
  2695                           ;main.c: 124:             digit->e = 1;
  2696     0040  0874               	movf	SetSegments@digit,w
  2697     0041  3E04               	addlw	4
  2698     0042  0086               	movwf	6
  2699     0043  0187               	clrf	7
  2700     0044  0181               	clrf	1
  2701     0045  0A81               	incf	1,f
  2702     0046                     l1211:
  2703                           
  2704                           ;main.c: 125:             digit->f = 1;
  2705     0046  0874               	movf	SetSegments@digit,w
  2706     0047  3E05               	addlw	5
  2707     0048  0086               	movwf	6
  2708     0049  0187               	clrf	7
  2709     004A  0181               	clrf	1
  2710     004B  0A81               	incf	1,f
  2711     004C                     l1213:
  2712                           
  2713                           ;main.c: 126:             digit->g = 0;
  2714     004C  0874               	movf	SetSegments@digit,w
  2715     004D  3E06               	addlw	6
  2716     004E  0086               	movwf	6
  2717     004F  0187               	clrf	7
  2718     0050  0181               	clrf	1
  2719                           
  2720                           ;main.c: 127:             break;
  2721     0051  29D4               	goto	l50
  2722     0052                     l1215:
  2723                           
  2724                           ;main.c: 130:             digit->a = 0;
  2725     0052  0874               	movf	SetSegments@digit,w
  2726     0053  0086               	movwf	6
  2727     0054  0187               	clrf	7
  2728     0055  0181               	clrf	1
  2729     0056                     l1217:
  2730                           
  2731                           ;main.c: 131:             digit->b = 1;
  2732     0056  0A74               	incf	SetSegments@digit,w
  2733     0057  0086               	movwf	6
  2734     0058  0187               	clrf	7
  2735     0059  0181               	clrf	1
  2736     005A  0A81               	incf	1,f
  2737     005B                     l1219:
  2738                           
  2739                           ;main.c: 132:             digit->c = 1;
  2740     005B  0874               	movf	SetSegments@digit,w
  2741     005C  3E02               	addlw	2
  2742     005D  0086               	movwf	6
  2743     005E  0187               	clrf	7
  2744     005F  0181               	clrf	1
  2745     0060  0A81               	incf	1,f
  2746     0061                     l1221:
  2747                           
  2748                           ;main.c: 133:             digit->d = 0;
  2749     0061  0874               	movf	SetSegments@digit,w
  2750     0062  3E03               	addlw	3
  2751     0063  0086               	movwf	6
  2752     0064  0187               	clrf	7
  2753     0065  0181               	clrf	1
  2754     0066                     l1223:
  2755                           
  2756                           ;main.c: 134:             digit->e = 0;
  2757     0066  0874               	movf	SetSegments@digit,w
  2758     0067  3E04               	addlw	4
  2759     0068  0086               	movwf	6
  2760     0069  0187               	clrf	7
  2761     006A  0181               	clrf	1
  2762     006B                     l1225:
  2763                           
  2764                           ;main.c: 135:             digit->f = 0;
  2765     006B  0874               	movf	SetSegments@digit,w
  2766     006C  3E05               	addlw	5
  2767     006D  0086               	movwf	6
  2768     006E  0187               	clrf	7
  2769     006F  0181               	clrf	1
  2770     0070                     l1227:
  2771                           
  2772                           ;main.c: 136:             digit->g = 0;
  2773     0070  0874               	movf	SetSegments@digit,w
  2774     0071  3E06               	addlw	6
  2775     0072  0086               	movwf	6
  2776     0073  0187               	clrf	7
  2777     0074  0181               	clrf	1
  2778                           
  2779                           ;main.c: 137:             break;
  2780     0075  29D4               	goto	l50
  2781     0076                     l1229:
  2782                           
  2783                           ;main.c: 140:             digit->a = 1;
  2784     0076  0874               	movf	SetSegments@digit,w
  2785     0077  0086               	movwf	6
  2786     0078  0187               	clrf	7
  2787     0079  0181               	clrf	1
  2788     007A  0A81               	incf	1,f
  2789                           
  2790                           ;main.c: 141:             digit->b = 1;
  2791     007B  0A74               	incf	SetSegments@digit,w
  2792     007C  0086               	movwf	6
  2793     007D  0187               	clrf	7
  2794     007E  0181               	clrf	1
  2795     007F  0A81               	incf	1,f
  2796     0080                     l1231:
  2797                           
  2798                           ;main.c: 142:             digit->c = 0;
  2799     0080  0874               	movf	SetSegments@digit,w
  2800     0081  3E02               	addlw	2
  2801     0082  0086               	movwf	6
  2802     0083  0187               	clrf	7
  2803     0084  0181               	clrf	1
  2804     0085                     l1233:
  2805                           
  2806                           ;main.c: 143:             digit->d = 1;
  2807     0085  0874               	movf	SetSegments@digit,w
  2808     0086  3E03               	addlw	3
  2809     0087  0086               	movwf	6
  2810     0088  0187               	clrf	7
  2811     0089  0181               	clrf	1
  2812     008A  0A81               	incf	1,f
  2813     008B                     l1235:
  2814                           
  2815                           ;main.c: 144:             digit->e = 1;
  2816     008B  0874               	movf	SetSegments@digit,w
  2817     008C  3E04               	addlw	4
  2818     008D  0086               	movwf	6
  2819     008E  0187               	clrf	7
  2820     008F  0181               	clrf	1
  2821     0090  0A81               	incf	1,f
  2822     0091                     l1237:
  2823                           
  2824                           ;main.c: 145:             digit->f = 0;
  2825     0091  0874               	movf	SetSegments@digit,w
  2826     0092  3E05               	addlw	5
  2827     0093  0086               	movwf	6
  2828     0094  0187               	clrf	7
  2829     0095  0181               	clrf	1
  2830     0096                     l1239:
  2831                           
  2832                           ;main.c: 146:             digit->g = 1;
  2833     0096  0874               	movf	SetSegments@digit,w
  2834     0097  3E06               	addlw	6
  2835     0098  0086               	movwf	6
  2836     0099  0187               	clrf	7
  2837     009A  0181               	clrf	1
  2838     009B  0A81               	incf	1,f
  2839                           
  2840                           ;main.c: 147:             break;
  2841     009C  29D4               	goto	l50
  2842     009D                     l1241:
  2843                           
  2844                           ;main.c: 150:             digit->a = 1;
  2845     009D  0874               	movf	SetSegments@digit,w
  2846     009E  0086               	movwf	6
  2847     009F  0187               	clrf	7
  2848     00A0  0181               	clrf	1
  2849     00A1  0A81               	incf	1,f
  2850                           
  2851                           ;main.c: 151:             digit->b = 1;
  2852     00A2  0A74               	incf	SetSegments@digit,w
  2853     00A3  0086               	movwf	6
  2854     00A4  0187               	clrf	7
  2855     00A5  0181               	clrf	1
  2856     00A6  0A81               	incf	1,f
  2857     00A7                     l1243:
  2858                           
  2859                           ;main.c: 152:             digit->c = 1;
  2860     00A7  0874               	movf	SetSegments@digit,w
  2861     00A8  3E02               	addlw	2
  2862     00A9  0086               	movwf	6
  2863     00AA  0187               	clrf	7
  2864     00AB  0181               	clrf	1
  2865     00AC  0A81               	incf	1,f
  2866     00AD                     l1245:
  2867                           
  2868                           ;main.c: 153:             digit->d = 1;
  2869     00AD  0874               	movf	SetSegments@digit,w
  2870     00AE  3E03               	addlw	3
  2871     00AF  0086               	movwf	6
  2872     00B0  0187               	clrf	7
  2873     00B1  0181               	clrf	1
  2874     00B2  0A81               	incf	1,f
  2875     00B3                     l1247:
  2876                           
  2877                           ;main.c: 154:             digit->e = 0;
  2878     00B3  0874               	movf	SetSegments@digit,w
  2879     00B4  3E04               	addlw	4
  2880     00B5  0086               	movwf	6
  2881     00B6  0187               	clrf	7
  2882     00B7  0181               	clrf	1
  2883     00B8                     l1249:
  2884                           
  2885                           ;main.c: 155:             digit->f = 0;
  2886     00B8  0874               	movf	SetSegments@digit,w
  2887     00B9  3E05               	addlw	5
  2888     00BA  0086               	movwf	6
  2889     00BB  0187               	clrf	7
  2890     00BC  0181               	clrf	1
  2891     00BD                     l1251:
  2892                           
  2893                           ;main.c: 156:             digit->g = 1;
  2894     00BD  0874               	movf	SetSegments@digit,w
  2895     00BE  3E06               	addlw	6
  2896     00BF  0086               	movwf	6
  2897     00C0  0187               	clrf	7
  2898     00C1  0181               	clrf	1
  2899     00C2  0A81               	incf	1,f
  2900                           
  2901                           ;main.c: 157:             break;
  2902     00C3  29D4               	goto	l50
  2903     00C4                     l1253:
  2904                           
  2905                           ;main.c: 160:             digit->a = 0;
  2906     00C4  0874               	movf	SetSegments@digit,w
  2907     00C5  0086               	movwf	6
  2908     00C6  0187               	clrf	7
  2909     00C7  0181               	clrf	1
  2910     00C8                     l1255:
  2911                           
  2912                           ;main.c: 161:             digit->b = 1;
  2913     00C8  0A74               	incf	SetSegments@digit,w
  2914     00C9  0086               	movwf	6
  2915     00CA  0187               	clrf	7
  2916     00CB  0181               	clrf	1
  2917     00CC  0A81               	incf	1,f
  2918     00CD                     l1257:
  2919                           
  2920                           ;main.c: 162:             digit->c = 1;
  2921     00CD  0874               	movf	SetSegments@digit,w
  2922     00CE  3E02               	addlw	2
  2923     00CF  0086               	movwf	6
  2924     00D0  0187               	clrf	7
  2925     00D1  0181               	clrf	1
  2926     00D2  0A81               	incf	1,f
  2927     00D3                     l1259:
  2928                           
  2929                           ;main.c: 163:             digit->d = 0;
  2930     00D3  0874               	movf	SetSegments@digit,w
  2931     00D4  3E03               	addlw	3
  2932     00D5  0086               	movwf	6
  2933     00D6  0187               	clrf	7
  2934     00D7  0181               	clrf	1
  2935     00D8                     l1261:
  2936                           
  2937                           ;main.c: 164:             digit->e = 0;
  2938     00D8  0874               	movf	SetSegments@digit,w
  2939     00D9  3E04               	addlw	4
  2940     00DA  0086               	movwf	6
  2941     00DB  0187               	clrf	7
  2942     00DC  0181               	clrf	1
  2943     00DD                     l1263:
  2944                           
  2945                           ;main.c: 165:             digit->f = 1;
  2946     00DD  0874               	movf	SetSegments@digit,w
  2947     00DE  3E05               	addlw	5
  2948     00DF  0086               	movwf	6
  2949     00E0  0187               	clrf	7
  2950     00E1  0181               	clrf	1
  2951     00E2  0A81               	incf	1,f
  2952     00E3                     l1265:
  2953                           
  2954                           ;main.c: 166:             digit->g = 1;
  2955     00E3  0874               	movf	SetSegments@digit,w
  2956     00E4  3E06               	addlw	6
  2957     00E5  0086               	movwf	6
  2958     00E6  0187               	clrf	7
  2959     00E7  0181               	clrf	1
  2960     00E8  0A81               	incf	1,f
  2961                           
  2962                           ;main.c: 167:             break;
  2963     00E9  29D4               	goto	l50
  2964     00EA                     l1267:
  2965                           
  2966                           ;main.c: 170:             digit->a = 1;
  2967     00EA  0874               	movf	SetSegments@digit,w
  2968     00EB  0086               	movwf	6
  2969     00EC  0187               	clrf	7
  2970     00ED  0181               	clrf	1
  2971     00EE  0A81               	incf	1,f
  2972     00EF                     l1269:
  2973                           
  2974                           ;main.c: 171:             digit->b = 0;
  2975     00EF  0A74               	incf	SetSegments@digit,w
  2976     00F0  0086               	movwf	6
  2977     00F1  0187               	clrf	7
  2978     00F2  0181               	clrf	1
  2979     00F3                     l1271:
  2980                           
  2981                           ;main.c: 172:             digit->c = 1;
  2982     00F3  0874               	movf	SetSegments@digit,w
  2983     00F4  3E02               	addlw	2
  2984     00F5  0086               	movwf	6
  2985     00F6  0187               	clrf	7
  2986     00F7  0181               	clrf	1
  2987     00F8  0A81               	incf	1,f
  2988     00F9                     l1273:
  2989                           
  2990                           ;main.c: 173:             digit->d = 1;
  2991     00F9  0874               	movf	SetSegments@digit,w
  2992     00FA  3E03               	addlw	3
  2993     00FB  0086               	movwf	6
  2994     00FC  0187               	clrf	7
  2995     00FD  0181               	clrf	1
  2996     00FE  0A81               	incf	1,f
  2997     00FF                     l1275:
  2998                           
  2999                           ;main.c: 174:             digit->e = 0;
  3000     00FF  0874               	movf	SetSegments@digit,w
  3001     0100  3E04               	addlw	4
  3002     0101  0086               	movwf	6
  3003     0102  0187               	clrf	7
  3004     0103  0181               	clrf	1
  3005     0104                     l1277:
  3006                           
  3007                           ;main.c: 175:             digit->f = 1;
  3008     0104  0874               	movf	SetSegments@digit,w
  3009     0105  3E05               	addlw	5
  3010     0106  0086               	movwf	6
  3011     0107  0187               	clrf	7
  3012     0108  0181               	clrf	1
  3013     0109  0A81               	incf	1,f
  3014     010A                     l1279:
  3015                           
  3016                           ;main.c: 176:             digit->g = 1;
  3017     010A  0874               	movf	SetSegments@digit,w
  3018     010B  3E06               	addlw	6
  3019     010C  0086               	movwf	6
  3020     010D  0187               	clrf	7
  3021     010E  0181               	clrf	1
  3022     010F  0A81               	incf	1,f
  3023                           
  3024                           ;main.c: 177:             break;
  3025     0110  29D4               	goto	l50
  3026     0111                     l1281:
  3027                           
  3028                           ;main.c: 180:             digit->a = 1;
  3029     0111  0874               	movf	SetSegments@digit,w
  3030     0112  0086               	movwf	6
  3031     0113  0187               	clrf	7
  3032     0114  0181               	clrf	1
  3033     0115  0A81               	incf	1,f
  3034     0116                     l1283:
  3035                           
  3036                           ;main.c: 181:             digit->b = 0;
  3037     0116  0A74               	incf	SetSegments@digit,w
  3038     0117  0086               	movwf	6
  3039     0118  0187               	clrf	7
  3040     0119  0181               	clrf	1
  3041     011A                     l1285:
  3042                           
  3043                           ;main.c: 182:             digit->c = 1;
  3044     011A  0874               	movf	SetSegments@digit,w
  3045     011B  3E02               	addlw	2
  3046     011C  0086               	movwf	6
  3047     011D  0187               	clrf	7
  3048     011E  0181               	clrf	1
  3049     011F  0A81               	incf	1,f
  3050     0120                     l1287:
  3051                           
  3052                           ;main.c: 183:             digit->d = 1;
  3053     0120  0874               	movf	SetSegments@digit,w
  3054     0121  3E03               	addlw	3
  3055     0122  0086               	movwf	6
  3056     0123  0187               	clrf	7
  3057     0124  0181               	clrf	1
  3058     0125  0A81               	incf	1,f
  3059     0126                     l1289:
  3060                           
  3061                           ;main.c: 184:             digit->e = 1;
  3062     0126  0874               	movf	SetSegments@digit,w
  3063     0127  3E04               	addlw	4
  3064     0128  0086               	movwf	6
  3065     0129  0187               	clrf	7
  3066     012A  0181               	clrf	1
  3067     012B  0A81               	incf	1,f
  3068     012C                     l1291:
  3069                           
  3070                           ;main.c: 185:             digit->f = 1;
  3071     012C  0874               	movf	SetSegments@digit,w
  3072     012D  3E05               	addlw	5
  3073     012E  0086               	movwf	6
  3074     012F  0187               	clrf	7
  3075     0130  0181               	clrf	1
  3076     0131  0A81               	incf	1,f
  3077     0132                     l1293:
  3078                           
  3079                           ;main.c: 186:             digit->g = 1;
  3080     0132  0874               	movf	SetSegments@digit,w
  3081     0133  3E06               	addlw	6
  3082     0134  0086               	movwf	6
  3083     0135  0187               	clrf	7
  3084     0136  0181               	clrf	1
  3085     0137  0A81               	incf	1,f
  3086                           
  3087                           ;main.c: 187:             break;
  3088     0138  29D4               	goto	l50
  3089     0139                     l1295:
  3090                           
  3091                           ;main.c: 190:             digit->a = 1;
  3092     0139  0874               	movf	SetSegments@digit,w
  3093     013A  0086               	movwf	6
  3094     013B  0187               	clrf	7
  3095     013C  0181               	clrf	1
  3096     013D  0A81               	incf	1,f
  3097                           
  3098                           ;main.c: 191:             digit->b = 1;
  3099     013E  0A74               	incf	SetSegments@digit,w
  3100     013F  0086               	movwf	6
  3101     0140  0187               	clrf	7
  3102     0141  0181               	clrf	1
  3103     0142  0A81               	incf	1,f
  3104     0143                     l1297:
  3105                           
  3106                           ;main.c: 192:             digit->c = 1;
  3107     0143  0874               	movf	SetSegments@digit,w
  3108     0144  3E02               	addlw	2
  3109     0145  0086               	movwf	6
  3110     0146  0187               	clrf	7
  3111     0147  0181               	clrf	1
  3112     0148  0A81               	incf	1,f
  3113     0149                     l1299:
  3114                           
  3115                           ;main.c: 193:             digit->d = 0;
  3116     0149  0874               	movf	SetSegments@digit,w
  3117     014A  3E03               	addlw	3
  3118     014B  0086               	movwf	6
  3119     014C  0187               	clrf	7
  3120     014D  0181               	clrf	1
  3121     014E                     l1301:
  3122                           
  3123                           ;main.c: 194:             digit->e = 0;
  3124     014E  0874               	movf	SetSegments@digit,w
  3125     014F  3E04               	addlw	4
  3126     0150  0086               	movwf	6
  3127     0151  0187               	clrf	7
  3128     0152  0181               	clrf	1
  3129     0153                     l1303:
  3130                           
  3131                           ;main.c: 195:             digit->f = 0;
  3132     0153  0874               	movf	SetSegments@digit,w
  3133     0154  3E05               	addlw	5
  3134     0155  0086               	movwf	6
  3135     0156  0187               	clrf	7
  3136     0157  0181               	clrf	1
  3137     0158                     l1305:
  3138                           
  3139                           ;main.c: 196:             digit->g = 0;
  3140     0158  0874               	movf	SetSegments@digit,w
  3141     0159  3E06               	addlw	6
  3142     015A  0086               	movwf	6
  3143     015B  0187               	clrf	7
  3144     015C  0181               	clrf	1
  3145                           
  3146                           ;main.c: 197:             break;
  3147     015D  29D4               	goto	l50
  3148     015E                     l1307:
  3149                           
  3150                           ;main.c: 200:             digit->a = 1;
  3151     015E  0874               	movf	SetSegments@digit,w
  3152     015F  0086               	movwf	6
  3153     0160  0187               	clrf	7
  3154     0161  0181               	clrf	1
  3155     0162  0A81               	incf	1,f
  3156                           
  3157                           ;main.c: 201:             digit->b = 1;
  3158     0163  0A74               	incf	SetSegments@digit,w
  3159     0164  0086               	movwf	6
  3160     0165  0187               	clrf	7
  3161     0166  0181               	clrf	1
  3162     0167  0A81               	incf	1,f
  3163     0168                     l1309:
  3164                           
  3165                           ;main.c: 202:             digit->c = 1;
  3166     0168  0874               	movf	SetSegments@digit,w
  3167     0169  3E02               	addlw	2
  3168     016A  0086               	movwf	6
  3169     016B  0187               	clrf	7
  3170     016C  0181               	clrf	1
  3171     016D  0A81               	incf	1,f
  3172     016E                     l1311:
  3173                           
  3174                           ;main.c: 203:             digit->d = 1;
  3175     016E  0874               	movf	SetSegments@digit,w
  3176     016F  3E03               	addlw	3
  3177     0170  0086               	movwf	6
  3178     0171  0187               	clrf	7
  3179     0172  0181               	clrf	1
  3180     0173  0A81               	incf	1,f
  3181     0174                     l1313:
  3182                           
  3183                           ;main.c: 204:             digit->e = 1;
  3184     0174  0874               	movf	SetSegments@digit,w
  3185     0175  3E04               	addlw	4
  3186     0176  0086               	movwf	6
  3187     0177  0187               	clrf	7
  3188     0178  0181               	clrf	1
  3189     0179  0A81               	incf	1,f
  3190     017A                     l1315:
  3191                           
  3192                           ;main.c: 205:             digit->f = 1;
  3193     017A  0874               	movf	SetSegments@digit,w
  3194     017B  3E05               	addlw	5
  3195     017C  0086               	movwf	6
  3196     017D  0187               	clrf	7
  3197     017E  0181               	clrf	1
  3198     017F  0A81               	incf	1,f
  3199     0180                     l1317:
  3200                           
  3201                           ;main.c: 206:             digit->g = 1;
  3202     0180  0874               	movf	SetSegments@digit,w
  3203     0181  3E06               	addlw	6
  3204     0182  0086               	movwf	6
  3205     0183  0187               	clrf	7
  3206     0184  0181               	clrf	1
  3207     0185  0A81               	incf	1,f
  3208                           
  3209                           ;main.c: 207:             break;
  3210     0186  29D4               	goto	l50
  3211     0187                     l1319:
  3212                           
  3213                           ;main.c: 210:             digit->a = 1;
  3214     0187  0874               	movf	SetSegments@digit,w
  3215     0188  0086               	movwf	6
  3216     0189  0187               	clrf	7
  3217     018A  0181               	clrf	1
  3218     018B  0A81               	incf	1,f
  3219                           
  3220                           ;main.c: 211:             digit->b = 1;
  3221     018C  0A74               	incf	SetSegments@digit,w
  3222     018D  0086               	movwf	6
  3223     018E  0187               	clrf	7
  3224     018F  0181               	clrf	1
  3225     0190  0A81               	incf	1,f
  3226     0191                     l1321:
  3227                           
  3228                           ;main.c: 212:             digit->c = 1;
  3229     0191  0874               	movf	SetSegments@digit,w
  3230     0192  3E02               	addlw	2
  3231     0193  0086               	movwf	6
  3232     0194  0187               	clrf	7
  3233     0195  0181               	clrf	1
  3234     0196  0A81               	incf	1,f
  3235     0197                     l1323:
  3236                           
  3237                           ;main.c: 213:             digit->d = 1;
  3238     0197  0874               	movf	SetSegments@digit,w
  3239     0198  3E03               	addlw	3
  3240     0199  0086               	movwf	6
  3241     019A  0187               	clrf	7
  3242     019B  0181               	clrf	1
  3243     019C  0A81               	incf	1,f
  3244     019D                     l1325:
  3245                           
  3246                           ;main.c: 214:             digit->e = 0;
  3247     019D  0874               	movf	SetSegments@digit,w
  3248     019E  3E04               	addlw	4
  3249     019F  0086               	movwf	6
  3250     01A0  0187               	clrf	7
  3251     01A1  0181               	clrf	1
  3252     01A2                     l1327:
  3253                           
  3254                           ;main.c: 215:             digit->f = 1;
  3255     01A2  0874               	movf	SetSegments@digit,w
  3256     01A3  3E05               	addlw	5
  3257     01A4  0086               	movwf	6
  3258     01A5  0187               	clrf	7
  3259     01A6  0181               	clrf	1
  3260     01A7  0A81               	incf	1,f
  3261     01A8                     l1329:
  3262                           
  3263                           ;main.c: 216:             digit->g = 1;
  3264     01A8  0874               	movf	SetSegments@digit,w
  3265     01A9  3E06               	addlw	6
  3266     01AA  0086               	movwf	6
  3267     01AB  0187               	clrf	7
  3268     01AC  0181               	clrf	1
  3269     01AD  0A81               	incf	1,f
  3270                           
  3271                           ;main.c: 217:             break;
  3272     01AE  29D4               	goto	l50
  3273     01AF                     l1333:
  3274                           
  3275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3276                           ; Switch size 1, requested type "simple"
  3277                           ; Number of cases is 1, Range of values is 0 to 0
  3278                           ; switch strategies available:
  3279                           ; Name         Instructions Cycles
  3280                           ; simple_byte            4     3 (average)
  3281                           ; direct_byte            8     6 (fixed)
  3282                           ; jumptable            260     6 (fixed)
  3283                           ;	Chosen strategy is simple_byte
  3284     01AF  0873               	movf	SetSegments@a+1,w
  3285     01B0  3A00               	xorlw	0	; case 0
  3286     01B1  1903               	skipnz
  3287     01B2  29B4               	goto	l1685
  3288     01B3  29D4               	goto	l50
  3289     01B4                     l1685:
  3290                           
  3291                           ; Switch size 1, requested type "simple"
  3292                           ; Number of cases is 10, Range of values is 0 to 9
  3293                           ; switch strategies available:
  3294                           ; Name         Instructions Cycles
  3295                           ; direct_byte           26     6 (fixed)
  3296                           ; simple_byte           31    16 (average)
  3297                           ; jumptable            260     6 (fixed)
  3298                           ;	Chosen strategy is simple_byte
  3299     01B4  0872               	movf	SetSegments@a,w
  3300     01B5  3A00               	xorlw	0	; case 0
  3301     01B6  1903               	skipnz
  3302     01B7  282A               	goto	l1203
  3303     01B8  3A01               	xorlw	1	; case 1
  3304     01B9  1903               	skipnz
  3305     01BA  2852               	goto	l1215
  3306     01BB  3A03               	xorlw	3	; case 2
  3307     01BC  1903               	skipnz
  3308     01BD  2876               	goto	l1229
  3309     01BE  3A01               	xorlw	1	; case 3
  3310     01BF  1903               	skipnz
  3311     01C0  289D               	goto	l1241
  3312     01C1  3A07               	xorlw	7	; case 4
  3313     01C2  1903               	skipnz
  3314     01C3  28C4               	goto	l1253
  3315     01C4  3A01               	xorlw	1	; case 5
  3316     01C5  1903               	skipnz
  3317     01C6  28EA               	goto	l1267
  3318     01C7  3A03               	xorlw	3	; case 6
  3319     01C8  1903               	skipnz
  3320     01C9  2911               	goto	l1281
  3321     01CA  3A01               	xorlw	1	; case 7
  3322     01CB  1903               	skipnz
  3323     01CC  2939               	goto	l1295
  3324     01CD  3A0F               	xorlw	15	; case 8
  3325     01CE  1903               	skipnz
  3326     01CF  295E               	goto	l1307
  3327     01D0  3A01               	xorlw	1	; case 9
  3328     01D1  1903               	skipnz
  3329     01D2  2987               	goto	l1319
  3330     01D3  29D4               	goto	l50
  3331     01D4                     l50:
  3332     01D4  0008               	return
  3333     01D5                     __end_of_SetSegments:
  3334                           
  3335                           	psect	text12
  3336     03C9                     __ptext12:	
  3337 ;; *************** function _ClearDigit *****************
  3338 ;; Defined at:
  3339 ;;		line 79 in file "main.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  digit           1    wreg     PTR struct digit
  3342 ;;		 -> hundred(7), one(7), ten(7), 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  digit           1    2[COMMON] PTR struct digit
  3345 ;;		 -> hundred(7), one(7), ten(7), 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3355 ;;      Params:         0       0       0       0       0       0       0
  3356 ;;      Locals:         1       0       0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0
  3358 ;;      Totals:         1       0       0       0       0       0       0
  3359 ;;Total ram usage:        1 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 3
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369     03C9                     _ClearDigit:	
  3370                           ;psect for function _ClearDigit
  3371                           
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in _ClearDigit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3375                           ;ClearDigit@digit stored from wreg
  3376     03C9  00F2               	movwf	ClearDigit@digit
  3377     03CA                     l1485:
  3378                           
  3379                           ;main.c: 79: void ClearDigit(Digit* digit);main.c: 80: {;main.c: 81:     digit->a = 0;
  3380     03CA  0872               	movf	ClearDigit@digit,w
  3381     03CB  0086               	movwf	6
  3382     03CC  0187               	clrf	7
  3383     03CD  0181               	clrf	1
  3384                           
  3385                           ;main.c: 82:     digit->b = 0;
  3386     03CE  0A72               	incf	ClearDigit@digit,w
  3387     03CF  0086               	movwf	6
  3388     03D0  0187               	clrf	7
  3389     03D1  0181               	clrf	1
  3390     03D2                     l1487:
  3391                           
  3392                           ;main.c: 83:     digit->c = 0;
  3393     03D2  0872               	movf	ClearDigit@digit,w
  3394     03D3  3E02               	addlw	2
  3395     03D4  0086               	movwf	6
  3396     03D5  0187               	clrf	7
  3397     03D6  0181               	clrf	1
  3398     03D7                     l1489:
  3399                           
  3400                           ;main.c: 84:     digit->d = 0;
  3401     03D7  0872               	movf	ClearDigit@digit,w
  3402     03D8  3E03               	addlw	3
  3403     03D9  0086               	movwf	6
  3404     03DA  0187               	clrf	7
  3405     03DB  0181               	clrf	1
  3406     03DC                     l1491:
  3407                           
  3408                           ;main.c: 85:     digit->e = 0;
  3409     03DC  0872               	movf	ClearDigit@digit,w
  3410     03DD  3E04               	addlw	4
  3411     03DE  0086               	movwf	6
  3412     03DF  0187               	clrf	7
  3413     03E0  0181               	clrf	1
  3414     03E1                     l1493:
  3415                           
  3416                           ;main.c: 86:     digit->f = 0;
  3417     03E1  0872               	movf	ClearDigit@digit,w
  3418     03E2  3E05               	addlw	5
  3419     03E3  0086               	movwf	6
  3420     03E4  0187               	clrf	7
  3421     03E5  0181               	clrf	1
  3422     03E6                     l1495:
  3423                           
  3424                           ;main.c: 87:     digit->g = 0;
  3425     03E6  0872               	movf	ClearDigit@digit,w
  3426     03E7  3E06               	addlw	6
  3427     03E8  0086               	movwf	6
  3428     03E9  0187               	clrf	7
  3429     03EA  0181               	clrf	1
  3430     03EB                     l32:
  3431     03EB  0008               	return
  3432     03EC                     __end_of_ClearDigit:
  3433                           
  3434                           	psect	intentry
  3435     0004                     __pintentry:	
  3436 ;; *************** function _INTERRUPT_InterruptManager *****************
  3437 ;; Defined at:
  3438 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0, pclath, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3452 ;;      Params:         0       0       0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 2
  3459 ;; This function calls:
  3460 ;;		_TMR1_OverflowISR
  3461 ;; This function is called by:
  3462 ;;		Interrupt level 1
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466     0004                     _INTERRUPT_InterruptManager:
  3467                           
  3468                           ;incstack = 0
  3469     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3470                           
  3471                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3472     0005  3180               	pagesel	$
  3473     0006                     i1l1547:
  3474                           
  3475                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
  3476     0006  1F0B               	btfss	11,6	;volatile
  3477     0007  2809               	goto	u53_21
  3478     0008  280A               	goto	u53_20
  3479     0009                     u53_21:
  3480     0009  2817               	goto	i1l147
  3481     000A                     u53_20:
  3482     000A                     i1l1549:
  3483                           
  3484                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3485     000A  0021               	movlb	1	; select bank1
  3486     000B  1C11               	btfss	17,0	;volatile
  3487     000C  280E               	goto	u54_21
  3488     000D  280F               	goto	u54_20
  3489     000E                     u54_21:
  3490     000E  2817               	goto	i1l147
  3491     000F                     u54_20:
  3492     000F                     i1l1551:
  3493     000F  0020               	movlb	0	; select bank0
  3494     0010  1C11               	btfss	17,0	;volatile
  3495     0011  2813               	goto	u55_21
  3496     0012  2814               	goto	u55_20
  3497     0013                     u55_21:
  3498     0013  2817               	goto	i1l147
  3499     0014                     u55_20:
  3500     0014                     i1l1553:
  3501                           
  3502                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             TMR1_OverflowISR();
  3503     0014  3184  2422  3180   	fcall	_TMR1_OverflowISR
  3504     0017                     i1l147:	
  3505                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
  3506                           
  3507     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3508     0018  0009               	retfie
  3509     0019                     __end_of_INTERRUPT_InterruptManager:
  3510                           
  3511                           	psect	text14
  3512     0422                     __ptext14:	
  3513 ;; *************** function _TMR1_OverflowISR *****************
  3514 ;; Defined at:
  3515 ;;		line 150 in file "mcc_generated_files/timer/src/tmr1.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0, pclath, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3529 ;;      Params:         0       0       0       0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0
  3532 ;;      Totals:         0       0       0       0       0       0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; Hardware stack levels required when called: 1
  3536 ;; This function calls:
  3537 ;;		Absolute function
  3538 ;;		_TMR1_DefaultOverflowCallback
  3539 ;;		_TMR1_Write
  3540 ;;		_Tmr1CallBack
  3541 ;; This function is called by:
  3542 ;;		_INTERRUPT_InterruptManager
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546     0422                     _TMR1_OverflowISR:	
  3547                           ;psect for function _TMR1_OverflowISR
  3548                           
  3549     0422                     i1l1509:	
  3550                           ;incstack = 0
  3551                           ; Regs used in _TMR1_OverflowISR: [wreg+status,2+status,0+pclath+cstack]
  3552                           
  3553                           
  3554                           ;mcc_generated_files/timer/src/tmr1.c: 154:     PIR1bits.TMR1IF = 0;
  3555     0422  0020               	movlb	0	; select bank0
  3556     0423  1011               	bcf	17,0	;volatile
  3557     0424                     i1l1511:
  3558                           
  3559                           ;mcc_generated_files/timer/src/tmr1.c: 155:     TMR1_Write(timer1ReloadVal);
  3560     0424  0850               	movf	_timer1ReloadVal+1,w	;volatile
  3561     0425  00F1               	movwf	TMR1_Write@timerVal+1
  3562     0426  084F               	movf	_timer1ReloadVal,w	;volatile
  3563     0427  00F0               	movwf	TMR1_Write@timerVal
  3564     0428  3184  2438  3184   	fcall	_TMR1_Write
  3565     042B                     i1l1513:
  3566                           
  3567                           ;mcc_generated_files/timer/src/tmr1.c: 157:     if(TMR1_OverflowCallback)
  3568     042B  0020               	movlb	0	; select bank0
  3569     042C  084D               	movf	_TMR1_OverflowCallback,w
  3570     042D  044E               	iorwf	_TMR1_OverflowCallback+1,w
  3571     042E  1903               	btfsc	3,2
  3572     042F  2C31               	goto	u51_21
  3573     0430  2C32               	goto	u51_20
  3574     0431                     u51_21:
  3575     0431  2C37               	goto	i1l229
  3576     0432                     u51_20:
  3577     0432                     i1l1515:
  3578                           
  3579                           ;mcc_generated_files/timer/src/tmr1.c: 158:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          159:         TMR1_OverflowCallback();
  3580     0432  084E               	movf	_TMR1_OverflowCallback+1,w
  3581     0433  008A               	movwf	10
  3582     0434  084D               	movf	_TMR1_OverflowCallback,w
  3583     0435  000A               	callw
  3584     0436  3184               	pagesel	$
  3585     0437                     i1l229:
  3586     0437  0008               	return
  3587     0438                     __end_of_TMR1_OverflowISR:
  3588                           
  3589                           	psect	text15
  3590     0485                     __ptext15:	
  3591 ;; *************** function _TMR1_DefaultOverflowCallback *****************
  3592 ;; Defined at:
  3593 ;;		line 168 in file "mcc_generated_files/timer/src/tmr1.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		None
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3607 ;;      Params:         0       0       0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		_TMR1_Initialize
  3617 ;;		_TMR1_OverflowISR
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621     0485                     _TMR1_DefaultOverflowCallback:	
  3622                           ;psect for function _TMR1_DefaultOverflowCallback
  3623                           
  3624     0485                     i1l235:	
  3625                           ;incstack = 0
  3626                           ; Regs used in _TMR1_DefaultOverflowCallback: []
  3627                           
  3628     0485  0008               	return
  3629     0486                     __end_of_TMR1_DefaultOverflowCallback:
  3630                           
  3631                           	psect	text16
  3632     01D5                     __ptext16:	
  3633 ;; *************** function _Tmr1CallBack *****************
  3634 ;; Defined at:
  3635 ;;		line 90 in file "main.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3649 ;;      Params:         0       0       0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0
  3651 ;;      Temps:          1       0       0       0       0       0       0
  3652 ;;      Totals:         1       0       0       0       0       0       0
  3653 ;;Total ram usage:        1 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_main
  3659 ;;		_TMR1_OverflowISR
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663     01D5                     _Tmr1CallBack:	
  3664                           ;psect for function _Tmr1CallBack
  3665                           
  3666     01D5                     i1l1195:	
  3667                           ;incstack = 0
  3668                           ; Regs used in _Tmr1CallBack: [wreg+status,2+status,0]
  3669                           
  3670                           
  3671                           ;main.c: 92:     toggle = 1 - toggle;
  3672     01D5  087B               	movf	_toggle,w
  3673     01D6  3C01               	sublw	1
  3674     01D7  00FB               	movwf	_toggle
  3675     01D8                     i1l1197:
  3676                           
  3677                           ;main.c: 94:     PORTAbits.RA5 = toggle;
  3678     01D8  0C7B               	rrf	_toggle,w
  3679     01D9  0020               	movlb	0	; select bank0
  3680     01DA  1C03               	skipc
  3681     01DB  128C               	bcf	12,5	;volatile
  3682     01DC  1803               	skipnc
  3683     01DD  168C               	bsf	12,5	;volatile
  3684     01DE                     i1l1199:
  3685                           
  3686                           ;main.c: 96:     PORTAbits.RA4 = toggle;
  3687     01DE  0C7B               	rrf	_toggle,w
  3688     01DF  1C03               	skipc
  3689     01E0  120C               	bcf	12,4	;volatile
  3690     01E1  1803               	skipnc
  3691     01E2  160C               	bsf	12,4	;volatile
  3692                           
  3693                           ;main.c: 98:     PORTCbits.RC5 = toggle ^ ten.a;
  3694     01E3  0829               	movf	_ten,w
  3695     01E4  067B               	xorwf	_toggle,w
  3696     01E5  00F0               	movwf	??_Tmr1CallBack
  3697     01E6  0EF0               	swapf	??_Tmr1CallBack,f
  3698     01E7  0DF0               	rlf	??_Tmr1CallBack,f
  3699     01E8  080E               	movf	14,w	;volatile
  3700     01E9  0670               	xorwf	??_Tmr1CallBack,w
  3701     01EA  39DF               	andlw	-33
  3702     01EB  0670               	xorwf	??_Tmr1CallBack,w
  3703     01EC  008E               	movwf	14	;volatile
  3704                           
  3705                           ;main.c: 99:     PORTCbits.RC4 = toggle ^ ten.b;
  3706     01ED  082A               	movf	_ten+1,w
  3707     01EE  067B               	xorwf	_toggle,w
  3708     01EF  00F0               	movwf	??_Tmr1CallBack
  3709     01F0  0EF0               	swapf	??_Tmr1CallBack,f
  3710     01F1  080E               	movf	14,w	;volatile
  3711     01F2  0670               	xorwf	??_Tmr1CallBack,w
  3712     01F3  39EF               	andlw	-17
  3713     01F4  0670               	xorwf	??_Tmr1CallBack,w
  3714     01F5  008E               	movwf	14	;volatile
  3715                           
  3716                           ;main.c: 100:     PORTCbits.RC3 = toggle ^ ten.c;
  3717     01F6  082B               	movf	_ten+2,w
  3718     01F7  067B               	xorwf	_toggle,w
  3719     01F8  00F0               	movwf	??_Tmr1CallBack
  3720     01F9  0DF0               	rlf	??_Tmr1CallBack,f
  3721     01FA  0DF0               	rlf	??_Tmr1CallBack,f
  3722     01FB  0DF0               	rlf	??_Tmr1CallBack,f
  3723     01FC  080E               	movf	14,w	;volatile
  3724     01FD  0670               	xorwf	??_Tmr1CallBack,w
  3725     01FE  39F7               	andlw	-9
  3726     01FF  0670               	xorwf	??_Tmr1CallBack,w
  3727     0200  008E               	movwf	14	;volatile
  3728                           
  3729                           ;main.c: 101:     PORTCbits.RC6 = toggle ^ ten.d;
  3730     0201  082C               	movf	_ten+3,w
  3731     0202  067B               	xorwf	_toggle,w
  3732     0203  00F0               	movwf	??_Tmr1CallBack
  3733     0204  0EF0               	swapf	??_Tmr1CallBack,f
  3734     0205  0DF0               	rlf	??_Tmr1CallBack,f
  3735     0206  0DF0               	rlf	??_Tmr1CallBack,f
  3736     0207  080E               	movf	14,w	;volatile
  3737     0208  0670               	xorwf	??_Tmr1CallBack,w
  3738     0209  39BF               	andlw	-65
  3739     020A  0670               	xorwf	??_Tmr1CallBack,w
  3740     020B  008E               	movwf	14	;volatile
  3741                           
  3742                           ;main.c: 102:     PORTCbits.RC7 = toggle ^ ten.e;
  3743     020C  082D               	movf	_ten+4,w
  3744     020D  067B               	xorwf	_toggle,w
  3745     020E  00F0               	movwf	??_Tmr1CallBack
  3746     020F  0CF0               	rrf	??_Tmr1CallBack,f
  3747     0210  0CF0               	rrf	??_Tmr1CallBack,f
  3748     0211  080E               	movf	14,w	;volatile
  3749     0212  0670               	xorwf	??_Tmr1CallBack,w
  3750     0213  397F               	andlw	-129
  3751     0214  0670               	xorwf	??_Tmr1CallBack,w
  3752     0215  008E               	movwf	14	;volatile
  3753                           
  3754                           ;main.c: 103:     PORTBbits.RB7 = toggle ^ ten.f;
  3755     0216  082E               	movf	_ten+5,w
  3756     0217  067B               	xorwf	_toggle,w
  3757     0218  00F0               	movwf	??_Tmr1CallBack
  3758     0219  0CF0               	rrf	??_Tmr1CallBack,f
  3759     021A  0CF0               	rrf	??_Tmr1CallBack,f
  3760     021B  080D               	movf	13,w	;volatile
  3761     021C  0670               	xorwf	??_Tmr1CallBack,w
  3762     021D  397F               	andlw	-129
  3763     021E  0670               	xorwf	??_Tmr1CallBack,w
  3764     021F  008D               	movwf	13	;volatile
  3765                           
  3766                           ;main.c: 104:     PORTBbits.RB6 = toggle ^ ten.g;
  3767     0220  082F               	movf	_ten+6,w
  3768     0221  067B               	xorwf	_toggle,w
  3769     0222  00F0               	movwf	??_Tmr1CallBack
  3770     0223  0EF0               	swapf	??_Tmr1CallBack,f
  3771     0224  0DF0               	rlf	??_Tmr1CallBack,f
  3772     0225  0DF0               	rlf	??_Tmr1CallBack,f
  3773     0226  080D               	movf	13,w	;volatile
  3774     0227  0670               	xorwf	??_Tmr1CallBack,w
  3775     0228  39BF               	andlw	-65
  3776     0229  0670               	xorwf	??_Tmr1CallBack,w
  3777     022A  008D               	movwf	13	;volatile
  3778                           
  3779                           ;main.c: 106:     PORTBbits.RB5 = toggle ^ one.a;
  3780     022B  0830               	movf	_one,w
  3781     022C  067B               	xorwf	_toggle,w
  3782     022D  00F0               	movwf	??_Tmr1CallBack
  3783     022E  0EF0               	swapf	??_Tmr1CallBack,f
  3784     022F  0DF0               	rlf	??_Tmr1CallBack,f
  3785     0230  080D               	movf	13,w	;volatile
  3786     0231  0670               	xorwf	??_Tmr1CallBack,w
  3787     0232  39DF               	andlw	-33
  3788     0233  0670               	xorwf	??_Tmr1CallBack,w
  3789     0234  008D               	movwf	13	;volatile
  3790                           
  3791                           ;main.c: 107:     PORTBbits.RB4 = toggle ^ one.b;
  3792     0235  0831               	movf	_one+1,w
  3793     0236  067B               	xorwf	_toggle,w
  3794     0237  00F0               	movwf	??_Tmr1CallBack
  3795     0238  0EF0               	swapf	??_Tmr1CallBack,f
  3796     0239  080D               	movf	13,w	;volatile
  3797     023A  0670               	xorwf	??_Tmr1CallBack,w
  3798     023B  39EF               	andlw	-17
  3799     023C  0670               	xorwf	??_Tmr1CallBack,w
  3800     023D  008D               	movwf	13	;volatile
  3801                           
  3802                           ;main.c: 108:     PORTCbits.RC2 = toggle ^ one.c;
  3803     023E  0832               	movf	_one+2,w
  3804     023F  067B               	xorwf	_toggle,w
  3805     0240  00F0               	movwf	??_Tmr1CallBack
  3806     0241  0DF0               	rlf	??_Tmr1CallBack,f
  3807     0242  0DF0               	rlf	??_Tmr1CallBack,f
  3808     0243  080E               	movf	14,w	;volatile
  3809     0244  0670               	xorwf	??_Tmr1CallBack,w
  3810     0245  39FB               	andlw	-5
  3811     0246  0670               	xorwf	??_Tmr1CallBack,w
  3812     0247  008E               	movwf	14	;volatile
  3813                           
  3814                           ;main.c: 109:     PORTCbits.RC1 = toggle ^ one.d;
  3815     0248  0833               	movf	_one+3,w
  3816     0249  067B               	xorwf	_toggle,w
  3817     024A  00F0               	movwf	??_Tmr1CallBack
  3818     024B  0DF0               	rlf	??_Tmr1CallBack,f
  3819     024C  080E               	movf	14,w	;volatile
  3820     024D  0670               	xorwf	??_Tmr1CallBack,w
  3821     024E  39FD               	andlw	-3
  3822     024F  0670               	xorwf	??_Tmr1CallBack,w
  3823     0250  008E               	movwf	14	;volatile
  3824                           
  3825                           ;main.c: 110:     PORTCbits.RC0 = toggle ^ one.e;
  3826     0251  087B               	movf	_toggle,w
  3827     0252  0634               	xorwf	_one+4,w
  3828     0253  00F0               	movwf	??_Tmr1CallBack
  3829     0254  080E               	movf	14,w	;volatile
  3830     0255  0670               	xorwf	??_Tmr1CallBack,w
  3831     0256  39FE               	andlw	-2
  3832     0257  0670               	xorwf	??_Tmr1CallBack,w
  3833     0258  008E               	movwf	14	;volatile
  3834                           
  3835                           ;main.c: 111:     PORTAbits.RA2 = toggle ^ one.f;
  3836     0259  0835               	movf	_one+5,w
  3837     025A  067B               	xorwf	_toggle,w
  3838     025B  00F0               	movwf	??_Tmr1CallBack
  3839     025C  0DF0               	rlf	??_Tmr1CallBack,f
  3840     025D  0DF0               	rlf	??_Tmr1CallBack,f
  3841     025E  080C               	movf	12,w	;volatile
  3842     025F  0670               	xorwf	??_Tmr1CallBack,w
  3843     0260  39FB               	andlw	-5
  3844     0261  0670               	xorwf	??_Tmr1CallBack,w
  3845     0262  008C               	movwf	12	;volatile
  3846                           
  3847                           ;main.c: 112:     PORTAbits.RA1 = toggle ^ one.g;
  3848     0263  0836               	movf	_one+6,w
  3849     0264  067B               	xorwf	_toggle,w
  3850     0265  00F0               	movwf	??_Tmr1CallBack
  3851     0266  0DF0               	rlf	??_Tmr1CallBack,f
  3852     0267  080C               	movf	12,w	;volatile
  3853     0268  0670               	xorwf	??_Tmr1CallBack,w
  3854     0269  39FD               	andlw	-3
  3855     026A  0670               	xorwf	??_Tmr1CallBack,w
  3856     026B  008C               	movwf	12	;volatile
  3857     026C                     i1l35:
  3858     026C  0008               	return
  3859     026D                     __end_of_Tmr1CallBack:
  3860                           
  3861                           	psect	text17
  3862     0438                     __ptext17:	
  3863 ;; *************** function _TMR1_Write *****************
  3864 ;; Defined at:
  3865 ;;		line 108 in file "mcc_generated_files/timer/src/tmr1.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  timerVal        2    0[COMMON] unsigned int 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3879 ;;      Params:         2       0       0       0       0       0       0
  3880 ;;      Locals:         0       0       0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0
  3882 ;;      Totals:         2       0       0       0       0       0       0
  3883 ;;Total ram usage:        2 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_TMR1_OverflowISR
  3889 ;;		_TMR1_Reload
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893     0438                     _TMR1_Write:	
  3894                           ;psect for function _TMR1_Write
  3895                           
  3896     0438                     i1l1389:	
  3897                           ;incstack = 0
  3898                           ; Regs used in _TMR1_Write: [wreg+status,2]
  3899                           
  3900                           
  3901                           ;mcc_generated_files/timer/src/tmr1.c: 108: static void TMR1_Write(size_t timerVal);mcc_
      +                          generated_files/timer/src/tmr1.c: 109: {;mcc_generated_files/timer/src/tmr1.c: 110:     
      +                          if (T1CONbits.nT1SYNC == 1)
  3902     0438  0020               	movlb	0	; select bank0
  3903     0439  1D18               	btfss	24,2	;volatile
  3904     043A  2C3C               	goto	u29_21
  3905     043B  2C3D               	goto	u29_20
  3906     043C                     u29_21:
  3907     043C  2C44               	goto	i1l1399
  3908     043D                     u29_20:
  3909     043D                     i1l1391:
  3910                           
  3911                           ;mcc_generated_files/timer/src/tmr1.c: 111:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          113:         T1CONbits.TMR1ON = 0;
  3912     043D  1018               	bcf	24,0	;volatile
  3913     043E                     i1l1393:
  3914                           
  3915                           ;mcc_generated_files/timer/src/tmr1.c: 116:         TMR1H = (uint8_t)(timerVal >> 8);
  3916     043E  0871               	movf	TMR1_Write@timerVal+1,w
  3917     043F  0097               	movwf	23	;volatile
  3918     0440                     i1l1395:
  3919                           
  3920                           ;mcc_generated_files/timer/src/tmr1.c: 117:         TMR1L = (uint8_t)timerVal;
  3921     0440  0870               	movf	TMR1_Write@timerVal,w
  3922     0441  0096               	movwf	22	;volatile
  3923     0442                     i1l1397:
  3924                           
  3925                           ;mcc_generated_files/timer/src/tmr1.c: 120:         T1CONbits.TMR1ON = 1;
  3926     0442  1418               	bsf	24,0	;volatile
  3927                           
  3928                           ;mcc_generated_files/timer/src/tmr1.c: 121:     }
  3929     0443  2C48               	goto	i1l213
  3930     0444                     i1l1399:
  3931                           
  3932                           ;mcc_generated_files/timer/src/tmr1.c: 123:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          125:         TMR1H = (uint8_t)(timerVal >> 8);
  3933     0444  0871               	movf	TMR1_Write@timerVal+1,w
  3934     0445  0097               	movwf	23	;volatile
  3935     0446                     i1l1401:
  3936                           
  3937                           ;mcc_generated_files/timer/src/tmr1.c: 126:         TMR1L = (uint8_t)timerVal;
  3938     0446  0870               	movf	TMR1_Write@timerVal,w
  3939     0447  0096               	movwf	22	;volatile
  3940     0448                     i1l213:
  3941     0448  0008               	return
  3942     0449                     __end_of_TMR1_Write:
  3943     007E                     btemp	set	126	;btemp
  3944     007E                     int$flags	set	126
  3945     007E                     wtemp0	set	126
  3946                           
  3947                           	psect	idloc
  3948                           
  3949                           ;Config register IDLOC0 @ 0x8000
  3950                           ;	unspecified, using default values
  3951     8000                     	org	32768
  3952     8000  3FFF               	dw	16383
  3953                           
  3954                           ;Config register IDLOC1 @ 0x8001
  3955                           ;	unspecified, using default values
  3956     8001                     	org	32769
  3957     8001  3FFF               	dw	16383
  3958                           
  3959                           ;Config register IDLOC2 @ 0x8002
  3960                           ;	unspecified, using default values
  3961     8002                     	org	32770
  3962     8002  3FFF               	dw	16383
  3963                           
  3964                           ;Config register IDLOC3 @ 0x8003
  3965                           ;	unspecified, using default values
  3966     8003                     	org	32771
  3967     8003  3FFF               	dw	16383
  3968                           
  3969                           	psect	config
  3970                           
  3971                           ;Config register CONFIG1 @ 0x8007
  3972                           ;	Oscillator Selection Bits
  3973                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3974                           ;	Watchdog Timer Enable
  3975                           ;	WDTE = OFF, WDT disabled
  3976                           ;	Power-up Timer Enable
  3977                           ;	PWRTE = OFF, PWRT disabled
  3978                           ;	MCLR Pin Function Select
  3979                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3980                           ;	Flash Program Memory Code Protection
  3981                           ;	CP = OFF, Program memory code protection is disabled
  3982                           ;	Brown-out Reset Enable
  3983                           ;	BOREN = ON, Brown-out Reset enabled
  3984                           ;	Clock Out Enable
  3985                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3986                           ;	Internal/External Switchover Mode
  3987                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  3988                           ;	Fail-Safe Clock Monitor Enable
  3989                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3990     8007                     	org	32775
  3991     8007  3FE4               	dw	16356
  3992                           
  3993                           ;Config register CONFIG2 @ 0x8008
  3994                           ;	Flash Memory Self-Write Protection
  3995                           ;	WRT = OFF, Write protection off
  3996                           ;	Stack Overflow/Underflow Reset Enable
  3997                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3998                           ;	Brown-out Reset Voltage Selection
  3999                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4000                           ;	Low-Power Brown Out Reset
  4001                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4002                           ;	Low-Voltage Programming Enable
  4003                           ;	LVP = ON, Low-voltage programming enabled
  4004     8008                     	org	32776
  4005     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         24
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     22      51
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    S449$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultOverflowCallback(), Tmr1CallBack(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultOverflowCallback(), Tmr1CallBack(), 

    TMR1_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultOverflowCallback(), Absolute function(), Tmr1CallBack(), 

    S449TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    tmr1.Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S449TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR1_OverflowCallbackRegister(), 

    tmr1.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR1_OverflowCallbackRegister(), 

    S449TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR1_PeriodCountSet(), 

    tmr1.PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR1_PeriodCountSet(), 

    S449TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), 

    tmr1.Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), 

    S449TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), 

    tmr1.Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), 

    S449TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Initialize(), 

    tmr1.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Initialize(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), INT_DefaultInterruptHandler(), 

    SetSegments@digit	PTR struct digit size(1) Largest target is 7
		 -> hundred(BANK0[7]), one(BANK0[7]), ten(BANK0[7]), 

    ClearDigit@digit	PTR struct digit size(1) Largest target is 7
		 -> hundred(BANK0[7]), one(BANK0[7]), ten(BANK0[7]), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _Display->___awdiv
    ___awmod->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_OverflowISR->_TMR1_Write

Critical Paths under _main in BANK0

    _main->_Display
    _Display->___awmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4186
                                             18 BANK0      4     4      0
                         _ClearDigit
                            _Display
                  _SYSTEM_Initialize
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR1_OverflowCallbackRegister                        2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display                                             11     9      2    3419
                                              7 BANK0     11     9      2
                        _SetSegments
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _SetSegments                                          3     1      2    1889
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ClearDigit                                           1     1      0     253
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     240
                   _TMR1_OverflowISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_OverflowISR                                     0     0      0     240
                   Absolute function *
       _TMR1_DefaultOverflowCallback *
                         _TMR1_Write
                       _Tmr1CallBack *
 ---------------------------------------------------------------------------------
 (6) _Tmr1CallBack                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_Write                                           2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearDigit
   _Display
     _SetSegments
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_OverflowCallbackRegister
   _TMR1_OverflowCallbackRegister

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_OverflowISR
     Absolute function(Fake) *
     _TMR1_DefaultOverflowCallback *
     _TMR1_Write *
     _Tmr1CallBack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     16      33       6       63.7%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0      3F      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Sep 03 13:14:19 2025

                                           l7 0484                                            l32 03EB  
                                          l50 01D4                                            l53 0329  
                                ___awdiv@sign 0078                                           l103 0408  
                                         l117 0455                                           l232 0478  
                                         l138 046C                                           l157 047E  
                                         l462 02CB                                           l199 0421  
                                         l475 037D                                           u300 0272  
                                         u301 0271                                           u310 027D  
                                         u311 027C                                           u320 028E  
                                         u321 028D                                           u340 029E  
                                         u341 029D                                           u335 0292  
                                         u360 02AD                                           u361 02AC  
                                         u610 0356                                           u355 029F  
                                         u611 0355                                           u380 02BD  
                                         u620 0360                                           u381 02BC  
                                         u365 02A9                                           u621 035F  
                                         u605 034A                                           u390 02C2  
                                         u391 02C1                                           u375 02B3  
                                         u640 036F                                           u641 036E  
                                         u625 035C                                           u650 0374  
                                         u570 0330                                           u651 0373  
                                         u635 0365                                           u571 032F  
                                         u580 033B                                           u660 0307  
                                         u581 033A                                           u661 0305  
                                         u590 0346                                           u670 0308  
                                         u591 0345                                           u680 03B6  
                                         u665 0302                                           u681 03B5  
                                         u685 03B2                                           u697 03BF  
                             _timer1ReloadVal 004F                                           _one 0030  
                                         _ten 0029                                  ___awmod@sign 003D  
                                         wreg 0009                                          l1201 0029  
                                        l1211 0046                                          l1203 002A  
                                        l1301 014E                                          l1221 0061  
                                        l1213 004C                                          l1205 0034  
                                        l1311 016E                                          l1303 0153  
                                        l1231 0080                                          l1223 0066  
                                        l1215 0052                                          l1207 003A  
                                        l1321 0191                                          l1313 0174  
                                        l1305 0158                                          l1241 009D  
                                        l1233 0085                                          l1225 006B  
                                        l1217 0056                                          l1209 0040  
                                        l1323 0197                                          l1315 017A  
                                        l1307 015E                                          l1251 00BD  
                                        l1243 00A7                                          l1235 008B  
                                        l1227 0070                                          l1219 005B  
                                        l1411 0279                                          l1403 026D  
                                        l1325 019D                                          l1317 0180  
                                        l1309 0168                                          l1261 00D8  
                                        l1253 00C4                                          l1245 00AD  
                                        l1237 0091                                          l1229 0076  
                                        l1333 01AF                                          l1421 028E  
                                        l1413 027D                                          l1405 026E  
                                        l1341 03F0                                          l1327 01A2  
                                        l1319 0187                                          l1271 00F3  
                                        l1263 00DD                                          l1255 00C8  
                                        l1247 00B3                                          l1239 0096  
                                        l1431 02AD                                          l1423 0291  
                                        l1415 0282                                          l1407 0272  
                                        l1191 047F                                          l1351 03F8  
                                        l1343 03F3                                          l1329 01A8  
                                        l1281 0111                                          l1273 00F9  
                                        l1265 00E3                                          l1257 00CD  
                                        l1249 00B8                                          l1441 02C2  
                                        l1433 02B1                                          l1425 0296  
                                        l1417 0286                                          l1409 0277  
                                        l1601 0346                                          l1193 0482  
                                        l1361 0404                                          l1353 03FE  
                                        l1345 03F4                                          l1291 012C  
                                        l1283 0116                                          l1275 00FF  
                                        l1267 00EA                                          l1259 00D3  
                                        l1443 02C7                                          l1435 02B2  
                                        l1427 029A                                          l1419 0288  
                                        l1611 0360                                          l1603 0349  
                                        l1363 0405                                          l1355 0400  
                                        l1347 03F5                                          l1339 03EC  
                                        l1187 0473                                          l1371 040B  
                                        l1507 0449                                          l1293 0132  
                                        l1285 011A                                          l1277 0104  
                                        l1269 00EF                                          l1437 02B7  
                                        l1429 029E                                          l1621 0379  
                                        l1613 0364                                          l1605 034E  
                                        l1189 0479                                          l1365 0406  
                                        l1357 0402                                          l1349 03F7  
                                        l1381 041C                                          l1373 040D  
                                        l1295 0139                                          l1287 0120  
                                        l1279 010A                                          l1439 02BD  
                                        l1615 0369                                          l1607 0352  
                                        l1631 0317                                          l1367 0407  
                                        l1359 0403                                          l1383 041E  
                                        l1375 040F                                          l1297 0143  
                                        l1289 0126                                          l1609 0356  
                                        l1617 036F                                          l1633 0320  
                                        l1625 02CC                                          l1385 0462  
                                        l1377 0413                                          l1369 0409  
                                        l1641 0387                                          l1491 03DC  
                                        l1299 0149                                          l1619 0374  
                                        l1627 02F9                                          l1387 0465  
                                        l1379 041A                                          l1651 039B  
                                        l1643 038B                                          l1635 037E  
                                        l1493 03E1                                          l1485 03CA  
                                        l1629 030F                                          l1661 03B6  
                                        l1653 039C                                          l1645 038F  
                                        l1637 0381                                          l1495 03E6  
                                        l1487 03D2                                          l1591 0330  
                                        l1663 03B9                                          l1655 039D  
                                        l1647 0392                                          l1639 0383  
                                        l1489 03D7                                          l1593 0335  
                                        l1657 03A0                                          l1649 0394  
                                        l1595 0337                                          l1587 032A  
                                        l1659 03A8                                          l1685 01B4  
                                        l1597 033B                                          l1589 032C  
                                        l1599 0340                                          _LATA 010C  
                                        _LATB 010D                                          _LATC 010E  
                                        i1l35 026C                                          _WPUA 020C  
                                        _WPUB 020D                                          _main 037E  
                                        _tmr1 0456                                    _ClearDigit 03C9  
                                        fsr0h 0005                                          fsr1h 0007  
                                        indf0 0000                                          fsr0l 0004  
                                        indf1 0001                                          fsr1l 0006  
                                        btemp 007E                   _INT_DefaultInterruptHandler 0000  
                                        start 0019               __end_of_INT_SetInterruptHandler 047F  
                             __end_of_Display 032A                ??_TMR1_DefaultOverflowCallback 0070  
                                       ?_main 0070                               __end_of___awdiv 02CC  
                             __end_of___awmod 037E                               ___awdiv@divisor 0072  
                                       _T1CON 0018                                         _IOCAF 0393  
                                       _IOCBF 0396                                         _IOCAN 0392  
                                       _IOCAP 0391                                         _IOCBN 0395  
                                       _IOCBP 0394                                         i1l213 0448  
                                       i1l235 0485                                         i1l147 0017  
                                       i1l229 0437                               ___awdiv@counter 0077  
                                       _TMR1H 0017                                         _TMR1L 0016  
                                       u51_20 0432                                         u51_21 0431  
                                       u29_20 043D                                         u53_20 000A  
                                       u29_21 043C                                         u53_21 0009  
                                       u54_20 000F                                         u54_21 000E  
                                       u55_20 0014                                         u55_21 0013  
                                       _TRISA 008C                                         _TRISB 008D  
                                       _TRISC 008E                                   ?_TMR1_Write 0070  
                                       main@i 004B                       __end_of_TMR1_Initialize 0422  
                                       pclath 000A                                         status 0003  
                                       wtemp0 007E                               __initialization 001B  
                                __end_of_main 03C9                                  __end_of_tmr1 0462  
                            _TMR1_OverflowISR 0422                   ?_INTERRUPT_InterruptManager 0070  
                                      ??_main 0049                                 ??_SetSegments 0074  
                            ___awdiv@dividend 0074         __end_of_TMR1_OverflowCallbackRegister 0479  
               _TMR1_OverflowCallbackRegister 0473                                        _ANSELA 018C  
                                      _ANSELB 018D                                        _ANSELC 018E  
                               ?_Tmr1CallBack 0070                                        _BORCON 0116  
                                      _T1GCON 0019                                        i1l1401 0446  
                                      i1l1511 0424                                        i1l1513 042B  
                                      i1l1195 01D5                                        i1l1515 0432  
                                      i1l1197 01D8                                        i1l1509 0422  
                                      i1l1391 043D                                        i1l1199 01DE  
                                      i1l1551 000F                                        i1l1393 043E  
                                      i1l1553 0014                                        i1l1395 0440  
                                      i1l1547 0006                                        i1l1397 0442  
                                      i1l1389 0438                                        i1l1549 000A  
                                      i1l1399 0444                                        _OSCCON 0099  
                                 ?_ClearDigit 0070                                     ??_Display 0040  
                                   ??___awdiv 0076                                     ??___awmod 003B  
                            ___awdiv@quotient 0079                               ___awmod@divisor 0037  
                             ___awmod@counter 003C                                        _toggle 007B  
                           ?_CLOCK_Initialize 0070                            ??_CLOCK_Initialize 0072  
                            SetSegments@digit 0074       INT_SetInterruptHandler@InterruptHandler 0072  
                              ??_Tmr1CallBack 0070                           __end_of_SetSegments 01D5  
                            ?_TMR1_Initialize 0070                             _SYSTEM_Initialize 0449  
                     __end_of__initialization 0024                            ?_SYSTEM_Initialize 0070  
                              __pcstackCOMMON 0070                           ??_SYSTEM_Initialize 0074  
                              _OPTION_REGbits 0095                     __end_of_SYSTEM_Initialize 0456  
                                  __pbssBANK0 0020                ?_TMR1_OverflowCallbackRegister 0072  
                                  __pmaintext 037E                                    __pintentry 0004  
                                 _SetSegments 0028                           _TMR1_PeriodCountSet 0000  
                                ??_TMR1_Write 0072                      __end_of_TMR1_OverflowISR 0438  
                                     _Display 02CC                                       ___awdiv 026D  
                                     ___awmod 032A                          __end_of_Tmr1CallBack 026D  
                          __end_of_TMR1_Write 0449                                       __ptext1 0449  
                                     __ptext2 0409                                       __ptext3 0473  
                                     __ptext4 03EC                                       __ptext5 0462  
                                     __ptext6 0479                                       __ptext7 047F  
                                     __ptext8 02CC                                       __ptext9 032A  
                                   _T1CONbits 0018                              ___awmod@dividend 0039  
                                     _hundred 0022                      ??_PIN_MANAGER_Initialize 0072  
                     _INT_SetInterruptHandler 0479                                       clrloop0 046E  
                        end_of_initialization 0024                                  ??_ClearDigit 0072  
                             Display@hundreds 0047                                     _PORTAbits 000C  
                                   _PORTBbits 000D                                     _PORTCbits 000E  
                                   _TMR1_Stop 0000                         _TMR1_OverflowCallback 004D  
                          __end_of_ClearDigit 03EC  TMR1_OverflowCallbackRegister@CallbackHandler 0072  
                __end_of_INTERRUPT_Initialize 046D                     ??_INT_SetInterruptHandler 0074  
                             ClearDigit@digit 0072                           start_initialization 001B  
                          TMR1_Write@timerVal 0070                                  SetSegments@a 0072  
             ??_TMR1_OverflowCallbackRegister 0074                                  ?_SetSegments 0072  
                                 __pbssCOMMON 007B                                     ___latbits 0002  
                               __pcstackBANK0 0037                             ?_TMR1_OverflowISR 0070  
                                _Tmr1CallBack 01D5                            ??_TMR1_OverflowISR 0072  
                                    ?_Display 003E                                     __pnvBANK0 004D  
                      _PIN_MANAGER_Initialize 03EC                                      ?___awdiv 0072  
                                    ?___awmod 0037                  ??_INTERRUPT_InterruptManager 0072  
                        _INTERRUPT_Initialize 0462                              _CLOCK_Initialize 047F  
                                   clear_ram0 046D                                      _PIE1bits 0091  
                                    _PIR1bits 0011                                      Display@a 003E  
                           ??_TMR1_Initialize 0074                         ?_INTERRUPT_Initialize 0070  
                       _TMR1_InterruptHandler 0020                                      __ptext10 026D  
                                    __ptext11 0028                                      __ptext12 03C9  
                                  _T1GCONbits 0019                                      __ptext14 0422  
                                    __ptext15 0485                                      __ptext16 01D5  
                                    __ptext17 0438          __end_of_TMR1_DefaultOverflowCallback 0486  
                _TMR1_DefaultOverflowCallback 0485                                      int$flags 007E  
          __end_of_INTERRUPT_InterruptManager 0019                    _INTERRUPT_InterruptManager 0004  
                                  _INTCONbits 000B                          _INT_InterruptHandler 0051  
                      ??_INTERRUPT_Initialize 0074                                      intlevel1 0000  
                     ?_PIN_MANAGER_Initialize 0070                 ?_TMR1_DefaultOverflowCallback 0070  
                    ?_INT_SetInterruptHandler 0072                      __end_of_CLOCK_Initialize 0485  
                               __pstringtext1 0456                                   Display@ones 0043  
                                 Display@tens 0045                                    _TMR1_Start 0000  
                                  _TMR1_Write 0438                __end_of_PIN_MANAGER_Initialize 0409  
                             _TMR1_Initialize 0409  
