

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 04 10:10:33 2025

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16LF1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Version 2.40
    42                           ; Generated 17/11/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16LF1509 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     0111                     	;# 
   124     0112                     	;# 
   125     0113                     	;# 
   126     0114                     	;# 
   127     0115                     	;# 
   128     0116                     	;# 
   129     0117                     	;# 
   130     0118                     	;# 
   131     0119                     	;# 
   132     011D                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     018E                     	;# 
   136     0191                     	;# 
   137     0191                     	;# 
   138     0192                     	;# 
   139     0193                     	;# 
   140     0193                     	;# 
   141     0194                     	;# 
   142     0195                     	;# 
   143     0196                     	;# 
   144     0199                     	;# 
   145     019A                     	;# 
   146     019B                     	;# 
   147     019B                     	;# 
   148     019C                     	;# 
   149     019D                     	;# 
   150     019E                     	;# 
   151     019F                     	;# 
   152     020C                     	;# 
   153     020D                     	;# 
   154     0211                     	;# 
   155     0211                     	;# 
   156     0212                     	;# 
   157     0212                     	;# 
   158     0213                     	;# 
   159     0213                     	;# 
   160     0214                     	;# 
   161     0214                     	;# 
   162     0215                     	;# 
   163     0215                     	;# 
   164     0215                     	;# 
   165     0216                     	;# 
   166     0216                     	;# 
   167     0217                     	;# 
   168     0217                     	;# 
   169     0391                     	;# 
   170     0392                     	;# 
   171     0393                     	;# 
   172     0394                     	;# 
   173     0395                     	;# 
   174     0396                     	;# 
   175     0498                     	;# 
   176     0498                     	;# 
   177     0499                     	;# 
   178     049A                     	;# 
   179     049B                     	;# 
   180     049B                     	;# 
   181     049C                     	;# 
   182     049D                     	;# 
   183     049E                     	;# 
   184     049F                     	;# 
   185     0611                     	;# 
   186     0612                     	;# 
   187     0613                     	;# 
   188     0613                     	;# 
   189     0614                     	;# 
   190     0615                     	;# 
   191     0616                     	;# 
   192     0616                     	;# 
   193     0617                     	;# 
   194     0618                     	;# 
   195     0619                     	;# 
   196     0619                     	;# 
   197     061A                     	;# 
   198     061B                     	;# 
   199     061C                     	;# 
   200     061C                     	;# 
   201     0691                     	;# 
   202     0692                     	;# 
   203     0693                     	;# 
   204     0694                     	;# 
   205     0695                     	;# 
   206     0F0F                     	;# 
   207     0F10                     	;# 
   208     0F11                     	;# 
   209     0F12                     	;# 
   210     0F13                     	;# 
   211     0F14                     	;# 
   212     0F15                     	;# 
   213     0F16                     	;# 
   214     0F17                     	;# 
   215     0F18                     	;# 
   216     0F19                     	;# 
   217     0F1A                     	;# 
   218     0F1B                     	;# 
   219     0F1C                     	;# 
   220     0F1D                     	;# 
   221     0F1E                     	;# 
   222     0F1F                     	;# 
   223     0F20                     	;# 
   224     0F21                     	;# 
   225     0F22                     	;# 
   226     0F23                     	;# 
   227     0F24                     	;# 
   228     0F25                     	;# 
   229     0F26                     	;# 
   230     0F27                     	;# 
   231     0F28                     	;# 
   232     0F29                     	;# 
   233     0F2A                     	;# 
   234     0F2B                     	;# 
   235     0F2C                     	;# 
   236     0F2D                     	;# 
   237     0F2E                     	;# 
   238     0F2F                     	;# 
   239     0F8C                     	;# 
   240     0F8D                     	;# 
   241     0F91                     	;# 
   242     0F95                     	;# 
   243     0F96                     	;# 
   244     0F97                     	;# 
   245     0F9C                     	;# 
   246     0F9D                     	;# 
   247     0F9E                     	;# 
   248     0FE3                     	;# 
   249     0FE4                     	;# 
   250     0FE5                     	;# 
   251     0FE6                     	;# 
   252     0FE7                     	;# 
   253     0FE8                     	;# 
   254     0FE9                     	;# 
   255     0FEA                     	;# 
   256     0FEB                     	;# 
   257     0FED                     	;# 
   258     0FEE                     	;# 
   259     0FEF                     	;# 
   260     0000                     	;# 
   261     0001                     	;# 
   262     0002                     	;# 
   263     0003                     	;# 
   264     0004                     	;# 
   265     0005                     	;# 
   266     0006                     	;# 
   267     0007                     	;# 
   268     0008                     	;# 
   269     0009                     	;# 
   270     000A                     	;# 
   271     000B                     	;# 
   272     000C                     	;# 
   273     000D                     	;# 
   274     000E                     	;# 
   275     0011                     	;# 
   276     0012                     	;# 
   277     0013                     	;# 
   278     0015                     	;# 
   279     0016                     	;# 
   280     0016                     	;# 
   281     0017                     	;# 
   282     0018                     	;# 
   283     0019                     	;# 
   284     001A                     	;# 
   285     001B                     	;# 
   286     001C                     	;# 
   287     008C                     	;# 
   288     008D                     	;# 
   289     008E                     	;# 
   290     0091                     	;# 
   291     0092                     	;# 
   292     0093                     	;# 
   293     0095                     	;# 
   294     0096                     	;# 
   295     0097                     	;# 
   296     0099                     	;# 
   297     009A                     	;# 
   298     009B                     	;# 
   299     009B                     	;# 
   300     009C                     	;# 
   301     009D                     	;# 
   302     009E                     	;# 
   303     009F                     	;# 
   304     010C                     	;# 
   305     010D                     	;# 
   306     010E                     	;# 
   307     0111                     	;# 
   308     0112                     	;# 
   309     0113                     	;# 
   310     0114                     	;# 
   311     0115                     	;# 
   312     0116                     	;# 
   313     0117                     	;# 
   314     0118                     	;# 
   315     0119                     	;# 
   316     011D                     	;# 
   317     018C                     	;# 
   318     018D                     	;# 
   319     018E                     	;# 
   320     0191                     	;# 
   321     0191                     	;# 
   322     0192                     	;# 
   323     0193                     	;# 
   324     0193                     	;# 
   325     0194                     	;# 
   326     0195                     	;# 
   327     0196                     	;# 
   328     0199                     	;# 
   329     019A                     	;# 
   330     019B                     	;# 
   331     019B                     	;# 
   332     019C                     	;# 
   333     019D                     	;# 
   334     019E                     	;# 
   335     019F                     	;# 
   336     020C                     	;# 
   337     020D                     	;# 
   338     0211                     	;# 
   339     0211                     	;# 
   340     0212                     	;# 
   341     0212                     	;# 
   342     0213                     	;# 
   343     0213                     	;# 
   344     0214                     	;# 
   345     0214                     	;# 
   346     0215                     	;# 
   347     0215                     	;# 
   348     0215                     	;# 
   349     0216                     	;# 
   350     0216                     	;# 
   351     0217                     	;# 
   352     0217                     	;# 
   353     0391                     	;# 
   354     0392                     	;# 
   355     0393                     	;# 
   356     0394                     	;# 
   357     0395                     	;# 
   358     0396                     	;# 
   359     0498                     	;# 
   360     0498                     	;# 
   361     0499                     	;# 
   362     049A                     	;# 
   363     049B                     	;# 
   364     049B                     	;# 
   365     049C                     	;# 
   366     049D                     	;# 
   367     049E                     	;# 
   368     049F                     	;# 
   369     0611                     	;# 
   370     0612                     	;# 
   371     0613                     	;# 
   372     0613                     	;# 
   373     0614                     	;# 
   374     0615                     	;# 
   375     0616                     	;# 
   376     0616                     	;# 
   377     0617                     	;# 
   378     0618                     	;# 
   379     0619                     	;# 
   380     0619                     	;# 
   381     061A                     	;# 
   382     061B                     	;# 
   383     061C                     	;# 
   384     061C                     	;# 
   385     0691                     	;# 
   386     0692                     	;# 
   387     0693                     	;# 
   388     0694                     	;# 
   389     0695                     	;# 
   390     0F0F                     	;# 
   391     0F10                     	;# 
   392     0F11                     	;# 
   393     0F12                     	;# 
   394     0F13                     	;# 
   395     0F14                     	;# 
   396     0F15                     	;# 
   397     0F16                     	;# 
   398     0F17                     	;# 
   399     0F18                     	;# 
   400     0F19                     	;# 
   401     0F1A                     	;# 
   402     0F1B                     	;# 
   403     0F1C                     	;# 
   404     0F1D                     	;# 
   405     0F1E                     	;# 
   406     0F1F                     	;# 
   407     0F20                     	;# 
   408     0F21                     	;# 
   409     0F22                     	;# 
   410     0F23                     	;# 
   411     0F24                     	;# 
   412     0F25                     	;# 
   413     0F26                     	;# 
   414     0F27                     	;# 
   415     0F28                     	;# 
   416     0F29                     	;# 
   417     0F2A                     	;# 
   418     0F2B                     	;# 
   419     0F2C                     	;# 
   420     0F2D                     	;# 
   421     0F2E                     	;# 
   422     0F2F                     	;# 
   423     0F8C                     	;# 
   424     0F8D                     	;# 
   425     0F91                     	;# 
   426     0F95                     	;# 
   427     0F96                     	;# 
   428     0F97                     	;# 
   429     0F9C                     	;# 
   430     0F9D                     	;# 
   431     0F9E                     	;# 
   432     0FE3                     	;# 
   433     0FE4                     	;# 
   434     0FE5                     	;# 
   435     0FE6                     	;# 
   436     0FE7                     	;# 
   437     0FE8                     	;# 
   438     0FE9                     	;# 
   439     0FEA                     	;# 
   440     0FEB                     	;# 
   441     0FED                     	;# 
   442     0FEE                     	;# 
   443     0FEF                     	;# 
   444     0000                     	;# 
   445     0001                     	;# 
   446     0002                     	;# 
   447     0003                     	;# 
   448     0004                     	;# 
   449     0005                     	;# 
   450     0006                     	;# 
   451     0007                     	;# 
   452     0008                     	;# 
   453     0009                     	;# 
   454     000A                     	;# 
   455     000B                     	;# 
   456     000C                     	;# 
   457     000D                     	;# 
   458     000E                     	;# 
   459     0011                     	;# 
   460     0012                     	;# 
   461     0013                     	;# 
   462     0015                     	;# 
   463     0016                     	;# 
   464     0016                     	;# 
   465     0017                     	;# 
   466     0018                     	;# 
   467     0019                     	;# 
   468     001A                     	;# 
   469     001B                     	;# 
   470     001C                     	;# 
   471     008C                     	;# 
   472     008D                     	;# 
   473     008E                     	;# 
   474     0091                     	;# 
   475     0092                     	;# 
   476     0093                     	;# 
   477     0095                     	;# 
   478     0096                     	;# 
   479     0097                     	;# 
   480     0099                     	;# 
   481     009A                     	;# 
   482     009B                     	;# 
   483     009B                     	;# 
   484     009C                     	;# 
   485     009D                     	;# 
   486     009E                     	;# 
   487     009F                     	;# 
   488     010C                     	;# 
   489     010D                     	;# 
   490     010E                     	;# 
   491     0111                     	;# 
   492     0112                     	;# 
   493     0113                     	;# 
   494     0114                     	;# 
   495     0115                     	;# 
   496     0116                     	;# 
   497     0117                     	;# 
   498     0118                     	;# 
   499     0119                     	;# 
   500     011D                     	;# 
   501     018C                     	;# 
   502     018D                     	;# 
   503     018E                     	;# 
   504     0191                     	;# 
   505     0191                     	;# 
   506     0192                     	;# 
   507     0193                     	;# 
   508     0193                     	;# 
   509     0194                     	;# 
   510     0195                     	;# 
   511     0196                     	;# 
   512     0199                     	;# 
   513     019A                     	;# 
   514     019B                     	;# 
   515     019B                     	;# 
   516     019C                     	;# 
   517     019D                     	;# 
   518     019E                     	;# 
   519     019F                     	;# 
   520     020C                     	;# 
   521     020D                     	;# 
   522     0211                     	;# 
   523     0211                     	;# 
   524     0212                     	;# 
   525     0212                     	;# 
   526     0213                     	;# 
   527     0213                     	;# 
   528     0214                     	;# 
   529     0214                     	;# 
   530     0215                     	;# 
   531     0215                     	;# 
   532     0215                     	;# 
   533     0216                     	;# 
   534     0216                     	;# 
   535     0217                     	;# 
   536     0217                     	;# 
   537     0391                     	;# 
   538     0392                     	;# 
   539     0393                     	;# 
   540     0394                     	;# 
   541     0395                     	;# 
   542     0396                     	;# 
   543     0498                     	;# 
   544     0498                     	;# 
   545     0499                     	;# 
   546     049A                     	;# 
   547     049B                     	;# 
   548     049B                     	;# 
   549     049C                     	;# 
   550     049D                     	;# 
   551     049E                     	;# 
   552     049F                     	;# 
   553     0611                     	;# 
   554     0612                     	;# 
   555     0613                     	;# 
   556     0613                     	;# 
   557     0614                     	;# 
   558     0615                     	;# 
   559     0616                     	;# 
   560     0616                     	;# 
   561     0617                     	;# 
   562     0618                     	;# 
   563     0619                     	;# 
   564     0619                     	;# 
   565     061A                     	;# 
   566     061B                     	;# 
   567     061C                     	;# 
   568     061C                     	;# 
   569     0691                     	;# 
   570     0692                     	;# 
   571     0693                     	;# 
   572     0694                     	;# 
   573     0695                     	;# 
   574     0F0F                     	;# 
   575     0F10                     	;# 
   576     0F11                     	;# 
   577     0F12                     	;# 
   578     0F13                     	;# 
   579     0F14                     	;# 
   580     0F15                     	;# 
   581     0F16                     	;# 
   582     0F17                     	;# 
   583     0F18                     	;# 
   584     0F19                     	;# 
   585     0F1A                     	;# 
   586     0F1B                     	;# 
   587     0F1C                     	;# 
   588     0F1D                     	;# 
   589     0F1E                     	;# 
   590     0F1F                     	;# 
   591     0F20                     	;# 
   592     0F21                     	;# 
   593     0F22                     	;# 
   594     0F23                     	;# 
   595     0F24                     	;# 
   596     0F25                     	;# 
   597     0F26                     	;# 
   598     0F27                     	;# 
   599     0F28                     	;# 
   600     0F29                     	;# 
   601     0F2A                     	;# 
   602     0F2B                     	;# 
   603     0F2C                     	;# 
   604     0F2D                     	;# 
   605     0F2E                     	;# 
   606     0F2F                     	;# 
   607     0F8C                     	;# 
   608     0F8D                     	;# 
   609     0F91                     	;# 
   610     0F95                     	;# 
   611     0F96                     	;# 
   612     0F97                     	;# 
   613     0F9C                     	;# 
   614     0F9D                     	;# 
   615     0F9E                     	;# 
   616     0FE3                     	;# 
   617     0FE4                     	;# 
   618     0FE5                     	;# 
   619     0FE6                     	;# 
   620     0FE7                     	;# 
   621     0FE8                     	;# 
   622     0FE9                     	;# 
   623     0FEA                     	;# 
   624     0FEB                     	;# 
   625     0FED                     	;# 
   626     0FEE                     	;# 
   627     0FEF                     	;# 
   628     0000                     	;# 
   629     0001                     	;# 
   630     0002                     	;# 
   631     0003                     	;# 
   632     0004                     	;# 
   633     0005                     	;# 
   634     0006                     	;# 
   635     0007                     	;# 
   636     0008                     	;# 
   637     0009                     	;# 
   638     000A                     	;# 
   639     000B                     	;# 
   640     000C                     	;# 
   641     000D                     	;# 
   642     000E                     	;# 
   643     0011                     	;# 
   644     0012                     	;# 
   645     0013                     	;# 
   646     0015                     	;# 
   647     0016                     	;# 
   648     0016                     	;# 
   649     0017                     	;# 
   650     0018                     	;# 
   651     0019                     	;# 
   652     001A                     	;# 
   653     001B                     	;# 
   654     001C                     	;# 
   655     008C                     	;# 
   656     008D                     	;# 
   657     008E                     	;# 
   658     0091                     	;# 
   659     0092                     	;# 
   660     0093                     	;# 
   661     0095                     	;# 
   662     0096                     	;# 
   663     0097                     	;# 
   664     0099                     	;# 
   665     009A                     	;# 
   666     009B                     	;# 
   667     009B                     	;# 
   668     009C                     	;# 
   669     009D                     	;# 
   670     009E                     	;# 
   671     009F                     	;# 
   672     010C                     	;# 
   673     010D                     	;# 
   674     010E                     	;# 
   675     0111                     	;# 
   676     0112                     	;# 
   677     0113                     	;# 
   678     0114                     	;# 
   679     0115                     	;# 
   680     0116                     	;# 
   681     0117                     	;# 
   682     0118                     	;# 
   683     0119                     	;# 
   684     011D                     	;# 
   685     018C                     	;# 
   686     018D                     	;# 
   687     018E                     	;# 
   688     0191                     	;# 
   689     0191                     	;# 
   690     0192                     	;# 
   691     0193                     	;# 
   692     0193                     	;# 
   693     0194                     	;# 
   694     0195                     	;# 
   695     0196                     	;# 
   696     0199                     	;# 
   697     019A                     	;# 
   698     019B                     	;# 
   699     019B                     	;# 
   700     019C                     	;# 
   701     019D                     	;# 
   702     019E                     	;# 
   703     019F                     	;# 
   704     020C                     	;# 
   705     020D                     	;# 
   706     0211                     	;# 
   707     0211                     	;# 
   708     0212                     	;# 
   709     0212                     	;# 
   710     0213                     	;# 
   711     0213                     	;# 
   712     0214                     	;# 
   713     0214                     	;# 
   714     0215                     	;# 
   715     0215                     	;# 
   716     0215                     	;# 
   717     0216                     	;# 
   718     0216                     	;# 
   719     0217                     	;# 
   720     0217                     	;# 
   721     0391                     	;# 
   722     0392                     	;# 
   723     0393                     	;# 
   724     0394                     	;# 
   725     0395                     	;# 
   726     0396                     	;# 
   727     0498                     	;# 
   728     0498                     	;# 
   729     0499                     	;# 
   730     049A                     	;# 
   731     049B                     	;# 
   732     049B                     	;# 
   733     049C                     	;# 
   734     049D                     	;# 
   735     049E                     	;# 
   736     049F                     	;# 
   737     0611                     	;# 
   738     0612                     	;# 
   739     0613                     	;# 
   740     0613                     	;# 
   741     0614                     	;# 
   742     0615                     	;# 
   743     0616                     	;# 
   744     0616                     	;# 
   745     0617                     	;# 
   746     0618                     	;# 
   747     0619                     	;# 
   748     0619                     	;# 
   749     061A                     	;# 
   750     061B                     	;# 
   751     061C                     	;# 
   752     061C                     	;# 
   753     0691                     	;# 
   754     0692                     	;# 
   755     0693                     	;# 
   756     0694                     	;# 
   757     0695                     	;# 
   758     0F0F                     	;# 
   759     0F10                     	;# 
   760     0F11                     	;# 
   761     0F12                     	;# 
   762     0F13                     	;# 
   763     0F14                     	;# 
   764     0F15                     	;# 
   765     0F16                     	;# 
   766     0F17                     	;# 
   767     0F18                     	;# 
   768     0F19                     	;# 
   769     0F1A                     	;# 
   770     0F1B                     	;# 
   771     0F1C                     	;# 
   772     0F1D                     	;# 
   773     0F1E                     	;# 
   774     0F1F                     	;# 
   775     0F20                     	;# 
   776     0F21                     	;# 
   777     0F22                     	;# 
   778     0F23                     	;# 
   779     0F24                     	;# 
   780     0F25                     	;# 
   781     0F26                     	;# 
   782     0F27                     	;# 
   783     0F28                     	;# 
   784     0F29                     	;# 
   785     0F2A                     	;# 
   786     0F2B                     	;# 
   787     0F2C                     	;# 
   788     0F2D                     	;# 
   789     0F2E                     	;# 
   790     0F2F                     	;# 
   791     0F8C                     	;# 
   792     0F8D                     	;# 
   793     0F91                     	;# 
   794     0F95                     	;# 
   795     0F96                     	;# 
   796     0F97                     	;# 
   797     0F9C                     	;# 
   798     0F9D                     	;# 
   799     0F9E                     	;# 
   800     0FE3                     	;# 
   801     0FE4                     	;# 
   802     0FE5                     	;# 
   803     0FE6                     	;# 
   804     0FE7                     	;# 
   805     0FE8                     	;# 
   806     0FE9                     	;# 
   807     0FEA                     	;# 
   808     0FEB                     	;# 
   809     0FED                     	;# 
   810     0FEE                     	;# 
   811     0FEF                     	;# 
   812     0000                     	;# 
   813     0001                     	;# 
   814     0002                     	;# 
   815     0003                     	;# 
   816     0004                     	;# 
   817     0005                     	;# 
   818     0006                     	;# 
   819     0007                     	;# 
   820     0008                     	;# 
   821     0009                     	;# 
   822     000A                     	;# 
   823     000B                     	;# 
   824     000C                     	;# 
   825     000D                     	;# 
   826     000E                     	;# 
   827     0011                     	;# 
   828     0012                     	;# 
   829     0013                     	;# 
   830     0015                     	;# 
   831     0016                     	;# 
   832     0016                     	;# 
   833     0017                     	;# 
   834     0018                     	;# 
   835     0019                     	;# 
   836     001A                     	;# 
   837     001B                     	;# 
   838     001C                     	;# 
   839     008C                     	;# 
   840     008D                     	;# 
   841     008E                     	;# 
   842     0091                     	;# 
   843     0092                     	;# 
   844     0093                     	;# 
   845     0095                     	;# 
   846     0096                     	;# 
   847     0097                     	;# 
   848     0099                     	;# 
   849     009A                     	;# 
   850     009B                     	;# 
   851     009B                     	;# 
   852     009C                     	;# 
   853     009D                     	;# 
   854     009E                     	;# 
   855     009F                     	;# 
   856     010C                     	;# 
   857     010D                     	;# 
   858     010E                     	;# 
   859     0111                     	;# 
   860     0112                     	;# 
   861     0113                     	;# 
   862     0114                     	;# 
   863     0115                     	;# 
   864     0116                     	;# 
   865     0117                     	;# 
   866     0118                     	;# 
   867     0119                     	;# 
   868     011D                     	;# 
   869     018C                     	;# 
   870     018D                     	;# 
   871     018E                     	;# 
   872     0191                     	;# 
   873     0191                     	;# 
   874     0192                     	;# 
   875     0193                     	;# 
   876     0193                     	;# 
   877     0194                     	;# 
   878     0195                     	;# 
   879     0196                     	;# 
   880     0199                     	;# 
   881     019A                     	;# 
   882     019B                     	;# 
   883     019B                     	;# 
   884     019C                     	;# 
   885     019D                     	;# 
   886     019E                     	;# 
   887     019F                     	;# 
   888     020C                     	;# 
   889     020D                     	;# 
   890     0211                     	;# 
   891     0211                     	;# 
   892     0212                     	;# 
   893     0212                     	;# 
   894     0213                     	;# 
   895     0213                     	;# 
   896     0214                     	;# 
   897     0214                     	;# 
   898     0215                     	;# 
   899     0215                     	;# 
   900     0215                     	;# 
   901     0216                     	;# 
   902     0216                     	;# 
   903     0217                     	;# 
   904     0217                     	;# 
   905     0391                     	;# 
   906     0392                     	;# 
   907     0393                     	;# 
   908     0394                     	;# 
   909     0395                     	;# 
   910     0396                     	;# 
   911     0498                     	;# 
   912     0498                     	;# 
   913     0499                     	;# 
   914     049A                     	;# 
   915     049B                     	;# 
   916     049B                     	;# 
   917     049C                     	;# 
   918     049D                     	;# 
   919     049E                     	;# 
   920     049F                     	;# 
   921     0611                     	;# 
   922     0612                     	;# 
   923     0613                     	;# 
   924     0613                     	;# 
   925     0614                     	;# 
   926     0615                     	;# 
   927     0616                     	;# 
   928     0616                     	;# 
   929     0617                     	;# 
   930     0618                     	;# 
   931     0619                     	;# 
   932     0619                     	;# 
   933     061A                     	;# 
   934     061B                     	;# 
   935     061C                     	;# 
   936     061C                     	;# 
   937     0691                     	;# 
   938     0692                     	;# 
   939     0693                     	;# 
   940     0694                     	;# 
   941     0695                     	;# 
   942     0F0F                     	;# 
   943     0F10                     	;# 
   944     0F11                     	;# 
   945     0F12                     	;# 
   946     0F13                     	;# 
   947     0F14                     	;# 
   948     0F15                     	;# 
   949     0F16                     	;# 
   950     0F17                     	;# 
   951     0F18                     	;# 
   952     0F19                     	;# 
   953     0F1A                     	;# 
   954     0F1B                     	;# 
   955     0F1C                     	;# 
   956     0F1D                     	;# 
   957     0F1E                     	;# 
   958     0F1F                     	;# 
   959     0F20                     	;# 
   960     0F21                     	;# 
   961     0F22                     	;# 
   962     0F23                     	;# 
   963     0F24                     	;# 
   964     0F25                     	;# 
   965     0F26                     	;# 
   966     0F27                     	;# 
   967     0F28                     	;# 
   968     0F29                     	;# 
   969     0F2A                     	;# 
   970     0F2B                     	;# 
   971     0F2C                     	;# 
   972     0F2D                     	;# 
   973     0F2E                     	;# 
   974     0F2F                     	;# 
   975     0F8C                     	;# 
   976     0F8D                     	;# 
   977     0F91                     	;# 
   978     0F95                     	;# 
   979     0F96                     	;# 
   980     0F97                     	;# 
   981     0F9C                     	;# 
   982     0F9D                     	;# 
   983     0F9E                     	;# 
   984     0FE3                     	;# 
   985     0FE4                     	;# 
   986     0FE5                     	;# 
   987     0FE6                     	;# 
   988     0FE7                     	;# 
   989     0FE8                     	;# 
   990     0FE9                     	;# 
   991     0FEA                     	;# 
   992     0FEB                     	;# 
   993     0FED                     	;# 
   994     0FEE                     	;# 
   995     0FEF                     	;# 
   996     0000                     	;# 
   997     0001                     	;# 
   998     0002                     	;# 
   999     0003                     	;# 
  1000     0004                     	;# 
  1001     0005                     	;# 
  1002     0006                     	;# 
  1003     0007                     	;# 
  1004     0008                     	;# 
  1005     0009                     	;# 
  1006     000A                     	;# 
  1007     000B                     	;# 
  1008     000C                     	;# 
  1009     000D                     	;# 
  1010     000E                     	;# 
  1011     0011                     	;# 
  1012     0012                     	;# 
  1013     0013                     	;# 
  1014     0015                     	;# 
  1015     0016                     	;# 
  1016     0016                     	;# 
  1017     0017                     	;# 
  1018     0018                     	;# 
  1019     0019                     	;# 
  1020     001A                     	;# 
  1021     001B                     	;# 
  1022     001C                     	;# 
  1023     008C                     	;# 
  1024     008D                     	;# 
  1025     008E                     	;# 
  1026     0091                     	;# 
  1027     0092                     	;# 
  1028     0093                     	;# 
  1029     0095                     	;# 
  1030     0096                     	;# 
  1031     0097                     	;# 
  1032     0099                     	;# 
  1033     009A                     	;# 
  1034     009B                     	;# 
  1035     009B                     	;# 
  1036     009C                     	;# 
  1037     009D                     	;# 
  1038     009E                     	;# 
  1039     009F                     	;# 
  1040     010C                     	;# 
  1041     010D                     	;# 
  1042     010E                     	;# 
  1043     0111                     	;# 
  1044     0112                     	;# 
  1045     0113                     	;# 
  1046     0114                     	;# 
  1047     0115                     	;# 
  1048     0116                     	;# 
  1049     0117                     	;# 
  1050     0118                     	;# 
  1051     0119                     	;# 
  1052     011D                     	;# 
  1053     018C                     	;# 
  1054     018D                     	;# 
  1055     018E                     	;# 
  1056     0191                     	;# 
  1057     0191                     	;# 
  1058     0192                     	;# 
  1059     0193                     	;# 
  1060     0193                     	;# 
  1061     0194                     	;# 
  1062     0195                     	;# 
  1063     0196                     	;# 
  1064     0199                     	;# 
  1065     019A                     	;# 
  1066     019B                     	;# 
  1067     019B                     	;# 
  1068     019C                     	;# 
  1069     019D                     	;# 
  1070     019E                     	;# 
  1071     019F                     	;# 
  1072     020C                     	;# 
  1073     020D                     	;# 
  1074     0211                     	;# 
  1075     0211                     	;# 
  1076     0212                     	;# 
  1077     0212                     	;# 
  1078     0213                     	;# 
  1079     0213                     	;# 
  1080     0214                     	;# 
  1081     0214                     	;# 
  1082     0215                     	;# 
  1083     0215                     	;# 
  1084     0215                     	;# 
  1085     0216                     	;# 
  1086     0216                     	;# 
  1087     0217                     	;# 
  1088     0217                     	;# 
  1089     0391                     	;# 
  1090     0392                     	;# 
  1091     0393                     	;# 
  1092     0394                     	;# 
  1093     0395                     	;# 
  1094     0396                     	;# 
  1095     0498                     	;# 
  1096     0498                     	;# 
  1097     0499                     	;# 
  1098     049A                     	;# 
  1099     049B                     	;# 
  1100     049B                     	;# 
  1101     049C                     	;# 
  1102     049D                     	;# 
  1103     049E                     	;# 
  1104     049F                     	;# 
  1105     0611                     	;# 
  1106     0612                     	;# 
  1107     0613                     	;# 
  1108     0613                     	;# 
  1109     0614                     	;# 
  1110     0615                     	;# 
  1111     0616                     	;# 
  1112     0616                     	;# 
  1113     0617                     	;# 
  1114     0618                     	;# 
  1115     0619                     	;# 
  1116     0619                     	;# 
  1117     061A                     	;# 
  1118     061B                     	;# 
  1119     061C                     	;# 
  1120     061C                     	;# 
  1121     0691                     	;# 
  1122     0692                     	;# 
  1123     0693                     	;# 
  1124     0694                     	;# 
  1125     0695                     	;# 
  1126     0F0F                     	;# 
  1127     0F10                     	;# 
  1128     0F11                     	;# 
  1129     0F12                     	;# 
  1130     0F13                     	;# 
  1131     0F14                     	;# 
  1132     0F15                     	;# 
  1133     0F16                     	;# 
  1134     0F17                     	;# 
  1135     0F18                     	;# 
  1136     0F19                     	;# 
  1137     0F1A                     	;# 
  1138     0F1B                     	;# 
  1139     0F1C                     	;# 
  1140     0F1D                     	;# 
  1141     0F1E                     	;# 
  1142     0F1F                     	;# 
  1143     0F20                     	;# 
  1144     0F21                     	;# 
  1145     0F22                     	;# 
  1146     0F23                     	;# 
  1147     0F24                     	;# 
  1148     0F25                     	;# 
  1149     0F26                     	;# 
  1150     0F27                     	;# 
  1151     0F28                     	;# 
  1152     0F29                     	;# 
  1153     0F2A                     	;# 
  1154     0F2B                     	;# 
  1155     0F2C                     	;# 
  1156     0F2D                     	;# 
  1157     0F2E                     	;# 
  1158     0F2F                     	;# 
  1159     0F8C                     	;# 
  1160     0F8D                     	;# 
  1161     0F91                     	;# 
  1162     0F95                     	;# 
  1163     0F96                     	;# 
  1164     0F97                     	;# 
  1165     0F9C                     	;# 
  1166     0F9D                     	;# 
  1167     0F9E                     	;# 
  1168     0FE3                     	;# 
  1169     0FE4                     	;# 
  1170     0FE5                     	;# 
  1171     0FE6                     	;# 
  1172     0FE7                     	;# 
  1173     0FE8                     	;# 
  1174     0FE9                     	;# 
  1175     0FEA                     	;# 
  1176     0FEB                     	;# 
  1177     0FED                     	;# 
  1178     0FEE                     	;# 
  1179     0FEF                     	;# 
  1180                           
  1181 ;; Function _IO_RA0_DefaultInterruptHandler is unused but had its address taken
  1182     0000                     
  1183 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1184     0000                     
  1185 ;; Function _TMR1_Start is unused but had its address taken
  1186     0000                     
  1187 ;; Function _TMR1_Stop is unused but had its address taken
  1188     0000                     
  1189 ;; Function _TMR1_PeriodCountSet is unused but had its address taken
  1190     0000                     
  1191 ;; Function _RA0Callback is unused but had its address taken
  1192     0000                     
  1193                           	psect	idataBANK0
  1194     0003                     __pidataBANK0:
  1195                           
  1196                           ;initializer for _RA0Value
  1197     0003  3401               	retlw	1
  1198                           
  1199                           	psect	stringtext1
  1200     07D0                     __pstringtext1:
  1201     07D0                     _tmr1:
  1202     07D0  3483               	retlw	low _TMR1_Initialize
  1203     07D1  3407               	retlw	high _TMR1_Initialize
  1204     07D2  3400               	retlw	0
  1205     07D3  3400               	retlw	0
  1206     07D4  3400               	retlw	0
  1207     07D5  3400               	retlw	0
  1208     07D6  3400               	retlw	0
  1209     07D7  3400               	retlw	0
  1210     07D8  34EE               	retlw	low _TMR1_OverflowCallbackRegister
  1211     07D9  3407               	retlw	high _TMR1_OverflowCallbackRegister
  1212     07DA  3400               	retlw	0
  1213     07DB  3400               	retlw	0
  1214     07DC                     __end_of_tmr1:
  1215                           
  1216                           	psect	nvBANK0
  1217     0056                     __pnvBANK0:
  1218     0056                     _TMR1_OverflowCallback:
  1219     0056                     	ds	2
  1220     0058                     _timer1ReloadVal:
  1221     0058                     	ds	2
  1222     005A                     _INT_InterruptHandler:
  1223     005A                     	ds	2
  1224     005C                     _IO_RA0_InterruptHandler:
  1225     005C                     	ds	2
  1226     000D                     _PORTBbits	set	13
  1227     000E                     _PORTCbits	set	14
  1228     000C                     _PORTAbits	set	12
  1229     0019                     _T1GCONbits	set	25
  1230     0018                     _T1CONbits	set	24
  1231     0018                     _T1CON	set	24
  1232     0016                     _TMR1L	set	22
  1233     0017                     _TMR1H	set	23
  1234     0019                     _T1GCON	set	25
  1235     0011                     _PIR1bits	set	17
  1236     000B                     _INTCONbits	set	11
  1237     0091                     _PIE1bits	set	145
  1238     0095                     _OPTION_REGbits	set	149
  1239     008E                     _TRISC	set	142
  1240     008D                     _TRISB	set	141
  1241     008C                     _TRISA	set	140
  1242     0099                     _OSCCON	set	153
  1243     010E                     _LATC	set	270
  1244     010D                     _LATB	set	269
  1245     010C                     _LATA	set	268
  1246     0116                     _BORCON	set	278
  1247     018E                     _ANSELC	set	398
  1248     018D                     _ANSELB	set	397
  1249     018C                     _ANSELA	set	396
  1250     020D                     _WPUB	set	525
  1251     020C                     _WPUA	set	524
  1252     0393                     _IOCAFbits	set	915
  1253     0396                     _IOCBF	set	918
  1254     0395                     _IOCBN	set	917
  1255     0394                     _IOCBP	set	916
  1256     0393                     _IOCAF	set	915
  1257     0392                     _IOCAN	set	914
  1258     0391                     _IOCAP	set	913
  1259                           
  1260                           	psect	cinit
  1261     001B                     start_initialization:	
  1262                           ; #config settings
  1263                           
  1264     001B                     __initialization:
  1265                           
  1266                           ; Initialize objects allocated to BANK0
  1267     001B  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  1268     001E  00DE               	movwf	__pdataBANK0& (0+127)
  1269                           
  1270                           ; Clear objects allocated to BANK0
  1271     001F  303D               	movlw	low __pbssBANK0
  1272     0020  0084               	movwf	4
  1273     0021  3000               	movlw	high __pbssBANK0
  1274     0022  0085               	movwf	5
  1275     0023  3019               	movlw	25
  1276     0024  3187  27E8  3180   	fcall	clear_ram0
  1277     0027                     end_of_initialization:	
  1278                           ;End of C runtime variable initialization code
  1279                           
  1280     0027                     __end_of__initialization:
  1281     0027  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1282     0028  0020               	movlb	0
  1283     0029  3187  2F04         	ljmp	_main	;jump to C main() function
  1284                           
  1285                           	psect	bssBANK0
  1286     003D                     __pbssBANK0:
  1287     003D                     _TMR1_InterruptHandler:
  1288     003D                     	ds	2
  1289     003F                     _counter:
  1290     003F                     	ds	1
  1291     0040                     _toggle:
  1292     0040                     	ds	1
  1293     0041                     _hundred:
  1294     0041                     	ds	7
  1295     0048                     _ten:
  1296     0048                     	ds	7
  1297     004F                     _one:
  1298     004F                     	ds	7
  1299                           
  1300                           	psect	dataBANK0
  1301     005E                     __pdataBANK0:
  1302     005E                     _RA0Value:
  1303     005E                     	ds	1
  1304                           
  1305                           	psect	clrtext
  1306     07E8                     clear_ram0:	
  1307                           ;	Called with FSR0 containing the base address, and
  1308                           ;	WREG with the size to clear
  1309                           
  1310     07E8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1311     07E9                     clrloop0:
  1312     07E9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1313     07EA  3101               	addfsr 0,1
  1314     07EB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1315     07EC  2FE9               	goto	clrloop0	;have we reached the end yet?
  1316     07ED  3400               	retlw	0	;all done for this memory range, return
  1317                           
  1318                           	psect	cstackBANK1
  1319     00A0                     __pcstackBANK1:
  1320     00A0                     ?___awmod:
  1321     00A0                     ___awmod@divisor:	
  1322                           ; 2 bytes @ 0x0
  1323                           
  1324                           
  1325                           ; 2 bytes @ 0x0
  1326     00A0                     	ds	2
  1327     00A2                     ___awmod@dividend:
  1328                           
  1329                           ; 2 bytes @ 0x2
  1330     00A2                     	ds	2
  1331     00A4                     ?_Display:
  1332     00A4                     Display@a:	
  1333                           ; 1 bytes @ 0x4
  1334                           
  1335                           
  1336                           ; 2 bytes @ 0x4
  1337     00A4                     	ds	2
  1338     00A6                     ??_Display:
  1339                           
  1340                           ; 1 bytes @ 0x6
  1341     00A6                     	ds	3
  1342     00A9                     Display@ones:
  1343                           
  1344                           ; 2 bytes @ 0x9
  1345     00A9                     	ds	2
  1346     00AB                     Display@tens:
  1347                           
  1348                           ; 2 bytes @ 0xB
  1349     00AB                     	ds	2
  1350     00AD                     Display@hundreds:
  1351                           
  1352                           ; 2 bytes @ 0xD
  1353     00AD                     	ds	2
  1354     00AF                     ??_main:
  1355                           
  1356                           ; 1 bytes @ 0xF
  1357     00AF                     	ds	2
  1358                           
  1359                           	psect	cstackCOMMON
  1360     0070                     __pcstackCOMMON:
  1361     0070                     ?_TMR1_Initialize:
  1362     0070                     ?_INTERRUPT_Initialize:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365     0070                     ?_TMR1_OverflowISR:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368     0070                     ?_TMR1_DefaultOverflowCallback:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371     0070                     ??_TMR1_DefaultOverflowCallback:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374     0070                     ?_CLOCK_Initialize:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377     0070                     ?_PIN_MANAGER_Initialize:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380     0070                     ?_SYSTEM_Initialize:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383     0070                     ?_INTERRUPT_InterruptManager:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386     0070                     ?_TMR1_Write:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389     0070                     ?_ClearDigit:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392     0070                     ?_Tmr1CallBack:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395     0070                     ?i1_SetSegments:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398     0070                     ?_main:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401     0070                     ?i1___awdiv:	
  1402                           ; 2 bytes @ 0x0
  1403                           
  1404     0070                     TMR1_Write@timerVal:	
  1405                           ; 2 bytes @ 0x0
  1406                           
  1407     0070                     i1SetSegments@a:	
  1408                           ; 2 bytes @ 0x0
  1409                           
  1410     0070                     i1___awdiv@divisor:	
  1411                           ; 2 bytes @ 0x0
  1412                           
  1413                           
  1414                           ; 2 bytes @ 0x0
  1415     0070                     	ds	2
  1416     0072                     ??_TMR1_Write:
  1417     0072                     i1SetSegments@blank:	
  1418                           ; 1 bytes @ 0x2
  1419                           
  1420     0072                     i1___awdiv@dividend:	
  1421                           ; 1 bytes @ 0x2
  1422                           
  1423                           
  1424                           ; 2 bytes @ 0x2
  1425     0072                     	ds	1
  1426     0073                     ??i1_SetSegments:
  1427     0073                     i1SetSegments@digit:	
  1428                           ; 1 bytes @ 0x3
  1429                           
  1430                           
  1431                           ; 1 bytes @ 0x3
  1432     0073                     	ds	1
  1433     0074                     ??i1___awdiv:
  1434                           
  1435                           ; 1 bytes @ 0x4
  1436     0074                     	ds	1
  1437     0075                     i1___awdiv@counter:
  1438                           
  1439                           ; 1 bytes @ 0x5
  1440     0075                     	ds	1
  1441     0076                     i1___awdiv@sign:
  1442                           
  1443                           ; 1 bytes @ 0x6
  1444     0076                     	ds	1
  1445     0077                     i1___awdiv@quotient:
  1446                           
  1447                           ; 2 bytes @ 0x7
  1448     0077                     	ds	2
  1449     0079                     ?i1___awmod:
  1450     0079                     i1___awmod@divisor:	
  1451                           ; 2 bytes @ 0x9
  1452                           
  1453                           
  1454                           ; 2 bytes @ 0x9
  1455     0079                     	ds	2
  1456     007B                     i1___awmod@dividend:
  1457                           
  1458                           ; 2 bytes @ 0xB
  1459     007B                     	ds	2
  1460     007D                     ??i1___awmod:
  1461                           
  1462                           ; 1 bytes @ 0xD
  1463     007D                     	ds	1
  1464     007E                     ??_TMR1_OverflowISR:
  1465     007E                     ??_INTERRUPT_InterruptManager:	
  1466                           ; 1 bytes @ 0xE
  1467                           
  1468                           
  1469                           	psect	cstackBANK0
  1470     0020                     __pcstackBANK0:	
  1471                           ; 1 bytes @ 0xE
  1472                           
  1473     0020                     i1___awmod@counter:
  1474                           
  1475                           ; 1 bytes @ 0x0
  1476     0020                     	ds	1
  1477     0021                     i1___awmod@sign:
  1478                           
  1479                           ; 1 bytes @ 0x1
  1480     0021                     	ds	1
  1481     0022                     ?i1_Display:
  1482     0022                     i1Display@a:	
  1483                           ; 1 bytes @ 0x2
  1484                           
  1485                           
  1486                           ; 2 bytes @ 0x2
  1487     0022                     	ds	2
  1488     0024                     ??i1_Display:
  1489                           
  1490                           ; 1 bytes @ 0x4
  1491     0024                     	ds	3
  1492     0027                     i1Display@ones:
  1493                           
  1494                           ; 2 bytes @ 0x7
  1495     0027                     	ds	2
  1496     0029                     i1Display@tens:
  1497                           
  1498                           ; 2 bytes @ 0x9
  1499     0029                     	ds	2
  1500     002B                     i1Display@hundreds:
  1501                           
  1502                           ; 2 bytes @ 0xB
  1503     002B                     	ds	2
  1504     002D                     ??_Tmr1CallBack:
  1505                           
  1506                           ; 1 bytes @ 0xD
  1507     002D                     	ds	3
  1508     0030                     _Tmr1CallBack$1136:
  1509                           
  1510                           ; 1 bytes @ 0x10
  1511     0030                     	ds	1
  1512     0031                     ?_IO_RA0_SetInterruptHandler:
  1513     0031                     ?_INT_SetInterruptHandler:	
  1514                           ; 1 bytes @ 0x11
  1515                           
  1516     0031                     ?_TMR1_OverflowCallbackRegister:	
  1517                           ; 1 bytes @ 0x11
  1518                           
  1519     0031                     ??_CLOCK_Initialize:	
  1520                           ; 1 bytes @ 0x11
  1521                           
  1522     0031                     ??_ClearDigit:	
  1523                           ; 1 bytes @ 0x11
  1524                           
  1525     0031                     ?_SetSegments:	
  1526                           ; 1 bytes @ 0x11
  1527                           
  1528     0031                     ?___awdiv:	
  1529                           ; 1 bytes @ 0x11
  1530                           
  1531     0031                     ClearDigit@digit:	
  1532                           ; 2 bytes @ 0x11
  1533                           
  1534     0031                     IO_RA0_SetInterruptHandler@InterruptHandler:	
  1535                           ; 1 bytes @ 0x11
  1536                           
  1537     0031                     INT_SetInterruptHandler@InterruptHandler:	
  1538                           ; 2 bytes @ 0x11
  1539                           
  1540     0031                     TMR1_OverflowCallbackRegister@CallbackHandler:	
  1541                           ; 2 bytes @ 0x11
  1542                           
  1543     0031                     SetSegments@a:	
  1544                           ; 2 bytes @ 0x11
  1545                           
  1546     0031                     ___awdiv@divisor:	
  1547                           ; 2 bytes @ 0x11
  1548                           
  1549                           
  1550                           ; 2 bytes @ 0x11
  1551     0031                     	ds	2
  1552     0033                     ??_IO_RA0_SetInterruptHandler:
  1553     0033                     ??_TMR1_Initialize:	
  1554                           ; 1 bytes @ 0x13
  1555                           
  1556     0033                     ??_INTERRUPT_Initialize:	
  1557                           ; 1 bytes @ 0x13
  1558                           
  1559     0033                     ??_INT_SetInterruptHandler:	
  1560                           ; 1 bytes @ 0x13
  1561                           
  1562     0033                     ??_TMR1_OverflowCallbackRegister:	
  1563                           ; 1 bytes @ 0x13
  1564                           
  1565     0033                     ??_PIN_MANAGER_Initialize:	
  1566                           ; 1 bytes @ 0x13
  1567                           
  1568     0033                     ??_SYSTEM_Initialize:	
  1569                           ; 1 bytes @ 0x13
  1570                           
  1571     0033                     SetSegments@blank:	
  1572                           ; 1 bytes @ 0x13
  1573                           
  1574     0033                     ___awdiv@dividend:	
  1575                           ; 1 bytes @ 0x13
  1576                           
  1577                           
  1578                           ; 2 bytes @ 0x13
  1579     0033                     	ds	1
  1580     0034                     ??_SetSegments:
  1581     0034                     SetSegments@digit:	
  1582                           ; 1 bytes @ 0x14
  1583                           
  1584                           
  1585                           ; 1 bytes @ 0x14
  1586     0034                     	ds	1
  1587     0035                     ??___awdiv:
  1588                           
  1589                           ; 1 bytes @ 0x15
  1590     0035                     	ds	1
  1591     0036                     ___awdiv@counter:
  1592                           
  1593                           ; 1 bytes @ 0x16
  1594     0036                     	ds	1
  1595     0037                     ___awdiv@sign:
  1596                           
  1597                           ; 1 bytes @ 0x17
  1598     0037                     	ds	1
  1599     0038                     ___awdiv@quotient:
  1600                           
  1601                           ; 2 bytes @ 0x18
  1602     0038                     	ds	2
  1603     003A                     ??___awmod:
  1604                           
  1605                           ; 1 bytes @ 0x1A
  1606     003A                     	ds	1
  1607     003B                     ___awmod@counter:
  1608                           
  1609                           ; 1 bytes @ 0x1B
  1610     003B                     	ds	1
  1611     003C                     ___awmod@sign:
  1612                           
  1613                           ; 1 bytes @ 0x1C
  1614     003C                     	ds	1
  1615                           
  1616                           	psect	maintext
  1617     0704                     __pmaintext:	
  1618 ;;
  1619 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1620 ;;
  1621 ;; *************** function _main *****************
  1622 ;; Defined at:
  1623 ;;		line 258 in file "main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  2  269[None  ] int 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : B1F/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1637 ;;      Params:         0       0       0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0
  1639 ;;      Temps:          0       0       2       0       0       0       0
  1640 ;;      Totals:         0       0       2       0       0       0       0
  1641 ;;Total ram usage:        2 bytes
  1642 ;; Hardware stack levels required when called: 8
  1643 ;; This function calls:
  1644 ;;		_ClearDigit
  1645 ;;		_Display
  1646 ;;		_IO_RA0_SetInterruptHandler
  1647 ;;		_SYSTEM_Initialize
  1648 ;;		_TMR1_OverflowCallbackRegister
  1649 ;; This function is called by:
  1650 ;;		Startup code after reset
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654     0704                     _main:	
  1655                           ;psect for function _main
  1656                           
  1657     0704                     l2483:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1660                           
  1661                           
  1662                           ;main.c: 259:     SYSTEM_Initialize();
  1663     0704  3187  27C3  3187   	fcall	_SYSTEM_Initialize
  1664     0707                     l2485:
  1665                           
  1666                           ;main.c: 261:     PORTAbits.RA5 = 1;
  1667     0707  0020               	movlb	0	; select bank0
  1668     0708  168C               	bsf	12,5	;volatile
  1669     0709                     l2487:
  1670                           
  1671                           ;main.c: 263:     ClearDigit(&one);
  1672     0709  304F               	movlw	(low (_one| 0))& (0+255)
  1673     070A  3187  275F  3187   	fcall	_ClearDigit
  1674     070D                     l2489:
  1675                           
  1676                           ;main.c: 264:     ClearDigit(&ten);
  1677     070D  3048               	movlw	(low (_ten| 0))& (0+255)
  1678     070E  3187  275F  3187   	fcall	_ClearDigit
  1679     0711                     l2491:
  1680                           
  1681                           ;main.c: 265:     ClearDigit(&hundred);
  1682     0711  3041               	movlw	(low (_hundred| 0))& (0+255)
  1683     0712  3187  275F  3187   	fcall	_ClearDigit
  1684     0715                     l2493:
  1685                           
  1686                           ;main.c: 267:     one.b = 1;
  1687     0715  0020               	movlb	0	; select bank0
  1688     0716  01D0               	clrf	_one+1
  1689     0717  0AD0               	incf	_one+1,f
  1690     0718                     l2495:
  1691                           
  1692                           ;main.c: 268:     one.c = 1;
  1693     0718  01D1               	clrf	_one+2
  1694     0719  0AD1               	incf	_one+2,f
  1695     071A                     l2497:
  1696                           
  1697                           ;main.c: 274:     TMR1_OverflowCallbackRegister(Tmr1CallBack);
  1698     071A  30D2               	movlw	low _Tmr1CallBack
  1699     071B  00B1               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler
  1700     071C  3003               	movlw	high _Tmr1CallBack
  1701     071D  00B2               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler+1
  1702     071E  3187  27EE  3187   	fcall	_TMR1_OverflowCallbackRegister
  1703     0721                     l2499:
  1704                           
  1705                           ;main.c: 275:     IO_RA0_SetInterruptHandler(RA0Callback);
  1706     0721  3000               	movlw	0
  1707     0722  0020               	movlb	0	; select bank0
  1708     0723  00B1               	movwf	IO_RA0_SetInterruptHandler@InterruptHandler
  1709     0724  3000               	movlw	0
  1710     0725  00B2               	movwf	IO_RA0_SetInterruptHandler@InterruptHandler+1
  1711     0726  3187  27F4  3187   	fcall	_IO_RA0_SetInterruptHandler
  1712     0729                     l2501:
  1713                           
  1714                           ;main.c: 278:     (INTCONbits.GIE = 1);
  1715     0729  178B               	bsf	11,7	;volatile
  1716     072A                     l2503:
  1717                           
  1718                           ;main.c: 284:     (INTCONbits.PEIE = 1);
  1719     072A  170B               	bsf	11,6	;volatile
  1720     072B                     l2505:
  1721                           
  1722                           ;main.c: 301:     Display(counter);
  1723     072B  0020               	movlb	0	; select bank0
  1724     072C  083F               	movf	_counter,w
  1725     072D  0021               	movlb	1	; select bank1
  1726     072E  00AF               	movwf	??_main^(0+128)
  1727     072F  01B0               	clrf	(??_main^(0+128)+1)
  1728     0730  082F               	movf	??_main^(0+128),w
  1729     0731  00A4               	movwf	Display@a^(0+128)
  1730     0732  0830               	movf	(??_main+1)^(0+128),w
  1731     0733  00A5               	movwf	(Display@a+1)^(0+128)
  1732     0734  3184  24A0  3187   	fcall	_Display
  1733     0737                     l270:	
  1734                           ;main.c: 303:     while (1)
  1735                           
  1736     0737                     l271:	
  1737                           ;main.c: 304:     {;main.c: 305:     }
  1738                           
  1739     0737  2F37               	goto	l270
  1740     0738  3180  2819         	ljmp	start
  1741     073A                     __end_of_main:
  1742                           
  1743                           	psect	text1
  1744     07C3                     __ptext1:	
  1745 ;; *************** function _SYSTEM_Initialize *****************
  1746 ;; Defined at:
  1747 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1761 ;;      Params:         0       0       0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 7
  1768 ;; This function calls:
  1769 ;;		_CLOCK_Initialize
  1770 ;;		_INTERRUPT_Initialize
  1771 ;;		_PIN_MANAGER_Initialize
  1772 ;;		_TMR1_Initialize
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778     07C3                     _SYSTEM_Initialize:	
  1779                           ;psect for function _SYSTEM_Initialize
  1780                           
  1781     07C3                     l2113:	
  1782                           ;incstack = 0
  1783                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1784                           
  1785                           
  1786                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  1787     07C3  318F  27FA  3187   	fcall	_CLOCK_Initialize
  1788                           
  1789                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  1790     07C6  3187  273A  3187   	fcall	_PIN_MANAGER_Initialize
  1791                           
  1792                           ;mcc_generated_files/system/src/system.c: 43:     TMR1_Initialize();
  1793     07C9  3187  2783  3187   	fcall	_TMR1_Initialize
  1794                           
  1795                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
  1796     07CC  3187  27DC  3187   	fcall	_INTERRUPT_Initialize
  1797     07CF                     l83:
  1798     07CF  0008               	return
  1799     07D0                     __end_of_SYSTEM_Initialize:
  1800                           
  1801                           	psect	text2
  1802     0783                     __ptext2:	
  1803 ;; *************** function _TMR1_Initialize *****************
  1804 ;; Defined at:
  1805 ;;		line 57 in file "mcc_generated_files/timer/src/tmr1.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0, pclath, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1819 ;;      Params:         0       0       0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 6
  1826 ;; This function calls:
  1827 ;;		_TMR1_OverflowCallbackRegister
  1828 ;; This function is called by:
  1829 ;;		_SYSTEM_Initialize
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833     0783                     _TMR1_Initialize:	
  1834                           ;psect for function _TMR1_Initialize
  1835                           
  1836     0783                     l1825:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1839                           
  1840                           
  1841                           ;mcc_generated_files/timer/src/tmr1.c: 60:     T1GCON = 0x0;
  1842     0783  0020               	movlb	0	; select bank0
  1843     0784  0199               	clrf	25	;volatile
  1844     0785                     l1827:
  1845                           
  1846                           ;mcc_generated_files/timer/src/tmr1.c: 62:     TMR1H = 0xEC;
  1847     0785  30EC               	movlw	236
  1848     0786  0097               	movwf	23	;volatile
  1849     0787                     l1829:
  1850                           
  1851                           ;mcc_generated_files/timer/src/tmr1.c: 64:     TMR1L = 0x77;
  1852     0787  3077               	movlw	119
  1853     0788  0096               	movwf	22	;volatile
  1854     0789                     l1831:
  1855                           
  1856                           ;mcc_generated_files/timer/src/tmr1.c: 67:     timer1ReloadVal=((uint16_t)TMR1H << 8) | 
      +                          TMR1L;
  1857     0789  0817               	movf	23,w	;volatile
  1858     078A  00D9               	movwf	_timer1ReloadVal+1	;volatile
  1859     078B  0816               	movf	22,w	;volatile
  1860     078C  00D8               	movwf	_timer1ReloadVal	;volatile
  1861     078D                     l1833:
  1862                           
  1863                           ;mcc_generated_files/timer/src/tmr1.c: 70:     TMR1_OverflowCallbackRegister(TMR1_Defaul
      +                          tOverflowCallback);
  1864     078D  30F9               	movlw	low _TMR1_DefaultOverflowCallback
  1865     078E  00B1               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler
  1866     078F  300F               	movlw	high _TMR1_DefaultOverflowCallback
  1867     0790  00B2               	movwf	TMR1_OverflowCallbackRegister@CallbackHandler+1
  1868     0791  3187  27EE  3187   	fcall	_TMR1_OverflowCallbackRegister
  1869     0794                     l1835:
  1870                           
  1871                           ;mcc_generated_files/timer/src/tmr1.c: 73:      PIR1bits.TMR1IF = 0;
  1872     0794  0020               	movlb	0	; select bank0
  1873     0795  1011               	bcf	17,0	;volatile
  1874     0796                     l1837:
  1875                           
  1876                           ;mcc_generated_files/timer/src/tmr1.c: 75:      PIE1bits.TMR1IE = 1;
  1877     0796  0021               	movlb	1	; select bank1
  1878     0797  1411               	bsf	17,0	;volatile
  1879     0798                     l1839:
  1880                           
  1881                           ;mcc_generated_files/timer/src/tmr1.c: 78:     T1CON = 0x31;
  1882     0798  3031               	movlw	49
  1883     0799  0020               	movlb	0	; select bank0
  1884     079A  0098               	movwf	24	;volatile
  1885     079B                     l165:
  1886     079B  0008               	return
  1887     079C                     __end_of_TMR1_Initialize:
  1888                           
  1889                           	psect	text3
  1890     07EE                     __ptext3:	
  1891 ;; *************** function _TMR1_OverflowCallbackRegister *****************
  1892 ;; Defined at:
  1893 ;;		line 163 in file "mcc_generated_files/timer/src/tmr1.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  CallbackHand    2   17[BANK0 ] PTR FTN()void 
  1896 ;;		 -> Tmr1CallBack(1), TMR1_DefaultOverflowCallback(1), 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1908 ;;      Params:         0       2       0       0       0       0       0
  1909 ;;      Locals:         0       0       0       0       0       0       0
  1910 ;;      Temps:          0       0       0       0       0       0       0
  1911 ;;      Totals:         0       2       0       0       0       0       0
  1912 ;;Total ram usage:        2 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; Hardware stack levels required when called: 5
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_TMR1_Initialize
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923     07EE                     _TMR1_OverflowCallbackRegister:	
  1924                           ;psect for function _TMR1_OverflowCallbackRegister
  1925                           
  1926     07EE                     l1777:	
  1927                           ;incstack = 0
  1928                           ; Regs used in _TMR1_OverflowCallbackRegister: [wreg]
  1929                           
  1930                           
  1931                           ;mcc_generated_files/timer/src/tmr1.c: 163: void TMR1_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 164: {;mcc_generated_files/
      +                          timer/src/tmr1.c: 165:     TMR1_OverflowCallback = CallbackHandler;
  1932     07EE  0020               	movlb	0	; select bank0
  1933     07EF  0832               	movf	TMR1_OverflowCallbackRegister@CallbackHandler+1,w
  1934     07F0  00D7               	movwf	_TMR1_OverflowCallback+1
  1935     07F1  0831               	movf	TMR1_OverflowCallbackRegister@CallbackHandler,w
  1936     07F2  00D6               	movwf	_TMR1_OverflowCallback
  1937     07F3                     l198:
  1938     07F3  0008               	return
  1939     07F4                     __end_of_TMR1_OverflowCallbackRegister:
  1940                           
  1941                           	psect	text4
  1942     073A                     __ptext4:	
  1943 ;; *************** function _PIN_MANAGER_Initialize *****************
  1944 ;; Defined at:
  1945 ;;		line 39 in file "mcc_generated_files/system/src/pins.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, pclath, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1959 ;;      Params:         0       0       0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0
  1962 ;;      Totals:         0       0       0       0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 6
  1966 ;; This function calls:
  1967 ;;		_IO_RA0_SetInterruptHandler
  1968 ;; This function is called by:
  1969 ;;		_SYSTEM_Initialize
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973     073A                     _PIN_MANAGER_Initialize:	
  1974                           ;psect for function _PIN_MANAGER_Initialize
  1975                           
  1976     073A                     l1793:	
  1977                           ;incstack = 0
  1978                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1979                           
  1980                           
  1981                           ;mcc_generated_files/system/src/pins.c: 44:     LATA = 0x0;
  1982     073A  0022               	movlb	2	; select bank2
  1983     073B  018C               	clrf	12	;volatile
  1984                           
  1985                           ;mcc_generated_files/system/src/pins.c: 45:     LATB = 0x0;
  1986     073C  018D               	clrf	13	;volatile
  1987                           
  1988                           ;mcc_generated_files/system/src/pins.c: 46:     LATC = 0x0;
  1989     073D  018E               	clrf	14	;volatile
  1990     073E                     l1795:
  1991                           
  1992                           ;mcc_generated_files/system/src/pins.c: 51:     TRISA = 0x9;
  1993     073E  3009               	movlw	9
  1994     073F  0021               	movlb	1	; select bank1
  1995     0740  008C               	movwf	12	;volatile
  1996     0741                     l1797:
  1997                           
  1998                           ;mcc_generated_files/system/src/pins.c: 52:     TRISB = 0x0;
  1999     0741  018D               	clrf	13	;volatile
  2000     0742                     l1799:
  2001                           
  2002                           ;mcc_generated_files/system/src/pins.c: 53:     TRISC = 0x0;
  2003     0742  018E               	clrf	14	;volatile
  2004     0743                     l1801:
  2005                           
  2006                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELA = 0x0;
  2007     0743  0023               	movlb	3	; select bank3
  2008     0744  018C               	clrf	12	;volatile
  2009     0745                     l1803:
  2010                           
  2011                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELB = 0x0;
  2012     0745  018D               	clrf	13	;volatile
  2013     0746                     l1805:
  2014                           
  2015                           ;mcc_generated_files/system/src/pins.c: 60:     ANSELC = 0x0;
  2016     0746  018E               	clrf	14	;volatile
  2017                           
  2018                           ;mcc_generated_files/system/src/pins.c: 65:     WPUA = 0x9;
  2019     0747  3009               	movlw	9
  2020     0748  0024               	movlb	4	; select bank4
  2021     0749  008C               	movwf	12	;volatile
  2022     074A                     l1807:
  2023                           
  2024                           ;mcc_generated_files/system/src/pins.c: 66:     WPUB = 0x0;
  2025     074A  018D               	clrf	13	;volatile
  2026     074B                     l1809:
  2027                           
  2028                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  2029     074B  0021               	movlb	1	; select bank1
  2030     074C  1395               	bcf	21,7	;volatile
  2031     074D                     l1811:
  2032                           
  2033                           ;mcc_generated_files/system/src/pins.c: 91:     IOCAP = 0x0;
  2034     074D  0027               	movlb	7	; select bank7
  2035     074E  0191               	clrf	17	;volatile
  2036                           
  2037                           ;mcc_generated_files/system/src/pins.c: 92:     IOCAN = 0x1;
  2038     074F  3001               	movlw	1
  2039     0750  0092               	movwf	18	;volatile
  2040     0751                     l1813:
  2041                           
  2042                           ;mcc_generated_files/system/src/pins.c: 93:     IOCAF = 0x0;
  2043     0751  0193               	clrf	19	;volatile
  2044     0752                     l1815:
  2045                           
  2046                           ;mcc_generated_files/system/src/pins.c: 94:     IOCBP = 0x0;
  2047     0752  0194               	clrf	20	;volatile
  2048     0753                     l1817:
  2049                           
  2050                           ;mcc_generated_files/system/src/pins.c: 95:     IOCBN = 0x0;
  2051     0753  0195               	clrf	21	;volatile
  2052     0754                     l1819:
  2053                           
  2054                           ;mcc_generated_files/system/src/pins.c: 96:     IOCBF = 0x0;
  2055     0754  0196               	clrf	22	;volatile
  2056     0755                     l1821:
  2057                           
  2058                           ;mcc_generated_files/system/src/pins.c: 98:     IO_RA0_SetInterruptHandler(IO_RA0_Defaul
      +                          tInterruptHandler);
  2059     0755  3000               	movlw	0
  2060     0756  0020               	movlb	0	; select bank0
  2061     0757  00B1               	movwf	IO_RA0_SetInterruptHandler@InterruptHandler
  2062     0758  3000               	movlw	0
  2063     0759  00B2               	movwf	IO_RA0_SetInterruptHandler@InterruptHandler+1
  2064     075A  3187  27F4  3187   	fcall	_IO_RA0_SetInterruptHandler
  2065     075D                     l1823:
  2066                           
  2067                           ;mcc_generated_files/system/src/pins.c: 101:     INTCONbits.IOCIE = 1;
  2068     075D  158B               	bsf	11,3	;volatile
  2069     075E                     l58:
  2070     075E  0008               	return
  2071     075F                     __end_of_PIN_MANAGER_Initialize:
  2072                           
  2073                           	psect	text5
  2074     07F4                     __ptext5:	
  2075 ;; *************** function _IO_RA0_SetInterruptHandler *****************
  2076 ;; Defined at:
  2077 ;;		line 131 in file "mcc_generated_files/system/src/pins.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
  2080 ;;		 -> RA0Callback(1), IO_RA0_DefaultInterruptHandler(1), 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2092 ;;      Params:         0       2       0       0       0       0       0
  2093 ;;      Locals:         0       0       0       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0
  2095 ;;      Totals:         0       2       0       0       0       0       0
  2096 ;;Total ram usage:        2 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 5
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_PIN_MANAGER_Initialize
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107     07F4                     _IO_RA0_SetInterruptHandler:	
  2108                           ;psect for function _IO_RA0_SetInterruptHandler
  2109                           
  2110     07F4                     l1773:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _IO_RA0_SetInterruptHandler: [wreg]
  2113                           
  2114                           
  2115                           ;mcc_generated_files/system/src/pins.c: 132:     IO_RA0_InterruptHandler = InterruptHand
      +                          ler;
  2116     07F4  0020               	movlb	0	; select bank0
  2117     07F5  0832               	movf	IO_RA0_SetInterruptHandler@InterruptHandler+1,w
  2118     07F6  00DD               	movwf	_IO_RA0_InterruptHandler+1
  2119     07F7  0831               	movf	IO_RA0_SetInterruptHandler@InterruptHandler,w
  2120     07F8  00DC               	movwf	_IO_RA0_InterruptHandler
  2121     07F9                     l69:
  2122     07F9  0008               	return
  2123     07FA                     __end_of_IO_RA0_SetInterruptHandler:
  2124                           
  2125                           	psect	text6
  2126     07DC                     __ptext6:	
  2127 ;; *************** function _INTERRUPT_Initialize *****************
  2128 ;; Defined at:
  2129 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2143 ;;      Params:         0       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 6
  2150 ;; This function calls:
  2151 ;;		_INT_SetInterruptHandler
  2152 ;; This function is called by:
  2153 ;;		_SYSTEM_Initialize
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157     07DC                     _INTERRUPT_Initialize:	
  2158                           ;psect for function _INTERRUPT_Initialize
  2159                           
  2160     07DC                     l1841:	
  2161                           ;incstack = 0
  2162                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2163                           
  2164                           
  2165                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  2166     07DC  108B               	bcf	11,1	;volatile
  2167                           
  2168                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  2169     07DD  0021               	movlb	1	; select bank1
  2170     07DE  1715               	bsf	21,6	;volatile
  2171     07DF                     l1843:
  2172                           
  2173                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2174     07DF  3000               	movlw	0
  2175     07E0  0020               	movlb	0	; select bank0
  2176     07E1  00B1               	movwf	INT_SetInterruptHandler@InterruptHandler
  2177     07E2  3000               	movlw	0
  2178     07E3  00B2               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2179     07E4  3187  27FA  3187   	fcall	_INT_SetInterruptHandler
  2180     07E7                     l104:
  2181     07E7  0008               	return
  2182     07E8                     __end_of_INTERRUPT_Initialize:
  2183                           
  2184                           	psect	text7
  2185     07FA                     __ptext7:	
  2186 ;; *************** function _INT_SetInterruptHandler *****************
  2187 ;; Defined at:
  2188 ;;		line 97 in file "mcc_generated_files/system/src/interrupt.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
  2191 ;;		 -> INT_DefaultInterruptHandler(1), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2203 ;;      Params:         0       2       0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0
  2206 ;;      Totals:         0       2       0       0       0       0       0
  2207 ;;Total ram usage:        2 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 5
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_INTERRUPT_Initialize
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217     07FA                     _INT_SetInterruptHandler:	
  2218                           ;psect for function _INT_SetInterruptHandler
  2219                           
  2220     07FA                     l1775:	
  2221                           ;incstack = 0
  2222                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2223                           
  2224                           
  2225                           ;mcc_generated_files/system/src/interrupt.c: 98:     INT_InterruptHandler = InterruptHan
      +                          dler;
  2226     07FA  0020               	movlb	0	; select bank0
  2227     07FB  0832               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2228     07FC  00DB               	movwf	_INT_InterruptHandler+1
  2229     07FD  0831               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2230     07FE  00DA               	movwf	_INT_InterruptHandler
  2231     07FF                     l123:
  2232     07FF  0008               	return
  2233     0800                     __end_of_INT_SetInterruptHandler:
  2234                           
  2235                           	psect	text8
  2236     0FFA                     __ptext8:	
  2237 ;; *************** function _CLOCK_Initialize *****************
  2238 ;; Defined at:
  2239 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2253 ;;      Params:         0       0       0       0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0
  2256 ;;      Totals:         0       0       0       0       0       0       0
  2257 ;;Total ram usage:        0 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 5
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_SYSTEM_Initialize
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267     0FFA                     _CLOCK_Initialize:	
  2268                           ;psect for function _CLOCK_Initialize
  2269                           
  2270     0FFA                     l1789:	
  2271                           ;incstack = 0
  2272                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  2273                           
  2274                           
  2275                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (15 << 0x3)
  2276     0FFA  3078               	movlw	120
  2277     0FFB  0021               	movlb	1	; select bank1
  2278     0FFC  0099               	movwf	25	;volatile
  2279     0FFD                     l1791:
  2280                           
  2281                           ;mcc_generated_files/system/src/clock.c: 43:     BORCON = (0 << 0x7)
  2282     0FFD  0022               	movlb	2	; select bank2
  2283     0FFE  0196               	clrf	22	;volatile
  2284     0FFF                     l7:
  2285     0FFF  0008               	return
  2286     1000                     __end_of_CLOCK_Initialize:
  2287                           
  2288                           	psect	text9
  2289     04A0                     __ptext9:	
  2290 ;; *************** function _Display *****************
  2291 ;; Defined at:
  2292 ;;		line 243 in file "main.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  a               2    4[BANK1 ] int 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  hundreds        2   13[BANK1 ] int 
  2297 ;;  tens            2   11[BANK1 ] int 
  2298 ;;  ones            2    9[BANK1 ] int 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2308 ;;      Params:         0       0       2       0       0       0       0
  2309 ;;      Locals:         0       0       6       0       0       0       0
  2310 ;;      Temps:          0       0       3       0       0       0       0
  2311 ;;      Totals:         0       0      11       0       0       0       0
  2312 ;;Total ram usage:       11 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 6
  2315 ;; This function calls:
  2316 ;;		_SetSegments
  2317 ;;		___awdiv
  2318 ;;		___awmod
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324     04A0                     _Display:	
  2325                           ;psect for function _Display
  2326                           
  2327     04A0                     l2473:	
  2328                           ;incstack = 0
  2329                           ; Regs used in _Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2330                           
  2331                           
  2332                           ;main.c: 244:     int ones = a % 10;
  2333     04A0  300A               	movlw	10
  2334     04A1  0021               	movlb	1	; select bank1
  2335     04A2  00A0               	movwf	___awmod@divisor^(0+128)
  2336     04A3  3000               	movlw	0
  2337     04A4  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  2338     04A5  0825               	movf	(Display@a+1)^(0+128),w
  2339     04A6  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  2340     04A7  0824               	movf	Display@a^(0+128),w
  2341     04A8  00A2               	movwf	___awmod@dividend^(0+128)
  2342     04A9  3185  25F2  3184   	fcall	___awmod
  2343     04AC  0021               	movlb	1	; select bank1
  2344     04AD  0821               	movf	(?___awmod+1)^(0+128),w
  2345     04AE  00AA               	movwf	(Display@ones+1)^(0+128)
  2346     04AF  0820               	movf	?___awmod^(0+128),w
  2347     04B0  00A9               	movwf	Display@ones^(0+128)
  2348                           
  2349                           ;main.c: 245:     int tens = (a / 10) % 10;
  2350     04B1  300A               	movlw	10
  2351     04B2  00A0               	movwf	___awmod@divisor^(0+128)
  2352     04B3  3000               	movlw	0
  2353     04B4  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  2354     04B5  300A               	movlw	10
  2355     04B6  0020               	movlb	0	; select bank0
  2356     04B7  00B1               	movwf	___awdiv@divisor
  2357     04B8  3000               	movlw	0
  2358     04B9  00B2               	movwf	___awdiv@divisor+1
  2359     04BA  0021               	movlb	1	; select bank1
  2360     04BB  0825               	movf	(Display@a+1)^(0+128),w
  2361     04BC  0020               	movlb	0	; select bank0
  2362     04BD  00B4               	movwf	___awdiv@dividend+1
  2363     04BE  0021               	movlb	1	; select bank1
  2364     04BF  0824               	movf	Display@a^(0+128),w
  2365     04C0  0020               	movlb	0	; select bank0
  2366     04C1  00B3               	movwf	___awdiv@dividend
  2367     04C2  3185  2592  3184   	fcall	___awdiv
  2368     04C5  0020               	movlb	0	; select bank0
  2369     04C6  0832               	movf	?___awdiv+1,w
  2370     04C7  0021               	movlb	1	; select bank1
  2371     04C8  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  2372     04C9  0020               	movlb	0	; select bank0
  2373     04CA  0831               	movf	?___awdiv,w
  2374     04CB  0021               	movlb	1	; select bank1
  2375     04CC  00A2               	movwf	___awmod@dividend^(0+128)
  2376     04CD  3185  25F2  3184   	fcall	___awmod
  2377     04D0  0021               	movlb	1	; select bank1
  2378     04D1  0821               	movf	(?___awmod+1)^(0+128),w
  2379     04D2  00AC               	movwf	(Display@tens+1)^(0+128)
  2380     04D3  0820               	movf	?___awmod^(0+128),w
  2381     04D4  00AB               	movwf	Display@tens^(0+128)
  2382     04D5                     l2475:
  2383                           
  2384                           ;main.c: 246:     int hundreds = a > 99;
  2385     04D5  0825               	movf	(Display@a+1)^(0+128),w
  2386     04D6  3A80               	xorlw	128
  2387     04D7  00A6               	movwf	??_Display^(0+128)
  2388     04D8  3080               	movlw	128
  2389     04D9  0226               	subwf	??_Display^(0+128),w
  2390     04DA  1D03               	skipz
  2391     04DB  2CDE               	goto	u1455
  2392     04DC  3064               	movlw	100
  2393     04DD  0224               	subwf	Display@a^(0+128),w
  2394     04DE                     u1455:
  2395     04DE  1803               	skipnc
  2396     04DF  2CE1               	goto	u1451
  2397     04E0  2CE3               	goto	u1450
  2398     04E1                     u1451:
  2399     04E1  3001               	movlw	1
  2400     04E2  2CE4               	goto	u1460
  2401     04E3                     u1450:
  2402     04E3  3000               	movlw	0
  2403     04E4                     u1460:
  2404     04E4  0021               	movlb	1	; select bank1
  2405     04E5  00A7               	movwf	(??_Display+1)^(0+128)
  2406     04E6  01A8               	clrf	((??_Display+1)^(0+128)+1)
  2407     04E7  0827               	movf	(??_Display+1)^(0+128),w
  2408     04E8  00AD               	movwf	Display@hundreds^(0+128)
  2409     04E9  0828               	movf	(??_Display+2)^(0+128),w
  2410     04EA  00AE               	movwf	(Display@hundreds+1)^(0+128)
  2411     04EB                     l2477:
  2412                           
  2413                           ;main.c: 248:     SetSegments(&one, ones, 0);
  2414     04EB  082A               	movf	(Display@ones+1)^(0+128),w
  2415     04EC  0020               	movlb	0	; select bank0
  2416     04ED  00B2               	movwf	SetSegments@a+1
  2417     04EE  0021               	movlb	1	; select bank1
  2418     04EF  0829               	movf	Display@ones^(0+128),w
  2419     04F0  0020               	movlb	0	; select bank0
  2420     04F1  00B1               	movwf	SetSegments@a
  2421     04F2  01B3               	clrf	SetSegments@blank
  2422     04F3  304F               	movlw	(low (_one| 0))& (0+255)
  2423     04F4  3180  202B  3184   	fcall	_SetSegments
  2424     04F7                     l2479:
  2425                           
  2426                           ;main.c: 249:     SetSegments(&ten, tens, (a < 10));
  2427     04F7  0021               	movlb	1	; select bank1
  2428     04F8  082C               	movf	(Display@tens+1)^(0+128),w
  2429     04F9  0020               	movlb	0	; select bank0
  2430     04FA  00B2               	movwf	SetSegments@a+1
  2431     04FB  0021               	movlb	1	; select bank1
  2432     04FC  082B               	movf	Display@tens^(0+128),w
  2433     04FD  0020               	movlb	0	; select bank0
  2434     04FE  00B1               	movwf	SetSegments@a
  2435     04FF  0021               	movlb	1	; select bank1
  2436     0500  0825               	movf	(Display@a+1)^(0+128),w
  2437     0501  3A80               	xorlw	128
  2438     0502  00A6               	movwf	??_Display^(0+128)
  2439     0503  3080               	movlw	128
  2440     0504  0226               	subwf	??_Display^(0+128),w
  2441     0505  1D03               	skipz
  2442     0506  2D09               	goto	u1475
  2443     0507  300A               	movlw	10
  2444     0508  0224               	subwf	Display@a^(0+128),w
  2445     0509                     u1475:
  2446     0509  1C03               	skipc
  2447     050A  2D0C               	goto	u1471
  2448     050B  2D0E               	goto	u1470
  2449     050C                     u1471:
  2450     050C  3001               	movlw	1
  2451     050D  2D0F               	goto	u1480
  2452     050E                     u1470:
  2453     050E  3000               	movlw	0
  2454     050F                     u1480:
  2455     050F  0020               	movlb	0	; select bank0
  2456     0510  00B3               	movwf	SetSegments@blank
  2457     0511  3048               	movlw	(low (_ten| 0))& (0+255)
  2458     0512  3180  202B  3184   	fcall	_SetSegments
  2459     0515                     l2481:
  2460                           
  2461                           ;main.c: 250:     SetSegments(&hundred, hundreds, 0);
  2462     0515  0021               	movlb	1	; select bank1
  2463     0516  082E               	movf	(Display@hundreds+1)^(0+128),w
  2464     0517  0020               	movlb	0	; select bank0
  2465     0518  00B2               	movwf	SetSegments@a+1
  2466     0519  0021               	movlb	1	; select bank1
  2467     051A  082D               	movf	Display@hundreds^(0+128),w
  2468     051B  0020               	movlb	0	; select bank0
  2469     051C  00B1               	movwf	SetSegments@a
  2470     051D  01B3               	clrf	SetSegments@blank
  2471     051E  3041               	movlw	(low (_hundred| 0))& (0+255)
  2472     051F  3180  202B  3184   	fcall	_SetSegments
  2473     0522                     l262:
  2474     0522  0008               	return
  2475     0523                     __end_of_Display:
  2476                           
  2477                           	psect	text10
  2478     05F2                     __ptext10:	
  2479 ;; *************** function ___awmod *****************
  2480 ;; Defined at:
  2481 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  divisor         2    0[BANK1 ] int 
  2484 ;;  dividend        2    2[BANK1 ] int 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  sign            1   28[BANK0 ] unsigned char 
  2487 ;;  counter         1   27[BANK0 ] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  2    0[BANK1 ] int 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2497 ;;      Params:         0       0       4       0       0       0       0
  2498 ;;      Locals:         0       2       0       0       0       0       0
  2499 ;;      Temps:          0       1       0       0       0       0       0
  2500 ;;      Totals:         0       3       4       0       0       0       0
  2501 ;;Total ram usage:        7 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 5
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_Display
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511     05F2                     ___awmod:	
  2512                           ;psect for function ___awmod
  2513                           
  2514     05F2                     l2435:	
  2515                           ;incstack = 0
  2516                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2517                           
  2518     05F2  0020               	movlb	0	; select bank0
  2519     05F3  01BC               	clrf	___awmod@sign
  2520     05F4                     l2437:
  2521     05F4  0021               	movlb	1	; select bank1
  2522     05F5  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  2523     05F6  2DF8               	goto	u1361
  2524     05F7  2DF9               	goto	u1360
  2525     05F8                     u1361:
  2526     05F8  2E01               	goto	l2443
  2527     05F9                     u1360:
  2528     05F9                     l2439:
  2529     05F9  09A2               	comf	___awmod@dividend^(0+128),f
  2530     05FA  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  2531     05FB  0AA2               	incf	___awmod@dividend^(0+128),f
  2532     05FC  1903               	skipnz
  2533     05FD  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  2534     05FE                     l2441:
  2535     05FE  0020               	movlb	0	; select bank0
  2536     05FF  01BC               	clrf	___awmod@sign
  2537     0600  0ABC               	incf	___awmod@sign,f
  2538     0601                     l2443:
  2539     0601  0021               	movlb	1	; select bank1
  2540     0602  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  2541     0603  2E05               	goto	u1371
  2542     0604  2E06               	goto	u1370
  2543     0605                     u1371:
  2544     0605  2E0B               	goto	l2447
  2545     0606                     u1370:
  2546     0606                     l2445:
  2547     0606  09A0               	comf	___awmod@divisor^(0+128),f
  2548     0607  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  2549     0608  0AA0               	incf	___awmod@divisor^(0+128),f
  2550     0609  1903               	skipnz
  2551     060A  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  2552     060B                     l2447:
  2553     060B  0820               	movf	___awmod@divisor^(0+128),w
  2554     060C  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  2555     060D  1903               	btfsc	3,2
  2556     060E  2E10               	goto	u1381
  2557     060F  2E11               	goto	u1380
  2558     0610                     u1381:
  2559     0610  2E3F               	goto	l2465
  2560     0611                     u1380:
  2561     0611                     l2449:
  2562     0611  0020               	movlb	0	; select bank0
  2563     0612  01BB               	clrf	___awmod@counter
  2564     0613  0ABB               	incf	___awmod@counter,f
  2565     0614  2E1F               	goto	l2455
  2566     0615                     l2451:
  2567     0615  3001               	movlw	1
  2568     0616                     u1395:
  2569     0616  35A0               	lslf	___awmod@divisor^(0+128),f
  2570     0617  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  2571     0618  0B89               	decfsz	9,f
  2572     0619  2E16               	goto	u1395
  2573     061A                     l2453:
  2574     061A  3001               	movlw	1
  2575     061B  0020               	movlb	0	; select bank0
  2576     061C  00BA               	movwf	??___awmod
  2577     061D  083A               	movf	??___awmod,w
  2578     061E  07BB               	addwf	___awmod@counter,f
  2579     061F                     l2455:
  2580     061F  0021               	movlb	1	; select bank1
  2581     0620  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  2582     0621  2E23               	goto	u1401
  2583     0622  2E24               	goto	u1400
  2584     0623                     u1401:
  2585     0623  2E15               	goto	l2451
  2586     0624                     u1400:
  2587     0624                     l2457:
  2588     0624  0021               	movlb	1	; select bank1
  2589     0625  0821               	movf	(___awmod@divisor+1)^(0+128),w
  2590     0626  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  2591     0627  1D03               	skipz
  2592     0628  2E2B               	goto	u1415
  2593     0629  0820               	movf	___awmod@divisor^(0+128),w
  2594     062A  0222               	subwf	___awmod@dividend^(0+128),w
  2595     062B                     u1415:
  2596     062B  1C03               	skipc
  2597     062C  2E2E               	goto	u1411
  2598     062D  2E2F               	goto	u1410
  2599     062E                     u1411:
  2600     062E  2E33               	goto	l2461
  2601     062F                     u1410:
  2602     062F                     l2459:
  2603     062F  0820               	movf	___awmod@divisor^(0+128),w
  2604     0630  02A2               	subwf	___awmod@dividend^(0+128),f
  2605     0631  0821               	movf	(___awmod@divisor+1)^(0+128),w
  2606     0632  3BA3               	subwfb	(___awmod@dividend+1)^(0+128),f
  2607     0633                     l2461:
  2608     0633  3001               	movlw	1
  2609     0634                     u1425:
  2610     0634  36A1               	lsrf	(___awmod@divisor+1)^(0+128),f
  2611     0635  0CA0               	rrf	___awmod@divisor^(0+128),f
  2612     0636  0B89               	decfsz	9,f
  2613     0637  2E34               	goto	u1425
  2614     0638                     l2463:
  2615     0638  3001               	movlw	1
  2616     0639  0020               	movlb	0	; select bank0
  2617     063A  02BB               	subwf	___awmod@counter,f
  2618     063B  1D03               	btfss	3,2
  2619     063C  2E3E               	goto	u1431
  2620     063D  2E3F               	goto	u1430
  2621     063E                     u1431:
  2622     063E  2E24               	goto	l2457
  2623     063F                     u1430:
  2624     063F                     l2465:
  2625     063F  0020               	movlb	0	; select bank0
  2626     0640  083C               	movf	___awmod@sign,w
  2627     0641  1903               	btfsc	3,2
  2628     0642  2E44               	goto	u1441
  2629     0643  2E45               	goto	u1440
  2630     0644                     u1441:
  2631     0644  2E4B               	goto	l2469
  2632     0645                     u1440:
  2633     0645                     l2467:
  2634     0645  0021               	movlb	1	; select bank1
  2635     0646  09A2               	comf	___awmod@dividend^(0+128),f
  2636     0647  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  2637     0648  0AA2               	incf	___awmod@dividend^(0+128),f
  2638     0649  1903               	skipnz
  2639     064A  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  2640     064B                     l2469:
  2641     064B  0021               	movlb	1	; select bank1
  2642     064C  0823               	movf	(___awmod@dividend+1)^(0+128),w
  2643     064D  00A1               	movwf	(?___awmod+1)^(0+128)
  2644     064E  0822               	movf	___awmod@dividend^(0+128),w
  2645     064F  00A0               	movwf	?___awmod^(0+128)
  2646     0650                     l507:
  2647     0650  0008               	return
  2648     0651                     __end_of___awmod:
  2649                           
  2650                           	psect	text11
  2651     0592                     __ptext11:	
  2652 ;; *************** function ___awdiv *****************
  2653 ;; Defined at:
  2654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  divisor         2   17[BANK0 ] int 
  2657 ;;  dividend        2   19[BANK0 ] int 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  quotient        2   24[BANK0 ] int 
  2660 ;;  sign            1   23[BANK0 ] unsigned char 
  2661 ;;  counter         1   22[BANK0 ] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  2   17[BANK0 ] int 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2671 ;;      Params:         0       4       0       0       0       0       0
  2672 ;;      Locals:         0       4       0       0       0       0       0
  2673 ;;      Temps:          0       1       0       0       0       0       0
  2674 ;;      Totals:         0       9       0       0       0       0       0
  2675 ;;Total ram usage:        9 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 5
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_Display
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685     0592                     ___awdiv:	
  2686                           ;psect for function ___awdiv
  2687                           
  2688     0592                     l2391:	
  2689                           ;incstack = 0
  2690                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2691                           
  2692     0592  0020               	movlb	0	; select bank0
  2693     0593  01B7               	clrf	___awdiv@sign
  2694     0594                     l2393:
  2695     0594  1FB2               	btfss	___awdiv@divisor+1,7
  2696     0595  2D97               	goto	u1261
  2697     0596  2D98               	goto	u1260
  2698     0597                     u1261:
  2699     0597  2D9F               	goto	l2399
  2700     0598                     u1260:
  2701     0598                     l2395:
  2702     0598  09B1               	comf	___awdiv@divisor,f
  2703     0599  09B2               	comf	___awdiv@divisor+1,f
  2704     059A  0AB1               	incf	___awdiv@divisor,f
  2705     059B  1903               	skipnz
  2706     059C  0AB2               	incf	___awdiv@divisor+1,f
  2707     059D                     l2397:
  2708     059D  01B7               	clrf	___awdiv@sign
  2709     059E  0AB7               	incf	___awdiv@sign,f
  2710     059F                     l2399:
  2711     059F  1FB4               	btfss	___awdiv@dividend+1,7
  2712     05A0  2DA2               	goto	u1271
  2713     05A1  2DA3               	goto	u1270
  2714     05A2                     u1271:
  2715     05A2  2DAC               	goto	l2405
  2716     05A3                     u1270:
  2717     05A3                     l2401:
  2718     05A3  09B3               	comf	___awdiv@dividend,f
  2719     05A4  09B4               	comf	___awdiv@dividend+1,f
  2720     05A5  0AB3               	incf	___awdiv@dividend,f
  2721     05A6  1903               	skipnz
  2722     05A7  0AB4               	incf	___awdiv@dividend+1,f
  2723     05A8                     l2403:
  2724     05A8  3001               	movlw	1
  2725     05A9  00B5               	movwf	??___awdiv
  2726     05AA  0835               	movf	??___awdiv,w
  2727     05AB  06B7               	xorwf	___awdiv@sign,f
  2728     05AC                     l2405:
  2729     05AC  01B8               	clrf	___awdiv@quotient
  2730     05AD  01B9               	clrf	___awdiv@quotient+1
  2731     05AE                     l2407:
  2732     05AE  0831               	movf	___awdiv@divisor,w
  2733     05AF  0432               	iorwf	___awdiv@divisor+1,w
  2734     05B0  1903               	btfsc	3,2
  2735     05B1  2DB3               	goto	u1281
  2736     05B2  2DB4               	goto	u1280
  2737     05B3                     u1281:
  2738     05B3  2DE3               	goto	l2427
  2739     05B4                     u1280:
  2740     05B4                     l2409:
  2741     05B4  01B6               	clrf	___awdiv@counter
  2742     05B5  0AB6               	incf	___awdiv@counter,f
  2743     05B6  2DC0               	goto	l2415
  2744     05B7                     l2411:
  2745     05B7  3001               	movlw	1
  2746     05B8                     u1295:
  2747     05B8  35B1               	lslf	___awdiv@divisor,f
  2748     05B9  0DB2               	rlf	___awdiv@divisor+1,f
  2749     05BA  0B89               	decfsz	9,f
  2750     05BB  2DB8               	goto	u1295
  2751     05BC                     l2413:
  2752     05BC  3001               	movlw	1
  2753     05BD  00B5               	movwf	??___awdiv
  2754     05BE  0835               	movf	??___awdiv,w
  2755     05BF  07B6               	addwf	___awdiv@counter,f
  2756     05C0                     l2415:
  2757     05C0  1FB2               	btfss	___awdiv@divisor+1,7
  2758     05C1  2DC3               	goto	u1301
  2759     05C2  2DC4               	goto	u1300
  2760     05C3                     u1301:
  2761     05C3  2DB7               	goto	l2411
  2762     05C4                     u1300:
  2763     05C4                     l2417:
  2764     05C4  3001               	movlw	1
  2765     05C5                     u1315:
  2766     05C5  35B8               	lslf	___awdiv@quotient,f
  2767     05C6  0DB9               	rlf	___awdiv@quotient+1,f
  2768     05C7  0B89               	decfsz	9,f
  2769     05C8  2DC5               	goto	u1315
  2770     05C9  0832               	movf	___awdiv@divisor+1,w
  2771     05CA  0234               	subwf	___awdiv@dividend+1,w
  2772     05CB  1D03               	skipz
  2773     05CC  2DCF               	goto	u1325
  2774     05CD  0831               	movf	___awdiv@divisor,w
  2775     05CE  0233               	subwf	___awdiv@dividend,w
  2776     05CF                     u1325:
  2777     05CF  1C03               	skipc
  2778     05D0  2DD2               	goto	u1321
  2779     05D1  2DD3               	goto	u1320
  2780     05D2                     u1321:
  2781     05D2  2DD8               	goto	l2423
  2782     05D3                     u1320:
  2783     05D3                     l2419:
  2784     05D3  0831               	movf	___awdiv@divisor,w
  2785     05D4  02B3               	subwf	___awdiv@dividend,f
  2786     05D5  0832               	movf	___awdiv@divisor+1,w
  2787     05D6  3BB4               	subwfb	___awdiv@dividend+1,f
  2788     05D7                     l2421:
  2789     05D7  1438               	bsf	___awdiv@quotient,0
  2790     05D8                     l2423:
  2791     05D8  3001               	movlw	1
  2792     05D9                     u1335:
  2793     05D9  36B2               	lsrf	___awdiv@divisor+1,f
  2794     05DA  0CB1               	rrf	___awdiv@divisor,f
  2795     05DB  0B89               	decfsz	9,f
  2796     05DC  2DD9               	goto	u1335
  2797     05DD                     l2425:
  2798     05DD  3001               	movlw	1
  2799     05DE  02B6               	subwf	___awdiv@counter,f
  2800     05DF  1D03               	btfss	3,2
  2801     05E0  2DE2               	goto	u1341
  2802     05E1  2DE3               	goto	u1340
  2803     05E2                     u1341:
  2804     05E2  2DC4               	goto	l2417
  2805     05E3                     u1340:
  2806     05E3                     l2427:
  2807     05E3  0837               	movf	___awdiv@sign,w
  2808     05E4  1903               	btfsc	3,2
  2809     05E5  2DE7               	goto	u1351
  2810     05E6  2DE8               	goto	u1350
  2811     05E7                     u1351:
  2812     05E7  2DED               	goto	l2431
  2813     05E8                     u1350:
  2814     05E8                     l2429:
  2815     05E8  09B8               	comf	___awdiv@quotient,f
  2816     05E9  09B9               	comf	___awdiv@quotient+1,f
  2817     05EA  0AB8               	incf	___awdiv@quotient,f
  2818     05EB  1903               	skipnz
  2819     05EC  0AB9               	incf	___awdiv@quotient+1,f
  2820     05ED                     l2431:
  2821     05ED  0839               	movf	___awdiv@quotient+1,w
  2822     05EE  00B2               	movwf	?___awdiv+1
  2823     05EF  0838               	movf	___awdiv@quotient,w
  2824     05F0  00B1               	movwf	?___awdiv
  2825     05F1                     l494:
  2826     05F1  0008               	return
  2827     05F2                     __end_of___awdiv:
  2828                           
  2829                           	psect	text12
  2830     002B                     __ptext12:	
  2831 ;; *************** function _SetSegments *****************
  2832 ;; Defined at:
  2833 ;;		line 129 in file "main.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  digit           1    wreg     PTR struct digit
  2836 ;;		 -> one(7), ten(7), hundred(7), 
  2837 ;;  a               2   17[BANK0 ] int 
  2838 ;;  blank           1   19[BANK0 ] unsigned char 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  digit           1   20[BANK0 ] PTR struct digit
  2841 ;;		 -> one(7), ten(7), hundred(7), 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2851 ;;      Params:         0       3       0       0       0       0       0
  2852 ;;      Locals:         0       1       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0
  2854 ;;      Totals:         0       4       0       0       0       0       0
  2855 ;;Total ram usage:        4 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 5
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_Display
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865     002B                     _SetSegments:	
  2866                           ;psect for function _SetSegments
  2867                           
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in _SetSegments: [wreg-fsr1h+status,2+status,0]
  2871                           ;SetSegments@digit stored from wreg
  2872     002B  0020               	movlb	0	; select bank0
  2873     002C  00B4               	movwf	SetSegments@digit
  2874     002D                     l2241:
  2875                           
  2876                           ;main.c: 130:     if (blank) {
  2877     002D  0833               	movf	SetSegments@blank,w
  2878     002E  1903               	btfsc	3,2
  2879     002F  2831               	goto	u1251
  2880     0030  2832               	goto	u1250
  2881     0031                     u1251:
  2882     0031  29D9               	goto	l2385
  2883     0032                     u1250:
  2884     0032                     l2243:
  2885                           
  2886                           ;main.c: 131:         digit->a = 0;
  2887     0032  0834               	movf	SetSegments@digit,w
  2888     0033  0086               	movwf	6
  2889     0034  0187               	clrf	7
  2890     0035  0181               	clrf	1
  2891                           
  2892                           ;main.c: 132:         digit->b = 0;
  2893     0036  0A34               	incf	SetSegments@digit,w
  2894     0037  0086               	movwf	6
  2895     0038  0187               	clrf	7
  2896     0039  0181               	clrf	1
  2897     003A                     l2245:
  2898                           
  2899                           ;main.c: 133:         digit->c = 0;
  2900     003A  0834               	movf	SetSegments@digit,w
  2901     003B  3E02               	addlw	2
  2902     003C  0086               	movwf	6
  2903     003D  0187               	clrf	7
  2904     003E  0181               	clrf	1
  2905     003F                     l2247:
  2906                           
  2907                           ;main.c: 134:         digit->d = 0;
  2908     003F  0834               	movf	SetSegments@digit,w
  2909     0040  3E03               	addlw	3
  2910     0041  0086               	movwf	6
  2911     0042  0187               	clrf	7
  2912     0043  0181               	clrf	1
  2913     0044                     l2249:
  2914                           
  2915                           ;main.c: 135:         digit->e = 0;
  2916     0044  0834               	movf	SetSegments@digit,w
  2917     0045  3E04               	addlw	4
  2918     0046  0086               	movwf	6
  2919     0047  0187               	clrf	7
  2920     0048  0181               	clrf	1
  2921     0049                     l2251:
  2922                           
  2923                           ;main.c: 136:         digit->f = 0;
  2924     0049  0834               	movf	SetSegments@digit,w
  2925     004A  3E05               	addlw	5
  2926     004B  0086               	movwf	6
  2927     004C  0187               	clrf	7
  2928     004D  0181               	clrf	1
  2929     004E                     l2253:
  2930                           
  2931                           ;main.c: 137:         digit->g = 0;
  2932     004E  0834               	movf	SetSegments@digit,w
  2933     004F  3E06               	addlw	6
  2934     0050  0086               	movwf	6
  2935     0051  0187               	clrf	7
  2936     0052  0181               	clrf	1
  2937                           
  2938                           ;main.c: 138:     } else {
  2939     0053  29FE               	goto	l259
  2940     0054                     l2255:
  2941                           
  2942                           ;main.c: 141:                 digit->a = 1;
  2943     0054  0834               	movf	SetSegments@digit,w
  2944     0055  0086               	movwf	6
  2945     0056  0187               	clrf	7
  2946     0057  0181               	clrf	1
  2947     0058  0A81               	incf	1,f
  2948                           
  2949                           ;main.c: 142:                 digit->b = 1;
  2950     0059  0A34               	incf	SetSegments@digit,w
  2951     005A  0086               	movwf	6
  2952     005B  0187               	clrf	7
  2953     005C  0181               	clrf	1
  2954     005D  0A81               	incf	1,f
  2955     005E                     l2257:
  2956                           
  2957                           ;main.c: 143:                 digit->c = 1;
  2958     005E  0834               	movf	SetSegments@digit,w
  2959     005F  3E02               	addlw	2
  2960     0060  0086               	movwf	6
  2961     0061  0187               	clrf	7
  2962     0062  0181               	clrf	1
  2963     0063  0A81               	incf	1,f
  2964     0064                     l2259:
  2965                           
  2966                           ;main.c: 144:                 digit->d = 1;
  2967     0064  0834               	movf	SetSegments@digit,w
  2968     0065  3E03               	addlw	3
  2969     0066  0086               	movwf	6
  2970     0067  0187               	clrf	7
  2971     0068  0181               	clrf	1
  2972     0069  0A81               	incf	1,f
  2973     006A                     l2261:
  2974                           
  2975                           ;main.c: 145:                 digit->e = 1;
  2976     006A  0834               	movf	SetSegments@digit,w
  2977     006B  3E04               	addlw	4
  2978     006C  0086               	movwf	6
  2979     006D  0187               	clrf	7
  2980     006E  0181               	clrf	1
  2981     006F  0A81               	incf	1,f
  2982     0070                     l2263:
  2983                           
  2984                           ;main.c: 146:                 digit->f = 1;
  2985     0070  0834               	movf	SetSegments@digit,w
  2986     0071  3E05               	addlw	5
  2987     0072  0086               	movwf	6
  2988     0073  0187               	clrf	7
  2989     0074  0181               	clrf	1
  2990     0075  0A81               	incf	1,f
  2991     0076                     l2265:
  2992                           
  2993                           ;main.c: 147:                 digit->g = 0;
  2994     0076  0834               	movf	SetSegments@digit,w
  2995     0077  3E06               	addlw	6
  2996     0078  0086               	movwf	6
  2997     0079  0187               	clrf	7
  2998     007A  0181               	clrf	1
  2999                           
  3000                           ;main.c: 148:                 break;
  3001     007B  29FE               	goto	l259
  3002     007C                     l2267:
  3003                           
  3004                           ;main.c: 151:                 digit->a = 0;
  3005     007C  0834               	movf	SetSegments@digit,w
  3006     007D  0086               	movwf	6
  3007     007E  0187               	clrf	7
  3008     007F  0181               	clrf	1
  3009     0080                     l2269:
  3010                           
  3011                           ;main.c: 152:                 digit->b = 1;
  3012     0080  0A34               	incf	SetSegments@digit,w
  3013     0081  0086               	movwf	6
  3014     0082  0187               	clrf	7
  3015     0083  0181               	clrf	1
  3016     0084  0A81               	incf	1,f
  3017     0085                     l2271:
  3018                           
  3019                           ;main.c: 153:                 digit->c = 1;
  3020     0085  0834               	movf	SetSegments@digit,w
  3021     0086  3E02               	addlw	2
  3022     0087  0086               	movwf	6
  3023     0088  0187               	clrf	7
  3024     0089  0181               	clrf	1
  3025     008A  0A81               	incf	1,f
  3026     008B                     l2273:
  3027                           
  3028                           ;main.c: 154:                 digit->d = 0;
  3029     008B  0834               	movf	SetSegments@digit,w
  3030     008C  3E03               	addlw	3
  3031     008D  0086               	movwf	6
  3032     008E  0187               	clrf	7
  3033     008F  0181               	clrf	1
  3034     0090                     l2275:
  3035                           
  3036                           ;main.c: 155:                 digit->e = 0;
  3037     0090  0834               	movf	SetSegments@digit,w
  3038     0091  3E04               	addlw	4
  3039     0092  0086               	movwf	6
  3040     0093  0187               	clrf	7
  3041     0094  0181               	clrf	1
  3042     0095                     l2277:
  3043                           
  3044                           ;main.c: 156:                 digit->f = 0;
  3045     0095  0834               	movf	SetSegments@digit,w
  3046     0096  3E05               	addlw	5
  3047     0097  0086               	movwf	6
  3048     0098  0187               	clrf	7
  3049     0099  0181               	clrf	1
  3050     009A                     l2279:
  3051                           
  3052                           ;main.c: 157:                 digit->g = 0;
  3053     009A  0834               	movf	SetSegments@digit,w
  3054     009B  3E06               	addlw	6
  3055     009C  0086               	movwf	6
  3056     009D  0187               	clrf	7
  3057     009E  0181               	clrf	1
  3058                           
  3059                           ;main.c: 158:                 break;
  3060     009F  29FE               	goto	l259
  3061     00A0                     l2281:
  3062                           
  3063                           ;main.c: 161:                 digit->a = 1;
  3064     00A0  0834               	movf	SetSegments@digit,w
  3065     00A1  0086               	movwf	6
  3066     00A2  0187               	clrf	7
  3067     00A3  0181               	clrf	1
  3068     00A4  0A81               	incf	1,f
  3069                           
  3070                           ;main.c: 162:                 digit->b = 1;
  3071     00A5  0A34               	incf	SetSegments@digit,w
  3072     00A6  0086               	movwf	6
  3073     00A7  0187               	clrf	7
  3074     00A8  0181               	clrf	1
  3075     00A9  0A81               	incf	1,f
  3076     00AA                     l2283:
  3077                           
  3078                           ;main.c: 163:                 digit->c = 0;
  3079     00AA  0834               	movf	SetSegments@digit,w
  3080     00AB  3E02               	addlw	2
  3081     00AC  0086               	movwf	6
  3082     00AD  0187               	clrf	7
  3083     00AE  0181               	clrf	1
  3084     00AF                     l2285:
  3085                           
  3086                           ;main.c: 164:                 digit->d = 1;
  3087     00AF  0834               	movf	SetSegments@digit,w
  3088     00B0  3E03               	addlw	3
  3089     00B1  0086               	movwf	6
  3090     00B2  0187               	clrf	7
  3091     00B3  0181               	clrf	1
  3092     00B4  0A81               	incf	1,f
  3093     00B5                     l2287:
  3094                           
  3095                           ;main.c: 165:                 digit->e = 1;
  3096     00B5  0834               	movf	SetSegments@digit,w
  3097     00B6  3E04               	addlw	4
  3098     00B7  0086               	movwf	6
  3099     00B8  0187               	clrf	7
  3100     00B9  0181               	clrf	1
  3101     00BA  0A81               	incf	1,f
  3102     00BB                     l2289:
  3103                           
  3104                           ;main.c: 166:                 digit->f = 0;
  3105     00BB  0834               	movf	SetSegments@digit,w
  3106     00BC  3E05               	addlw	5
  3107     00BD  0086               	movwf	6
  3108     00BE  0187               	clrf	7
  3109     00BF  0181               	clrf	1
  3110     00C0                     l2291:
  3111                           
  3112                           ;main.c: 167:                 digit->g = 1;
  3113     00C0  0834               	movf	SetSegments@digit,w
  3114     00C1  3E06               	addlw	6
  3115     00C2  0086               	movwf	6
  3116     00C3  0187               	clrf	7
  3117     00C4  0181               	clrf	1
  3118     00C5  0A81               	incf	1,f
  3119                           
  3120                           ;main.c: 168:                 break;
  3121     00C6  29FE               	goto	l259
  3122     00C7                     l2293:
  3123                           
  3124                           ;main.c: 171:                 digit->a = 1;
  3125     00C7  0834               	movf	SetSegments@digit,w
  3126     00C8  0086               	movwf	6
  3127     00C9  0187               	clrf	7
  3128     00CA  0181               	clrf	1
  3129     00CB  0A81               	incf	1,f
  3130                           
  3131                           ;main.c: 172:                 digit->b = 1;
  3132     00CC  0A34               	incf	SetSegments@digit,w
  3133     00CD  0086               	movwf	6
  3134     00CE  0187               	clrf	7
  3135     00CF  0181               	clrf	1
  3136     00D0  0A81               	incf	1,f
  3137     00D1                     l2295:
  3138                           
  3139                           ;main.c: 173:                 digit->c = 1;
  3140     00D1  0834               	movf	SetSegments@digit,w
  3141     00D2  3E02               	addlw	2
  3142     00D3  0086               	movwf	6
  3143     00D4  0187               	clrf	7
  3144     00D5  0181               	clrf	1
  3145     00D6  0A81               	incf	1,f
  3146     00D7                     l2297:
  3147                           
  3148                           ;main.c: 174:                 digit->d = 1;
  3149     00D7  0834               	movf	SetSegments@digit,w
  3150     00D8  3E03               	addlw	3
  3151     00D9  0086               	movwf	6
  3152     00DA  0187               	clrf	7
  3153     00DB  0181               	clrf	1
  3154     00DC  0A81               	incf	1,f
  3155     00DD                     l2299:
  3156                           
  3157                           ;main.c: 175:                 digit->e = 0;
  3158     00DD  0834               	movf	SetSegments@digit,w
  3159     00DE  3E04               	addlw	4
  3160     00DF  0086               	movwf	6
  3161     00E0  0187               	clrf	7
  3162     00E1  0181               	clrf	1
  3163     00E2                     l2301:
  3164                           
  3165                           ;main.c: 176:                 digit->f = 0;
  3166     00E2  0834               	movf	SetSegments@digit,w
  3167     00E3  3E05               	addlw	5
  3168     00E4  0086               	movwf	6
  3169     00E5  0187               	clrf	7
  3170     00E6  0181               	clrf	1
  3171     00E7                     l2303:
  3172                           
  3173                           ;main.c: 177:                 digit->g = 1;
  3174     00E7  0834               	movf	SetSegments@digit,w
  3175     00E8  3E06               	addlw	6
  3176     00E9  0086               	movwf	6
  3177     00EA  0187               	clrf	7
  3178     00EB  0181               	clrf	1
  3179     00EC  0A81               	incf	1,f
  3180                           
  3181                           ;main.c: 178:                 break;
  3182     00ED  29FE               	goto	l259
  3183     00EE                     l2305:
  3184                           
  3185                           ;main.c: 181:                 digit->a = 0;
  3186     00EE  0834               	movf	SetSegments@digit,w
  3187     00EF  0086               	movwf	6
  3188     00F0  0187               	clrf	7
  3189     00F1  0181               	clrf	1
  3190     00F2                     l2307:
  3191                           
  3192                           ;main.c: 182:                 digit->b = 1;
  3193     00F2  0A34               	incf	SetSegments@digit,w
  3194     00F3  0086               	movwf	6
  3195     00F4  0187               	clrf	7
  3196     00F5  0181               	clrf	1
  3197     00F6  0A81               	incf	1,f
  3198     00F7                     l2309:
  3199                           
  3200                           ;main.c: 183:                 digit->c = 1;
  3201     00F7  0834               	movf	SetSegments@digit,w
  3202     00F8  3E02               	addlw	2
  3203     00F9  0086               	movwf	6
  3204     00FA  0187               	clrf	7
  3205     00FB  0181               	clrf	1
  3206     00FC  0A81               	incf	1,f
  3207     00FD                     l2311:
  3208                           
  3209                           ;main.c: 184:                 digit->d = 0;
  3210     00FD  0834               	movf	SetSegments@digit,w
  3211     00FE  3E03               	addlw	3
  3212     00FF  0086               	movwf	6
  3213     0100  0187               	clrf	7
  3214     0101  0181               	clrf	1
  3215     0102                     l2313:
  3216                           
  3217                           ;main.c: 185:                 digit->e = 0;
  3218     0102  0834               	movf	SetSegments@digit,w
  3219     0103  3E04               	addlw	4
  3220     0104  0086               	movwf	6
  3221     0105  0187               	clrf	7
  3222     0106  0181               	clrf	1
  3223     0107                     l2315:
  3224                           
  3225                           ;main.c: 186:                 digit->f = 1;
  3226     0107  0834               	movf	SetSegments@digit,w
  3227     0108  3E05               	addlw	5
  3228     0109  0086               	movwf	6
  3229     010A  0187               	clrf	7
  3230     010B  0181               	clrf	1
  3231     010C  0A81               	incf	1,f
  3232     010D                     l2317:
  3233                           
  3234                           ;main.c: 187:                 digit->g = 1;
  3235     010D  0834               	movf	SetSegments@digit,w
  3236     010E  3E06               	addlw	6
  3237     010F  0086               	movwf	6
  3238     0110  0187               	clrf	7
  3239     0111  0181               	clrf	1
  3240     0112  0A81               	incf	1,f
  3241                           
  3242                           ;main.c: 188:                 break;
  3243     0113  29FE               	goto	l259
  3244     0114                     l2319:
  3245                           
  3246                           ;main.c: 191:                 digit->a = 1;
  3247     0114  0834               	movf	SetSegments@digit,w
  3248     0115  0086               	movwf	6
  3249     0116  0187               	clrf	7
  3250     0117  0181               	clrf	1
  3251     0118  0A81               	incf	1,f
  3252     0119                     l2321:
  3253                           
  3254                           ;main.c: 192:                 digit->b = 0;
  3255     0119  0A34               	incf	SetSegments@digit,w
  3256     011A  0086               	movwf	6
  3257     011B  0187               	clrf	7
  3258     011C  0181               	clrf	1
  3259     011D                     l2323:
  3260                           
  3261                           ;main.c: 193:                 digit->c = 1;
  3262     011D  0834               	movf	SetSegments@digit,w
  3263     011E  3E02               	addlw	2
  3264     011F  0086               	movwf	6
  3265     0120  0187               	clrf	7
  3266     0121  0181               	clrf	1
  3267     0122  0A81               	incf	1,f
  3268     0123                     l2325:
  3269                           
  3270                           ;main.c: 194:                 digit->d = 1;
  3271     0123  0834               	movf	SetSegments@digit,w
  3272     0124  3E03               	addlw	3
  3273     0125  0086               	movwf	6
  3274     0126  0187               	clrf	7
  3275     0127  0181               	clrf	1
  3276     0128  0A81               	incf	1,f
  3277     0129                     l2327:
  3278                           
  3279                           ;main.c: 195:                 digit->e = 0;
  3280     0129  0834               	movf	SetSegments@digit,w
  3281     012A  3E04               	addlw	4
  3282     012B  0086               	movwf	6
  3283     012C  0187               	clrf	7
  3284     012D  0181               	clrf	1
  3285     012E                     l2329:
  3286                           
  3287                           ;main.c: 196:                 digit->f = 1;
  3288     012E  0834               	movf	SetSegments@digit,w
  3289     012F  3E05               	addlw	5
  3290     0130  0086               	movwf	6
  3291     0131  0187               	clrf	7
  3292     0132  0181               	clrf	1
  3293     0133  0A81               	incf	1,f
  3294     0134                     l2331:
  3295                           
  3296                           ;main.c: 197:                 digit->g = 1;
  3297     0134  0834               	movf	SetSegments@digit,w
  3298     0135  3E06               	addlw	6
  3299     0136  0086               	movwf	6
  3300     0137  0187               	clrf	7
  3301     0138  0181               	clrf	1
  3302     0139  0A81               	incf	1,f
  3303                           
  3304                           ;main.c: 198:                 break;
  3305     013A  29FE               	goto	l259
  3306     013B                     l2333:
  3307                           
  3308                           ;main.c: 201:                 digit->a = 1;
  3309     013B  0834               	movf	SetSegments@digit,w
  3310     013C  0086               	movwf	6
  3311     013D  0187               	clrf	7
  3312     013E  0181               	clrf	1
  3313     013F  0A81               	incf	1,f
  3314     0140                     l2335:
  3315                           
  3316                           ;main.c: 202:                 digit->b = 0;
  3317     0140  0A34               	incf	SetSegments@digit,w
  3318     0141  0086               	movwf	6
  3319     0142  0187               	clrf	7
  3320     0143  0181               	clrf	1
  3321     0144                     l2337:
  3322                           
  3323                           ;main.c: 203:                 digit->c = 1;
  3324     0144  0834               	movf	SetSegments@digit,w
  3325     0145  3E02               	addlw	2
  3326     0146  0086               	movwf	6
  3327     0147  0187               	clrf	7
  3328     0148  0181               	clrf	1
  3329     0149  0A81               	incf	1,f
  3330     014A                     l2339:
  3331                           
  3332                           ;main.c: 204:                 digit->d = 1;
  3333     014A  0834               	movf	SetSegments@digit,w
  3334     014B  3E03               	addlw	3
  3335     014C  0086               	movwf	6
  3336     014D  0187               	clrf	7
  3337     014E  0181               	clrf	1
  3338     014F  0A81               	incf	1,f
  3339     0150                     l2341:
  3340                           
  3341                           ;main.c: 205:                 digit->e = 1;
  3342     0150  0834               	movf	SetSegments@digit,w
  3343     0151  3E04               	addlw	4
  3344     0152  0086               	movwf	6
  3345     0153  0187               	clrf	7
  3346     0154  0181               	clrf	1
  3347     0155  0A81               	incf	1,f
  3348     0156                     l2343:
  3349                           
  3350                           ;main.c: 206:                 digit->f = 1;
  3351     0156  0834               	movf	SetSegments@digit,w
  3352     0157  3E05               	addlw	5
  3353     0158  0086               	movwf	6
  3354     0159  0187               	clrf	7
  3355     015A  0181               	clrf	1
  3356     015B  0A81               	incf	1,f
  3357     015C                     l2345:
  3358                           
  3359                           ;main.c: 207:                 digit->g = 1;
  3360     015C  0834               	movf	SetSegments@digit,w
  3361     015D  3E06               	addlw	6
  3362     015E  0086               	movwf	6
  3363     015F  0187               	clrf	7
  3364     0160  0181               	clrf	1
  3365     0161  0A81               	incf	1,f
  3366                           
  3367                           ;main.c: 208:                 break;
  3368     0162  29FE               	goto	l259
  3369     0163                     l2347:
  3370                           
  3371                           ;main.c: 211:                 digit->a = 1;
  3372     0163  0834               	movf	SetSegments@digit,w
  3373     0164  0086               	movwf	6
  3374     0165  0187               	clrf	7
  3375     0166  0181               	clrf	1
  3376     0167  0A81               	incf	1,f
  3377                           
  3378                           ;main.c: 212:                 digit->b = 1;
  3379     0168  0A34               	incf	SetSegments@digit,w
  3380     0169  0086               	movwf	6
  3381     016A  0187               	clrf	7
  3382     016B  0181               	clrf	1
  3383     016C  0A81               	incf	1,f
  3384     016D                     l2349:
  3385                           
  3386                           ;main.c: 213:                 digit->c = 1;
  3387     016D  0834               	movf	SetSegments@digit,w
  3388     016E  3E02               	addlw	2
  3389     016F  0086               	movwf	6
  3390     0170  0187               	clrf	7
  3391     0171  0181               	clrf	1
  3392     0172  0A81               	incf	1,f
  3393     0173                     l2351:
  3394                           
  3395                           ;main.c: 214:                 digit->d = 0;
  3396     0173  0834               	movf	SetSegments@digit,w
  3397     0174  3E03               	addlw	3
  3398     0175  0086               	movwf	6
  3399     0176  0187               	clrf	7
  3400     0177  0181               	clrf	1
  3401     0178                     l2353:
  3402                           
  3403                           ;main.c: 215:                 digit->e = 0;
  3404     0178  0834               	movf	SetSegments@digit,w
  3405     0179  3E04               	addlw	4
  3406     017A  0086               	movwf	6
  3407     017B  0187               	clrf	7
  3408     017C  0181               	clrf	1
  3409     017D                     l2355:
  3410                           
  3411                           ;main.c: 216:                 digit->f = 0;
  3412     017D  0834               	movf	SetSegments@digit,w
  3413     017E  3E05               	addlw	5
  3414     017F  0086               	movwf	6
  3415     0180  0187               	clrf	7
  3416     0181  0181               	clrf	1
  3417     0182                     l2357:
  3418                           
  3419                           ;main.c: 217:                 digit->g = 0;
  3420     0182  0834               	movf	SetSegments@digit,w
  3421     0183  3E06               	addlw	6
  3422     0184  0086               	movwf	6
  3423     0185  0187               	clrf	7
  3424     0186  0181               	clrf	1
  3425                           
  3426                           ;main.c: 218:                 break;
  3427     0187  29FE               	goto	l259
  3428     0188                     l2359:
  3429                           
  3430                           ;main.c: 221:                 digit->a = 1;
  3431     0188  0834               	movf	SetSegments@digit,w
  3432     0189  0086               	movwf	6
  3433     018A  0187               	clrf	7
  3434     018B  0181               	clrf	1
  3435     018C  0A81               	incf	1,f
  3436                           
  3437                           ;main.c: 222:                 digit->b = 1;
  3438     018D  0A34               	incf	SetSegments@digit,w
  3439     018E  0086               	movwf	6
  3440     018F  0187               	clrf	7
  3441     0190  0181               	clrf	1
  3442     0191  0A81               	incf	1,f
  3443     0192                     l2361:
  3444                           
  3445                           ;main.c: 223:                 digit->c = 1;
  3446     0192  0834               	movf	SetSegments@digit,w
  3447     0193  3E02               	addlw	2
  3448     0194  0086               	movwf	6
  3449     0195  0187               	clrf	7
  3450     0196  0181               	clrf	1
  3451     0197  0A81               	incf	1,f
  3452     0198                     l2363:
  3453                           
  3454                           ;main.c: 224:                 digit->d = 1;
  3455     0198  0834               	movf	SetSegments@digit,w
  3456     0199  3E03               	addlw	3
  3457     019A  0086               	movwf	6
  3458     019B  0187               	clrf	7
  3459     019C  0181               	clrf	1
  3460     019D  0A81               	incf	1,f
  3461     019E                     l2365:
  3462                           
  3463                           ;main.c: 225:                 digit->e = 1;
  3464     019E  0834               	movf	SetSegments@digit,w
  3465     019F  3E04               	addlw	4
  3466     01A0  0086               	movwf	6
  3467     01A1  0187               	clrf	7
  3468     01A2  0181               	clrf	1
  3469     01A3  0A81               	incf	1,f
  3470     01A4                     l2367:
  3471                           
  3472                           ;main.c: 226:                 digit->f = 1;
  3473     01A4  0834               	movf	SetSegments@digit,w
  3474     01A5  3E05               	addlw	5
  3475     01A6  0086               	movwf	6
  3476     01A7  0187               	clrf	7
  3477     01A8  0181               	clrf	1
  3478     01A9  0A81               	incf	1,f
  3479     01AA                     l2369:
  3480                           
  3481                           ;main.c: 227:                 digit->g = 1;
  3482     01AA  0834               	movf	SetSegments@digit,w
  3483     01AB  3E06               	addlw	6
  3484     01AC  0086               	movwf	6
  3485     01AD  0187               	clrf	7
  3486     01AE  0181               	clrf	1
  3487     01AF  0A81               	incf	1,f
  3488                           
  3489                           ;main.c: 228:                 break;
  3490     01B0  29FE               	goto	l259
  3491     01B1                     l2371:
  3492                           
  3493                           ;main.c: 231:                 digit->a = 1;
  3494     01B1  0834               	movf	SetSegments@digit,w
  3495     01B2  0086               	movwf	6
  3496     01B3  0187               	clrf	7
  3497     01B4  0181               	clrf	1
  3498     01B5  0A81               	incf	1,f
  3499                           
  3500                           ;main.c: 232:                 digit->b = 1;
  3501     01B6  0A34               	incf	SetSegments@digit,w
  3502     01B7  0086               	movwf	6
  3503     01B8  0187               	clrf	7
  3504     01B9  0181               	clrf	1
  3505     01BA  0A81               	incf	1,f
  3506     01BB                     l2373:
  3507                           
  3508                           ;main.c: 233:                 digit->c = 1;
  3509     01BB  0834               	movf	SetSegments@digit,w
  3510     01BC  3E02               	addlw	2
  3511     01BD  0086               	movwf	6
  3512     01BE  0187               	clrf	7
  3513     01BF  0181               	clrf	1
  3514     01C0  0A81               	incf	1,f
  3515     01C1                     l2375:
  3516                           
  3517                           ;main.c: 234:                 digit->d = 1;
  3518     01C1  0834               	movf	SetSegments@digit,w
  3519     01C2  3E03               	addlw	3
  3520     01C3  0086               	movwf	6
  3521     01C4  0187               	clrf	7
  3522     01C5  0181               	clrf	1
  3523     01C6  0A81               	incf	1,f
  3524     01C7                     l2377:
  3525                           
  3526                           ;main.c: 235:                 digit->e = 0;
  3527     01C7  0834               	movf	SetSegments@digit,w
  3528     01C8  3E04               	addlw	4
  3529     01C9  0086               	movwf	6
  3530     01CA  0187               	clrf	7
  3531     01CB  0181               	clrf	1
  3532     01CC                     l2379:
  3533                           
  3534                           ;main.c: 236:                 digit->f = 1;
  3535     01CC  0834               	movf	SetSegments@digit,w
  3536     01CD  3E05               	addlw	5
  3537     01CE  0086               	movwf	6
  3538     01CF  0187               	clrf	7
  3539     01D0  0181               	clrf	1
  3540     01D1  0A81               	incf	1,f
  3541     01D2                     l2381:
  3542                           
  3543                           ;main.c: 237:                 digit->g = 1;
  3544     01D2  0834               	movf	SetSegments@digit,w
  3545     01D3  3E06               	addlw	6
  3546     01D4  0086               	movwf	6
  3547     01D5  0187               	clrf	7
  3548     01D6  0181               	clrf	1
  3549     01D7  0A81               	incf	1,f
  3550                           
  3551                           ;main.c: 238:                 break;
  3552     01D8  29FE               	goto	l259
  3553     01D9                     l2385:
  3554                           
  3555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3556                           ; Switch size 1, requested type "simple"
  3557                           ; Number of cases is 1, Range of values is 0 to 0
  3558                           ; switch strategies available:
  3559                           ; Name         Instructions Cycles
  3560                           ; simple_byte            4     3 (average)
  3561                           ; direct_byte            8     6 (fixed)
  3562                           ; jumptable            260     6 (fixed)
  3563                           ;	Chosen strategy is simple_byte
  3564     01D9  0832               	movf	SetSegments@a+1,w
  3565     01DA  3A00               	xorlw	0	; case 0
  3566     01DB  1903               	skipnz
  3567     01DC  29DE               	goto	l2547
  3568     01DD  29FE               	goto	l259
  3569     01DE                     l2547:
  3570                           
  3571                           ; Switch size 1, requested type "simple"
  3572                           ; Number of cases is 10, Range of values is 0 to 9
  3573                           ; switch strategies available:
  3574                           ; Name         Instructions Cycles
  3575                           ; direct_byte           26     6 (fixed)
  3576                           ; simple_byte           31    16 (average)
  3577                           ; jumptable            260     6 (fixed)
  3578                           ;	Chosen strategy is simple_byte
  3579     01DE  0831               	movf	SetSegments@a,w
  3580     01DF  3A00               	xorlw	0	; case 0
  3581     01E0  1903               	skipnz
  3582     01E1  2854               	goto	l2255
  3583     01E2  3A01               	xorlw	1	; case 1
  3584     01E3  1903               	skipnz
  3585     01E4  287C               	goto	l2267
  3586     01E5  3A03               	xorlw	3	; case 2
  3587     01E6  1903               	skipnz
  3588     01E7  28A0               	goto	l2281
  3589     01E8  3A01               	xorlw	1	; case 3
  3590     01E9  1903               	skipnz
  3591     01EA  28C7               	goto	l2293
  3592     01EB  3A07               	xorlw	7	; case 4
  3593     01EC  1903               	skipnz
  3594     01ED  28EE               	goto	l2305
  3595     01EE  3A01               	xorlw	1	; case 5
  3596     01EF  1903               	skipnz
  3597     01F0  2914               	goto	l2319
  3598     01F1  3A03               	xorlw	3	; case 6
  3599     01F2  1903               	skipnz
  3600     01F3  293B               	goto	l2333
  3601     01F4  3A01               	xorlw	1	; case 7
  3602     01F5  1903               	skipnz
  3603     01F6  2963               	goto	l2347
  3604     01F7  3A0F               	xorlw	15	; case 8
  3605     01F8  1903               	skipnz
  3606     01F9  2988               	goto	l2359
  3607     01FA  3A01               	xorlw	1	; case 9
  3608     01FB  1903               	skipnz
  3609     01FC  29B1               	goto	l2371
  3610     01FD  29FE               	goto	l259
  3611     01FE                     l259:
  3612     01FE  0008               	return
  3613     01FF                     __end_of_SetSegments:
  3614                           
  3615                           	psect	text13
  3616     075F                     __ptext13:	
  3617 ;; *************** function _ClearDigit *****************
  3618 ;; Defined at:
  3619 ;;		line 82 in file "main.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  digit           1    wreg     PTR struct digit
  3622 ;;		 -> one(7), ten(7), hundred(7), 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  digit           1   17[BANK0 ] PTR struct digit
  3625 ;;		 -> one(7), ten(7), hundred(7), 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3635 ;;      Params:         0       0       0       0       0       0       0
  3636 ;;      Locals:         0       1       0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0
  3638 ;;      Totals:         0       1       0       0       0       0       0
  3639 ;;Total ram usage:        1 bytes
  3640 ;; Hardware stack levels used: 1
  3641 ;; Hardware stack levels required when called: 5
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649     075F                     _ClearDigit:	
  3650                           ;psect for function _ClearDigit
  3651                           
  3652                           
  3653                           ;incstack = 0
  3654                           ; Regs used in _ClearDigit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3655                           ;ClearDigit@digit stored from wreg
  3656     075F  0020               	movlb	0	; select bank0
  3657     0760  00B1               	movwf	ClearDigit@digit
  3658     0761                     l2123:
  3659                           
  3660                           ;main.c: 83:     digit->a = 0;
  3661     0761  0831               	movf	ClearDigit@digit,w
  3662     0762  0086               	movwf	6
  3663     0763  0187               	clrf	7
  3664     0764  0181               	clrf	1
  3665                           
  3666                           ;main.c: 84:     digit->b = 0;
  3667     0765  0A31               	incf	ClearDigit@digit,w
  3668     0766  0086               	movwf	6
  3669     0767  0187               	clrf	7
  3670     0768  0181               	clrf	1
  3671     0769                     l2125:
  3672                           
  3673                           ;main.c: 85:     digit->c = 0;
  3674     0769  0831               	movf	ClearDigit@digit,w
  3675     076A  3E02               	addlw	2
  3676     076B  0086               	movwf	6
  3677     076C  0187               	clrf	7
  3678     076D  0181               	clrf	1
  3679     076E                     l2127:
  3680                           
  3681                           ;main.c: 86:     digit->d = 0;
  3682     076E  0831               	movf	ClearDigit@digit,w
  3683     076F  3E03               	addlw	3
  3684     0770  0086               	movwf	6
  3685     0771  0187               	clrf	7
  3686     0772  0181               	clrf	1
  3687     0773                     l2129:
  3688                           
  3689                           ;main.c: 87:     digit->e = 0;
  3690     0773  0831               	movf	ClearDigit@digit,w
  3691     0774  3E04               	addlw	4
  3692     0775  0086               	movwf	6
  3693     0776  0187               	clrf	7
  3694     0777  0181               	clrf	1
  3695     0778                     l2131:
  3696                           
  3697                           ;main.c: 88:     digit->f = 0;
  3698     0778  0831               	movf	ClearDigit@digit,w
  3699     0779  3E05               	addlw	5
  3700     077A  0086               	movwf	6
  3701     077B  0187               	clrf	7
  3702     077C  0181               	clrf	1
  3703     077D                     l2133:
  3704                           
  3705                           ;main.c: 89:     digit->g = 0;
  3706     077D  0831               	movf	ClearDigit@digit,w
  3707     077E  3E06               	addlw	6
  3708     077F  0086               	movwf	6
  3709     0780  0187               	clrf	7
  3710     0781  0181               	clrf	1
  3711     0782                     l238:
  3712     0782  0008               	return
  3713     0783                     __end_of_ClearDigit:
  3714                           
  3715                           	psect	intentry
  3716     0004                     __pintentry:	
  3717 ;; *************** function _INTERRUPT_InterruptManager *****************
  3718 ;; Defined at:
  3719 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3733 ;;      Params:         0       0       0       0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0
  3736 ;;      Totals:         0       0       0       0       0       0       0
  3737 ;;Total ram usage:        0 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 4
  3740 ;; This function calls:
  3741 ;;		_TMR1_OverflowISR
  3742 ;; This function is called by:
  3743 ;;		Interrupt level 1
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747     0004                     _INTERRUPT_InterruptManager:
  3748                           
  3749                           ;incstack = 0
  3750     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3751                           
  3752                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3753     0005  3180               	pagesel	$
  3754     0006                     i1l2155:
  3755                           
  3756                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
  3757     0006  1F0B               	btfss	11,6	;volatile
  3758     0007  2809               	goto	u121_21
  3759     0008  280A               	goto	u121_20
  3760     0009                     u121_21:
  3761     0009  2817               	goto	i1l113
  3762     000A                     u121_20:
  3763     000A                     i1l2157:
  3764                           
  3765                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3766     000A  0021               	movlb	1	; select bank1
  3767     000B  1C11               	btfss	17,0	;volatile
  3768     000C  280E               	goto	u122_21
  3769     000D  280F               	goto	u122_20
  3770     000E                     u122_21:
  3771     000E  2817               	goto	i1l113
  3772     000F                     u122_20:
  3773     000F                     i1l2159:
  3774     000F  0020               	movlb	0	; select bank0
  3775     0010  1C11               	btfss	17,0	;volatile
  3776     0011  2813               	goto	u123_21
  3777     0012  2814               	goto	u123_20
  3778     0013                     u123_21:
  3779     0013  2817               	goto	i1l113
  3780     0014                     u123_20:
  3781     0014                     i1l2161:
  3782                           
  3783                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             TMR1_OverflowISR();
  3784     0014  3187  279C  3180   	fcall	_TMR1_OverflowISR
  3785     0017                     i1l113:	
  3786                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
  3787                           
  3788     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3789     0018  0009               	retfie
  3790     0019                     __end_of_INTERRUPT_InterruptManager:
  3791                           
  3792                           	psect	text15
  3793     079C                     __ptext15:	
  3794 ;; *************** function _TMR1_OverflowISR *****************
  3795 ;; Defined at:
  3796 ;;		line 150 in file "mcc_generated_files/timer/src/tmr1.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3810 ;;      Params:         0       0       0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; Hardware stack levels required when called: 3
  3817 ;; This function calls:
  3818 ;;		Absolute function
  3819 ;;		_TMR1_DefaultOverflowCallback
  3820 ;;		_TMR1_Write
  3821 ;;		_Tmr1CallBack
  3822 ;; This function is called by:
  3823 ;;		_INTERRUPT_InterruptManager
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827     079C                     _TMR1_OverflowISR:	
  3828                           ;psect for function _TMR1_OverflowISR
  3829                           
  3830     079C                     i1l2115:	
  3831                           ;incstack = 0
  3832                           ; Regs used in _TMR1_OverflowISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3833                           
  3834                           
  3835                           ;mcc_generated_files/timer/src/tmr1.c: 154:     PIR1bits.TMR1IF = 0;
  3836     079C  0020               	movlb	0	; select bank0
  3837     079D  1011               	bcf	17,0	;volatile
  3838     079E                     i1l2117:
  3839                           
  3840                           ;mcc_generated_files/timer/src/tmr1.c: 155:     TMR1_Write(timer1ReloadVal);
  3841     079E  0859               	movf	_timer1ReloadVal+1,w	;volatile
  3842     079F  00F1               	movwf	TMR1_Write@timerVal+1
  3843     07A0  0858               	movf	_timer1ReloadVal,w	;volatile
  3844     07A1  00F0               	movwf	TMR1_Write@timerVal
  3845     07A2  3187  27B2  3187   	fcall	_TMR1_Write
  3846     07A5                     i1l2119:
  3847                           
  3848                           ;mcc_generated_files/timer/src/tmr1.c: 157:     if(TMR1_OverflowCallback)
  3849     07A5  0020               	movlb	0	; select bank0
  3850     07A6  0856               	movf	_TMR1_OverflowCallback,w
  3851     07A7  0457               	iorwf	_TMR1_OverflowCallback+1,w
  3852     07A8  1903               	btfsc	3,2
  3853     07A9  2FAB               	goto	u114_21
  3854     07AA  2FAC               	goto	u114_20
  3855     07AB                     u114_21:
  3856     07AB  2FB1               	goto	i1l195
  3857     07AC                     u114_20:
  3858     07AC                     i1l2121:
  3859                           
  3860                           ;mcc_generated_files/timer/src/tmr1.c: 158:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          159:         TMR1_OverflowCallback();
  3861     07AC  0857               	movf	_TMR1_OverflowCallback+1,w
  3862     07AD  008A               	movwf	10
  3863     07AE  0856               	movf	_TMR1_OverflowCallback,w
  3864     07AF  000A               	callw
  3865     07B0  3187               	pagesel	$
  3866     07B1                     i1l195:
  3867     07B1  0008               	return
  3868     07B2                     __end_of_TMR1_OverflowISR:
  3869                           
  3870                           	psect	text16
  3871     0FF9                     __ptext16:	
  3872 ;; *************** function _TMR1_DefaultOverflowCallback *****************
  3873 ;; Defined at:
  3874 ;;		line 168 in file "mcc_generated_files/timer/src/tmr1.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		None
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3888 ;;      Params:         0       0       0       0       0       0       0
  3889 ;;      Locals:         0       0       0       0       0       0       0
  3890 ;;      Temps:          0       0       0       0       0       0       0
  3891 ;;      Totals:         0       0       0       0       0       0       0
  3892 ;;Total ram usage:        0 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_TMR1_Initialize
  3898 ;;		_TMR1_OverflowISR
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902     0FF9                     _TMR1_DefaultOverflowCallback:	
  3903                           ;psect for function _TMR1_DefaultOverflowCallback
  3904                           
  3905     0FF9                     i1l201:	
  3906                           ;incstack = 0
  3907                           ; Regs used in _TMR1_DefaultOverflowCallback: []
  3908                           
  3909     0FF9  0008               	return
  3910     0FFA                     __end_of_TMR1_DefaultOverflowCallback:
  3911                           
  3912                           	psect	text17
  3913     03D2                     __ptext17:	
  3914 ;; *************** function _Tmr1CallBack *****************
  3915 ;; Defined at:
  3916 ;;		line 92 in file "main.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3930 ;;      Params:         0       0       0       0       0       0       0
  3931 ;;      Locals:         0       1       0       0       0       0       0
  3932 ;;      Temps:          0       3       0       0       0       0       0
  3933 ;;      Totals:         0       4       0       0       0       0       0
  3934 ;;Total ram usage:        4 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; Hardware stack levels required when called: 2
  3937 ;; This function calls:
  3938 ;;		i1_Display
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;;		_TMR1_OverflowISR
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945     03D2                     _Tmr1CallBack:	
  3946                           ;psect for function _Tmr1CallBack
  3947                           
  3948     03D2                     i1l1859:	
  3949                           ;incstack = 0
  3950                           ; Regs used in _Tmr1CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3951                           
  3952                           
  3953                           ;main.c: 93:     toggle = 1 - toggle;
  3954     03D2  0020               	movlb	0	; select bank0
  3955     03D3  0840               	movf	_toggle,w
  3956     03D4  3C01               	sublw	1
  3957     03D5  00C0               	movwf	_toggle
  3958     03D6                     i1l1861:
  3959                           
  3960                           ;main.c: 95:     PORTAbits.RA5 = toggle;
  3961     03D6  0C40               	rrf	_toggle,w
  3962     03D7  1C03               	skipc
  3963     03D8  128C               	bcf	12,5	;volatile
  3964     03D9  1803               	skipnc
  3965     03DA  168C               	bsf	12,5	;volatile
  3966                           
  3967                           ;main.c: 97:     PORTAbits.RA4 = toggle ^ !hundred.a &
  3968     03DB  01B0               	clrf	_Tmr1CallBack$1136
  3969     03DC                     i1l1863:
  3970     03DC  0841               	movf	_hundred,w
  3971     03DD  1D03               	btfss	3,2
  3972     03DE  2BE0               	goto	u88_21
  3973     03DF  2BE1               	goto	u88_20
  3974     03E0                     u88_21:
  3975     03E0  2BF7               	goto	i1l1875
  3976     03E1                     u88_20:
  3977     03E1                     i1l1865:
  3978     03E1  0844               	movf	_hundred+3,w
  3979     03E2  1D03               	btfss	3,2
  3980     03E3  2BE5               	goto	u89_21
  3981     03E4  2BE6               	goto	u89_20
  3982     03E5                     u89_21:
  3983     03E5  2BF7               	goto	i1l1875
  3984     03E6                     u89_20:
  3985     03E6                     i1l1867:
  3986     03E6  0845               	movf	_hundred+4,w
  3987     03E7  1D03               	btfss	3,2
  3988     03E8  2BEA               	goto	u90_21
  3989     03E9  2BEB               	goto	u90_20
  3990     03EA                     u90_21:
  3991     03EA  2BF7               	goto	i1l1875
  3992     03EB                     u90_20:
  3993     03EB                     i1l1869:
  3994     03EB  0846               	movf	_hundred+5,w
  3995     03EC  1D03               	btfss	3,2
  3996     03ED  2BEF               	goto	u91_21
  3997     03EE  2BF0               	goto	u91_20
  3998     03EF                     u91_21:
  3999     03EF  2BF7               	goto	i1l1875
  4000     03F0                     u91_20:
  4001     03F0                     i1l1871:
  4002     03F0  0847               	movf	_hundred+6,w
  4003     03F1  1D03               	btfss	3,2
  4004     03F2  2BF4               	goto	u92_21
  4005     03F3  2BF5               	goto	u92_20
  4006     03F4                     u92_21:
  4007     03F4  2BF7               	goto	i1l1875
  4008     03F5                     u92_20:
  4009     03F5                     i1l1873:
  4010     03F5  01B0               	clrf	_Tmr1CallBack$1136
  4011     03F6  0AB0               	incf	_Tmr1CallBack$1136,f
  4012     03F7                     i1l1875:
  4013     03F7  0842               	movf	_hundred+1,w
  4014     03F8  0543               	andwf	_hundred+2,w
  4015     03F9  0530               	andwf	_Tmr1CallBack$1136,w
  4016     03FA  0640               	xorwf	_toggle,w
  4017     03FB  00AD               	movwf	??_Tmr1CallBack
  4018     03FC  0EAD               	swapf	??_Tmr1CallBack,f
  4019     03FD  080C               	movf	12,w	;volatile
  4020     03FE  062D               	xorwf	??_Tmr1CallBack,w
  4021     03FF  39EF               	andlw	-17
  4022     0400  062D               	xorwf	??_Tmr1CallBack,w
  4023     0401  008C               	movwf	12	;volatile
  4024                           
  4025                           ;main.c: 106:     PORTCbits.RC5 = toggle ^ ten.a;
  4026     0402  0848               	movf	_ten,w
  4027     0403  0640               	xorwf	_toggle,w
  4028     0404  00AD               	movwf	??_Tmr1CallBack
  4029     0405  0EAD               	swapf	??_Tmr1CallBack,f
  4030     0406  0DAD               	rlf	??_Tmr1CallBack,f
  4031     0407  080E               	movf	14,w	;volatile
  4032     0408  062D               	xorwf	??_Tmr1CallBack,w
  4033     0409  39DF               	andlw	-33
  4034     040A  062D               	xorwf	??_Tmr1CallBack,w
  4035     040B  008E               	movwf	14	;volatile
  4036                           
  4037                           ;main.c: 107:     PORTCbits.RC4 = toggle ^ ten.b;
  4038     040C  0849               	movf	_ten+1,w
  4039     040D  0640               	xorwf	_toggle,w
  4040     040E  00AD               	movwf	??_Tmr1CallBack
  4041     040F  0EAD               	swapf	??_Tmr1CallBack,f
  4042     0410  080E               	movf	14,w	;volatile
  4043     0411  062D               	xorwf	??_Tmr1CallBack,w
  4044     0412  39EF               	andlw	-17
  4045     0413  062D               	xorwf	??_Tmr1CallBack,w
  4046     0414  008E               	movwf	14	;volatile
  4047                           
  4048                           ;main.c: 108:     PORTCbits.RC3 = toggle ^ ten.c;
  4049     0415  084A               	movf	_ten+2,w
  4050     0416  0640               	xorwf	_toggle,w
  4051     0417  00AD               	movwf	??_Tmr1CallBack
  4052     0418  0DAD               	rlf	??_Tmr1CallBack,f
  4053     0419  0DAD               	rlf	??_Tmr1CallBack,f
  4054     041A  0DAD               	rlf	??_Tmr1CallBack,f
  4055     041B  080E               	movf	14,w	;volatile
  4056     041C  062D               	xorwf	??_Tmr1CallBack,w
  4057     041D  39F7               	andlw	-9
  4058     041E  062D               	xorwf	??_Tmr1CallBack,w
  4059     041F  008E               	movwf	14	;volatile
  4060                           
  4061                           ;main.c: 109:     PORTCbits.RC6 = toggle ^ ten.d;
  4062     0420  084B               	movf	_ten+3,w
  4063     0421  0640               	xorwf	_toggle,w
  4064     0422  00AD               	movwf	??_Tmr1CallBack
  4065     0423  0EAD               	swapf	??_Tmr1CallBack,f
  4066     0424  0DAD               	rlf	??_Tmr1CallBack,f
  4067     0425  0DAD               	rlf	??_Tmr1CallBack,f
  4068     0426  080E               	movf	14,w	;volatile
  4069     0427  062D               	xorwf	??_Tmr1CallBack,w
  4070     0428  39BF               	andlw	-65
  4071     0429  062D               	xorwf	??_Tmr1CallBack,w
  4072     042A  008E               	movwf	14	;volatile
  4073                           
  4074                           ;main.c: 110:     PORTCbits.RC7 = toggle ^ ten.e;
  4075     042B  084C               	movf	_ten+4,w
  4076     042C  0640               	xorwf	_toggle,w
  4077     042D  00AD               	movwf	??_Tmr1CallBack
  4078     042E  0CAD               	rrf	??_Tmr1CallBack,f
  4079     042F  0CAD               	rrf	??_Tmr1CallBack,f
  4080     0430  080E               	movf	14,w	;volatile
  4081     0431  062D               	xorwf	??_Tmr1CallBack,w
  4082     0432  397F               	andlw	-129
  4083     0433  062D               	xorwf	??_Tmr1CallBack,w
  4084     0434  008E               	movwf	14	;volatile
  4085                           
  4086                           ;main.c: 111:     PORTBbits.RB7 = toggle ^ ten.f;
  4087     0435  084D               	movf	_ten+5,w
  4088     0436  0640               	xorwf	_toggle,w
  4089     0437  00AD               	movwf	??_Tmr1CallBack
  4090     0438  0CAD               	rrf	??_Tmr1CallBack,f
  4091     0439  0CAD               	rrf	??_Tmr1CallBack,f
  4092     043A  080D               	movf	13,w	;volatile
  4093     043B  062D               	xorwf	??_Tmr1CallBack,w
  4094     043C  397F               	andlw	-129
  4095     043D  062D               	xorwf	??_Tmr1CallBack,w
  4096     043E  008D               	movwf	13	;volatile
  4097                           
  4098                           ;main.c: 112:     PORTBbits.RB6 = toggle ^ ten.g;
  4099     043F  084E               	movf	_ten+6,w
  4100     0440  0640               	xorwf	_toggle,w
  4101     0441  00AD               	movwf	??_Tmr1CallBack
  4102     0442  0EAD               	swapf	??_Tmr1CallBack,f
  4103     0443  0DAD               	rlf	??_Tmr1CallBack,f
  4104     0444  0DAD               	rlf	??_Tmr1CallBack,f
  4105     0445  080D               	movf	13,w	;volatile
  4106     0446  062D               	xorwf	??_Tmr1CallBack,w
  4107     0447  39BF               	andlw	-65
  4108     0448  062D               	xorwf	??_Tmr1CallBack,w
  4109     0449  008D               	movwf	13	;volatile
  4110                           
  4111                           ;main.c: 114:     PORTBbits.RB5 = toggle ^ one.a;
  4112     044A  084F               	movf	_one,w
  4113     044B  0640               	xorwf	_toggle,w
  4114     044C  00AD               	movwf	??_Tmr1CallBack
  4115     044D  0EAD               	swapf	??_Tmr1CallBack,f
  4116     044E  0DAD               	rlf	??_Tmr1CallBack,f
  4117     044F  080D               	movf	13,w	;volatile
  4118     0450  062D               	xorwf	??_Tmr1CallBack,w
  4119     0451  39DF               	andlw	-33
  4120     0452  062D               	xorwf	??_Tmr1CallBack,w
  4121     0453  008D               	movwf	13	;volatile
  4122                           
  4123                           ;main.c: 115:     PORTBbits.RB4 = toggle ^ one.b;
  4124     0454  0850               	movf	_one+1,w
  4125     0455  0640               	xorwf	_toggle,w
  4126     0456  00AD               	movwf	??_Tmr1CallBack
  4127     0457  0EAD               	swapf	??_Tmr1CallBack,f
  4128     0458  080D               	movf	13,w	;volatile
  4129     0459  062D               	xorwf	??_Tmr1CallBack,w
  4130     045A  39EF               	andlw	-17
  4131     045B  062D               	xorwf	??_Tmr1CallBack,w
  4132     045C  008D               	movwf	13	;volatile
  4133                           
  4134                           ;main.c: 116:     PORTCbits.RC2 = toggle ^ one.c;
  4135     045D  0851               	movf	_one+2,w
  4136     045E  0640               	xorwf	_toggle,w
  4137     045F  00AD               	movwf	??_Tmr1CallBack
  4138     0460  0DAD               	rlf	??_Tmr1CallBack,f
  4139     0461  0DAD               	rlf	??_Tmr1CallBack,f
  4140     0462  080E               	movf	14,w	;volatile
  4141     0463  062D               	xorwf	??_Tmr1CallBack,w
  4142     0464  39FB               	andlw	-5
  4143     0465  062D               	xorwf	??_Tmr1CallBack,w
  4144     0466  008E               	movwf	14	;volatile
  4145                           
  4146                           ;main.c: 117:     PORTCbits.RC1 = toggle ^ one.d;
  4147     0467  0852               	movf	_one+3,w
  4148     0468  0640               	xorwf	_toggle,w
  4149     0469  00AD               	movwf	??_Tmr1CallBack
  4150     046A  0DAD               	rlf	??_Tmr1CallBack,f
  4151     046B  080E               	movf	14,w	;volatile
  4152     046C  062D               	xorwf	??_Tmr1CallBack,w
  4153     046D  39FD               	andlw	-3
  4154     046E  062D               	xorwf	??_Tmr1CallBack,w
  4155     046F  008E               	movwf	14	;volatile
  4156                           
  4157                           ;main.c: 118:     PORTCbits.RC0 = toggle ^ one.e;
  4158     0470  0840               	movf	_toggle,w
  4159     0471  0653               	xorwf	_one+4,w
  4160     0472  00AD               	movwf	??_Tmr1CallBack
  4161     0473  080E               	movf	14,w	;volatile
  4162     0474  062D               	xorwf	??_Tmr1CallBack,w
  4163     0475  39FE               	andlw	-2
  4164     0476  062D               	xorwf	??_Tmr1CallBack,w
  4165     0477  008E               	movwf	14	;volatile
  4166                           
  4167                           ;main.c: 119:     PORTAbits.RA2 = toggle ^ one.f;
  4168     0478  0854               	movf	_one+5,w
  4169     0479  0640               	xorwf	_toggle,w
  4170     047A  00AD               	movwf	??_Tmr1CallBack
  4171     047B  0DAD               	rlf	??_Tmr1CallBack,f
  4172     047C  0DAD               	rlf	??_Tmr1CallBack,f
  4173     047D  080C               	movf	12,w	;volatile
  4174     047E  062D               	xorwf	??_Tmr1CallBack,w
  4175     047F  39FB               	andlw	-5
  4176     0480  062D               	xorwf	??_Tmr1CallBack,w
  4177     0481  008C               	movwf	12	;volatile
  4178                           
  4179                           ;main.c: 120:     PORTAbits.RA1 = toggle ^ one.g;
  4180     0482  0855               	movf	_one+6,w
  4181     0483  0640               	xorwf	_toggle,w
  4182     0484  00AD               	movwf	??_Tmr1CallBack
  4183     0485  0DAD               	rlf	??_Tmr1CallBack,f
  4184     0486  080C               	movf	12,w	;volatile
  4185     0487  062D               	xorwf	??_Tmr1CallBack,w
  4186     0488  39FD               	andlw	-3
  4187     0489  062D               	xorwf	??_Tmr1CallBack,w
  4188     048A  008C               	movwf	12	;volatile
  4189                           
  4190                           ;main.c: 122:     if (RA0Value)
  4191     048B  085E               	movf	_RA0Value,w
  4192     048C  1903               	btfsc	3,2
  4193     048D  2C8F               	goto	u93_21
  4194     048E  2C90               	goto	u93_20
  4195     048F                     u93_21:
  4196     048F  2C9F               	goto	i1l242
  4197     0490                     u93_20:
  4198     0490                     i1l1877:
  4199                           
  4200                           ;main.c: 123:     {;main.c: 124:         RA0Value = 0;
  4201     0490  01DE               	clrf	_RA0Value
  4202     0491                     i1l1879:
  4203                           
  4204                           ;main.c: 125:         Display(++counter);
  4205     0491  3001               	movlw	1
  4206     0492  00AD               	movwf	??_Tmr1CallBack
  4207     0493  082D               	movf	??_Tmr1CallBack,w
  4208     0494  07BF               	addwf	_counter,f
  4209     0495  083F               	movf	_counter,w
  4210     0496  00AE               	movwf	??_Tmr1CallBack+1
  4211     0497  01AF               	clrf	??_Tmr1CallBack+2
  4212     0498  082E               	movf	??_Tmr1CallBack+1,w
  4213     0499  00A2               	movwf	i1Display@a
  4214     049A  082F               	movf	??_Tmr1CallBack+2,w
  4215     049B  00A3               	movwf	i1Display@a+1
  4216     049C  3185  2523  3183   	fcall	i1_Display
  4217     049F                     i1l242:
  4218     049F  0008               	return
  4219     04A0                     __end_of_Tmr1CallBack:
  4220                           
  4221                           	psect	text18
  4222     0523                     __ptext18:	
  4223 ;; *************** function i1_Display *****************
  4224 ;; Defined at:
  4225 ;;		line 243 in file "main.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  a               2    2[BANK0 ] int 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  hundreds        2   11[BANK0 ] int 
  4230 ;;  tens            2    9[BANK0 ] int 
  4231 ;;  ones            2    7[BANK0 ] int 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4241 ;;      Params:         0       2       0       0       0       0       0
  4242 ;;      Locals:         0       6       0       0       0       0       0
  4243 ;;      Temps:          0       3       0       0       0       0       0
  4244 ;;      Totals:         0      11       0       0       0       0       0
  4245 ;;Total ram usage:       11 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; Hardware stack levels required when called: 1
  4248 ;; This function calls:
  4249 ;;		i1_SetSegments
  4250 ;;		i1___awdiv
  4251 ;;		i1___awmod
  4252 ;; This function is called by:
  4253 ;;		_Tmr1CallBack
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257     0523                     i1_Display:	
  4258                           ;psect for function i1_Display
  4259                           
  4260     0523                     i1l1779:	
  4261                           ;incstack = 0
  4262                           ; Regs used in i1_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4263                           
  4264                           
  4265                           ;main.c: 244:     int ones = a % 10;
  4266     0523  300A               	movlw	10
  4267     0524  00F9               	movwf	i1___awmod@divisor
  4268     0525  3000               	movlw	0
  4269     0526  00FA               	movwf	i1___awmod@divisor+1
  4270     0527  0020               	movlb	0	; select bank0
  4271     0528  0823               	movf	i1Display@a+1,w
  4272     0529  00FC               	movwf	i1___awmod@dividend+1
  4273     052A  0822               	movf	i1Display@a,w
  4274     052B  00FB               	movwf	i1___awmod@dividend
  4275     052C  3186  26B0  3185   	fcall	i1___awmod
  4276     052F  087A               	movf	?i1___awmod+1,w
  4277     0530  0020               	movlb	0	; select bank0
  4278     0531  00A8               	movwf	i1Display@ones+1
  4279     0532  0879               	movf	?i1___awmod,w
  4280     0533  00A7               	movwf	i1Display@ones
  4281                           
  4282                           ;main.c: 245:     int tens = (a / 10) % 10;
  4283     0534  300A               	movlw	10
  4284     0535  00F9               	movwf	i1___awmod@divisor
  4285     0536  3000               	movlw	0
  4286     0537  00FA               	movwf	i1___awmod@divisor+1
  4287     0538  300A               	movlw	10
  4288     0539  00F0               	movwf	i1___awdiv@divisor
  4289     053A  3000               	movlw	0
  4290     053B  00F1               	movwf	i1___awdiv@divisor+1
  4291     053C  0823               	movf	i1Display@a+1,w
  4292     053D  00F3               	movwf	i1___awdiv@dividend+1
  4293     053E  0822               	movf	i1Display@a,w
  4294     053F  00F2               	movwf	i1___awdiv@dividend
  4295     0540  3186  2651  3185   	fcall	i1___awdiv
  4296     0543  0871               	movf	?i1___awdiv+1,w
  4297     0544  00FC               	movwf	i1___awmod@dividend+1
  4298     0545  0870               	movf	?i1___awdiv,w
  4299     0546  00FB               	movwf	i1___awmod@dividend
  4300     0547  3186  26B0  3185   	fcall	i1___awmod
  4301     054A  087A               	movf	?i1___awmod+1,w
  4302     054B  0020               	movlb	0	; select bank0
  4303     054C  00AA               	movwf	i1Display@tens+1
  4304     054D  0879               	movf	?i1___awmod,w
  4305     054E  00A9               	movwf	i1Display@tens
  4306     054F                     i1l1781:
  4307                           
  4308                           ;main.c: 246:     int hundreds = a > 99;
  4309     054F  0823               	movf	i1Display@a+1,w
  4310     0550  3A80               	xorlw	128
  4311     0551  00A4               	movwf	??i1_Display
  4312     0552  3080               	movlw	128
  4313     0553  0224               	subwf	??i1_Display,w
  4314     0554  1D03               	skipz
  4315     0555  2D58               	goto	u83_25
  4316     0556  3064               	movlw	100
  4317     0557  0222               	subwf	i1Display@a,w
  4318     0558                     u83_25:
  4319     0558  1803               	skipnc
  4320     0559  2D5B               	goto	u83_21
  4321     055A  2D5D               	goto	u83_20
  4322     055B                     u83_21:
  4323     055B  3001               	movlw	1
  4324     055C  2D5E               	goto	u84_20
  4325     055D                     u83_20:
  4326     055D  3000               	movlw	0
  4327     055E                     u84_20:
  4328     055E  0020               	movlb	0	; select bank0
  4329     055F  00A5               	movwf	??i1_Display+1
  4330     0560  01A6               	clrf	??i1_Display+2
  4331     0561  0825               	movf	??i1_Display+1,w
  4332     0562  00AB               	movwf	i1Display@hundreds
  4333     0563  0826               	movf	??i1_Display+2,w
  4334     0564  00AC               	movwf	i1Display@hundreds+1
  4335     0565                     i1l1783:
  4336                           
  4337                           ;main.c: 248:     SetSegments(&one, ones, 0);
  4338     0565  0828               	movf	i1Display@ones+1,w
  4339     0566  00F1               	movwf	i1SetSegments@a+1
  4340     0567  0827               	movf	i1Display@ones,w
  4341     0568  00F0               	movwf	i1SetSegments@a
  4342     0569  01F2               	clrf	i1SetSegments@blank
  4343     056A  304F               	movlw	(low (_one| 0))& (0+255)
  4344     056B  3181  21FF  3185   	fcall	i1_SetSegments
  4345     056E                     i1l1785:
  4346                           
  4347                           ;main.c: 249:     SetSegments(&ten, tens, (a < 10));
  4348     056E  0020               	movlb	0	; select bank0
  4349     056F  082A               	movf	i1Display@tens+1,w
  4350     0570  00F1               	movwf	i1SetSegments@a+1
  4351     0571  0829               	movf	i1Display@tens,w
  4352     0572  00F0               	movwf	i1SetSegments@a
  4353     0573  0823               	movf	i1Display@a+1,w
  4354     0574  3A80               	xorlw	128
  4355     0575  00A4               	movwf	??i1_Display
  4356     0576  3080               	movlw	128
  4357     0577  0224               	subwf	??i1_Display,w
  4358     0578  1D03               	skipz
  4359     0579  2D7C               	goto	u85_25
  4360     057A  300A               	movlw	10
  4361     057B  0222               	subwf	i1Display@a,w
  4362     057C                     u85_25:
  4363     057C  1C03               	skipc
  4364     057D  2D7F               	goto	u85_21
  4365     057E  2D81               	goto	u85_20
  4366     057F                     u85_21:
  4367     057F  3001               	movlw	1
  4368     0580  2D82               	goto	u86_20
  4369     0581                     u85_20:
  4370     0581  3000               	movlw	0
  4371     0582                     u86_20:
  4372     0582  00F2               	movwf	i1SetSegments@blank
  4373     0583  3048               	movlw	(low (_ten| 0))& (0+255)
  4374     0584  3181  21FF  3185   	fcall	i1_SetSegments
  4375     0587                     i1l1787:
  4376                           
  4377                           ;main.c: 250:     SetSegments(&hundred, hundreds, 0);
  4378     0587  0020               	movlb	0	; select bank0
  4379     0588  082C               	movf	i1Display@hundreds+1,w
  4380     0589  00F1               	movwf	i1SetSegments@a+1
  4381     058A  082B               	movf	i1Display@hundreds,w
  4382     058B  00F0               	movwf	i1SetSegments@a
  4383     058C  01F2               	clrf	i1SetSegments@blank
  4384     058D  3041               	movlw	(low (_hundred| 0))& (0+255)
  4385     058E  3181  21FF  3185   	fcall	i1_SetSegments
  4386     0591                     i1l262:
  4387     0591  0008               	return
  4388     0592                     __end_ofi1_Display:
  4389                           
  4390                           	psect	text19
  4391     06B0                     __ptext19:	
  4392 ;; *************** function i1___awmod *****************
  4393 ;; Defined at:
  4394 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  divisor         2    9[COMMON] int 
  4397 ;;  dividend        2   11[COMMON] int 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  sign            1    1[BANK0 ] unsigned char 
  4400 ;;  counter         1    0[BANK0 ] unsigned char 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  2    9[COMMON] int 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4410 ;;      Params:         4       0       0       0       0       0       0
  4411 ;;      Locals:         0       2       0       0       0       0       0
  4412 ;;      Temps:          1       0       0       0       0       0       0
  4413 ;;      Totals:         5       2       0       0       0       0       0
  4414 ;;Total ram usage:        7 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		i1_Display
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423     06B0                     i1___awmod:	
  4424                           ;psect for function i1___awmod
  4425                           
  4426     06B0                     i1l1735:	
  4427                           ;incstack = 0
  4428                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4429                           
  4430     06B0  0020               	movlb	0	; select bank0
  4431     06B1  01A1               	clrf	i1___awmod@sign
  4432     06B2                     i1l1737:
  4433     06B2  1FFC               	btfss	i1___awmod@dividend+1,7
  4434     06B3  2EB5               	goto	u74_21
  4435     06B4  2EB6               	goto	u74_20
  4436     06B5                     u74_21:
  4437     06B5  2EBD               	goto	i1l1743
  4438     06B6                     u74_20:
  4439     06B6                     i1l1739:
  4440     06B6  09FB               	comf	i1___awmod@dividend,f
  4441     06B7  09FC               	comf	i1___awmod@dividend+1,f
  4442     06B8  0AFB               	incf	i1___awmod@dividend,f
  4443     06B9  1903               	skipnz
  4444     06BA  0AFC               	incf	i1___awmod@dividend+1,f
  4445     06BB                     i1l1741:
  4446     06BB  01A1               	clrf	i1___awmod@sign
  4447     06BC  0AA1               	incf	i1___awmod@sign,f
  4448     06BD                     i1l1743:
  4449     06BD  1FFA               	btfss	i1___awmod@divisor+1,7
  4450     06BE  2EC0               	goto	u75_21
  4451     06BF  2EC1               	goto	u75_20
  4452     06C0                     u75_21:
  4453     06C0  2EC6               	goto	i1l1747
  4454     06C1                     u75_20:
  4455     06C1                     i1l1745:
  4456     06C1  09F9               	comf	i1___awmod@divisor,f
  4457     06C2  09FA               	comf	i1___awmod@divisor+1,f
  4458     06C3  0AF9               	incf	i1___awmod@divisor,f
  4459     06C4  1903               	skipnz
  4460     06C5  0AFA               	incf	i1___awmod@divisor+1,f
  4461     06C6                     i1l1747:
  4462     06C6  0879               	movf	i1___awmod@divisor,w
  4463     06C7  047A               	iorwf	i1___awmod@divisor+1,w
  4464     06C8  1903               	btfsc	3,2
  4465     06C9  2ECB               	goto	u76_21
  4466     06CA  2ECC               	goto	u76_20
  4467     06CB                     u76_21:
  4468     06CB  2EF5               	goto	i1l1765
  4469     06CC                     u76_20:
  4470     06CC                     i1l1749:
  4471     06CC  01A0               	clrf	i1___awmod@counter
  4472     06CD  0AA0               	incf	i1___awmod@counter,f
  4473     06CE  2ED8               	goto	i1l1755
  4474     06CF                     i1l1751:
  4475     06CF  3001               	movlw	1
  4476     06D0                     u77_25:
  4477     06D0  35F9               	lslf	i1___awmod@divisor,f
  4478     06D1  0DFA               	rlf	i1___awmod@divisor+1,f
  4479     06D2  0B89               	decfsz	9,f
  4480     06D3  2ED0               	goto	u77_25
  4481     06D4                     i1l1753:
  4482     06D4  3001               	movlw	1
  4483     06D5  00FD               	movwf	??i1___awmod
  4484     06D6  087D               	movf	??i1___awmod,w
  4485     06D7  07A0               	addwf	i1___awmod@counter,f
  4486     06D8                     i1l1755:
  4487     06D8  1FFA               	btfss	i1___awmod@divisor+1,7
  4488     06D9  2EDB               	goto	u78_21
  4489     06DA  2EDC               	goto	u78_20
  4490     06DB                     u78_21:
  4491     06DB  2ECF               	goto	i1l1751
  4492     06DC                     u78_20:
  4493     06DC                     i1l1757:
  4494     06DC  087A               	movf	i1___awmod@divisor+1,w
  4495     06DD  027C               	subwf	i1___awmod@dividend+1,w
  4496     06DE  1D03               	skipz
  4497     06DF  2EE2               	goto	u79_25
  4498     06E0  0879               	movf	i1___awmod@divisor,w
  4499     06E1  027B               	subwf	i1___awmod@dividend,w
  4500     06E2                     u79_25:
  4501     06E2  1C03               	skipc
  4502     06E3  2EE5               	goto	u79_21
  4503     06E4  2EE6               	goto	u79_20
  4504     06E5                     u79_21:
  4505     06E5  2EEA               	goto	i1l1761
  4506     06E6                     u79_20:
  4507     06E6                     i1l1759:
  4508     06E6  0879               	movf	i1___awmod@divisor,w
  4509     06E7  02FB               	subwf	i1___awmod@dividend,f
  4510     06E8  087A               	movf	i1___awmod@divisor+1,w
  4511     06E9  3BFC               	subwfb	i1___awmod@dividend+1,f
  4512     06EA                     i1l1761:
  4513     06EA  3001               	movlw	1
  4514     06EB                     u80_25:
  4515     06EB  36FA               	lsrf	i1___awmod@divisor+1,f
  4516     06EC  0CF9               	rrf	i1___awmod@divisor,f
  4517     06ED  0B89               	decfsz	9,f
  4518     06EE  2EEB               	goto	u80_25
  4519     06EF                     i1l1763:
  4520     06EF  3001               	movlw	1
  4521     06F0  02A0               	subwf	i1___awmod@counter,f
  4522     06F1  1D03               	btfss	3,2
  4523     06F2  2EF4               	goto	u81_21
  4524     06F3  2EF5               	goto	u81_20
  4525     06F4                     u81_21:
  4526     06F4  2EDC               	goto	i1l1757
  4527     06F5                     u81_20:
  4528     06F5                     i1l1765:
  4529     06F5  0821               	movf	i1___awmod@sign,w
  4530     06F6  1903               	btfsc	3,2
  4531     06F7  2EF9               	goto	u82_21
  4532     06F8  2EFA               	goto	u82_20
  4533     06F9                     u82_21:
  4534     06F9  2EFF               	goto	i1l1769
  4535     06FA                     u82_20:
  4536     06FA                     i1l1767:
  4537     06FA  09FB               	comf	i1___awmod@dividend,f
  4538     06FB  09FC               	comf	i1___awmod@dividend+1,f
  4539     06FC  0AFB               	incf	i1___awmod@dividend,f
  4540     06FD  1903               	skipnz
  4541     06FE  0AFC               	incf	i1___awmod@dividend+1,f
  4542     06FF                     i1l1769:
  4543     06FF  087C               	movf	i1___awmod@dividend+1,w
  4544     0700  00FA               	movwf	?i1___awmod+1
  4545     0701  087B               	movf	i1___awmod@dividend,w
  4546     0702  00F9               	movwf	?i1___awmod
  4547     0703                     i1l507:
  4548     0703  0008               	return
  4549     0704                     __end_ofi1___awmod:
  4550                           
  4551                           	psect	text20
  4552     0651                     __ptext20:	
  4553 ;; *************** function i1___awdiv *****************
  4554 ;; Defined at:
  4555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  divisor         2    0[COMMON] int 
  4558 ;;  dividend        2    2[COMMON] int 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  quotient        2    7[COMMON] int 
  4561 ;;  sign            1    6[COMMON] unsigned char 
  4562 ;;  counter         1    5[COMMON] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  2    0[COMMON] int 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4572 ;;      Params:         4       0       0       0       0       0       0
  4573 ;;      Locals:         4       0       0       0       0       0       0
  4574 ;;      Temps:          1       0       0       0       0       0       0
  4575 ;;      Totals:         9       0       0       0       0       0       0
  4576 ;;Total ram usage:        9 bytes
  4577 ;; Hardware stack levels used: 1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		i1_Display
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585     0651                     i1___awdiv:	
  4586                           ;psect for function i1___awdiv
  4587                           
  4588     0651                     i1l1691:	
  4589                           ;incstack = 0
  4590                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4591                           
  4592     0651  01F6               	clrf	i1___awdiv@sign
  4593     0652                     i1l1693:
  4594     0652  1FF1               	btfss	i1___awdiv@divisor+1,7
  4595     0653  2E55               	goto	u64_21
  4596     0654  2E56               	goto	u64_20
  4597     0655                     u64_21:
  4598     0655  2E5D               	goto	i1l1699
  4599     0656                     u64_20:
  4600     0656                     i1l1695:
  4601     0656  09F0               	comf	i1___awdiv@divisor,f
  4602     0657  09F1               	comf	i1___awdiv@divisor+1,f
  4603     0658  0AF0               	incf	i1___awdiv@divisor,f
  4604     0659  1903               	skipnz
  4605     065A  0AF1               	incf	i1___awdiv@divisor+1,f
  4606     065B                     i1l1697:
  4607     065B  01F6               	clrf	i1___awdiv@sign
  4608     065C  0AF6               	incf	i1___awdiv@sign,f
  4609     065D                     i1l1699:
  4610     065D  1FF3               	btfss	i1___awdiv@dividend+1,7
  4611     065E  2E60               	goto	u65_21
  4612     065F  2E61               	goto	u65_20
  4613     0660                     u65_21:
  4614     0660  2E6A               	goto	i1l1705
  4615     0661                     u65_20:
  4616     0661                     i1l1701:
  4617     0661  09F2               	comf	i1___awdiv@dividend,f
  4618     0662  09F3               	comf	i1___awdiv@dividend+1,f
  4619     0663  0AF2               	incf	i1___awdiv@dividend,f
  4620     0664  1903               	skipnz
  4621     0665  0AF3               	incf	i1___awdiv@dividend+1,f
  4622     0666                     i1l1703:
  4623     0666  3001               	movlw	1
  4624     0667  00F4               	movwf	??i1___awdiv
  4625     0668  0874               	movf	??i1___awdiv,w
  4626     0669  06F6               	xorwf	i1___awdiv@sign,f
  4627     066A                     i1l1705:
  4628     066A  01F7               	clrf	i1___awdiv@quotient
  4629     066B  01F8               	clrf	i1___awdiv@quotient+1
  4630     066C                     i1l1707:
  4631     066C  0870               	movf	i1___awdiv@divisor,w
  4632     066D  0471               	iorwf	i1___awdiv@divisor+1,w
  4633     066E  1903               	btfsc	3,2
  4634     066F  2E71               	goto	u66_21
  4635     0670  2E72               	goto	u66_20
  4636     0671                     u66_21:
  4637     0671  2EA1               	goto	i1l1727
  4638     0672                     u66_20:
  4639     0672                     i1l1709:
  4640     0672  01F5               	clrf	i1___awdiv@counter
  4641     0673  0AF5               	incf	i1___awdiv@counter,f
  4642     0674  2E7E               	goto	i1l1715
  4643     0675                     i1l1711:
  4644     0675  3001               	movlw	1
  4645     0676                     u67_25:
  4646     0676  35F0               	lslf	i1___awdiv@divisor,f
  4647     0677  0DF1               	rlf	i1___awdiv@divisor+1,f
  4648     0678  0B89               	decfsz	9,f
  4649     0679  2E76               	goto	u67_25
  4650     067A                     i1l1713:
  4651     067A  3001               	movlw	1
  4652     067B  00F4               	movwf	??i1___awdiv
  4653     067C  0874               	movf	??i1___awdiv,w
  4654     067D  07F5               	addwf	i1___awdiv@counter,f
  4655     067E                     i1l1715:
  4656     067E  1FF1               	btfss	i1___awdiv@divisor+1,7
  4657     067F  2E81               	goto	u68_21
  4658     0680  2E82               	goto	u68_20
  4659     0681                     u68_21:
  4660     0681  2E75               	goto	i1l1711
  4661     0682                     u68_20:
  4662     0682                     i1l1717:
  4663     0682  3001               	movlw	1
  4664     0683                     u69_25:
  4665     0683  35F7               	lslf	i1___awdiv@quotient,f
  4666     0684  0DF8               	rlf	i1___awdiv@quotient+1,f
  4667     0685  0B89               	decfsz	9,f
  4668     0686  2E83               	goto	u69_25
  4669     0687  0871               	movf	i1___awdiv@divisor+1,w
  4670     0688  0273               	subwf	i1___awdiv@dividend+1,w
  4671     0689  1D03               	skipz
  4672     068A  2E8D               	goto	u70_25
  4673     068B  0870               	movf	i1___awdiv@divisor,w
  4674     068C  0272               	subwf	i1___awdiv@dividend,w
  4675     068D                     u70_25:
  4676     068D  1C03               	skipc
  4677     068E  2E90               	goto	u70_21
  4678     068F  2E91               	goto	u70_20
  4679     0690                     u70_21:
  4680     0690  2E96               	goto	i1l1723
  4681     0691                     u70_20:
  4682     0691                     i1l1719:
  4683     0691  0870               	movf	i1___awdiv@divisor,w
  4684     0692  02F2               	subwf	i1___awdiv@dividend,f
  4685     0693  0871               	movf	i1___awdiv@divisor+1,w
  4686     0694  3BF3               	subwfb	i1___awdiv@dividend+1,f
  4687     0695                     i1l1721:
  4688     0695  1477               	bsf	i1___awdiv@quotient,0
  4689     0696                     i1l1723:
  4690     0696  3001               	movlw	1
  4691     0697                     u71_25:
  4692     0697  36F1               	lsrf	i1___awdiv@divisor+1,f
  4693     0698  0CF0               	rrf	i1___awdiv@divisor,f
  4694     0699  0B89               	decfsz	9,f
  4695     069A  2E97               	goto	u71_25
  4696     069B                     i1l1725:
  4697     069B  3001               	movlw	1
  4698     069C  02F5               	subwf	i1___awdiv@counter,f
  4699     069D  1D03               	btfss	3,2
  4700     069E  2EA0               	goto	u72_21
  4701     069F  2EA1               	goto	u72_20
  4702     06A0                     u72_21:
  4703     06A0  2E82               	goto	i1l1717
  4704     06A1                     u72_20:
  4705     06A1                     i1l1727:
  4706     06A1  0876               	movf	i1___awdiv@sign,w
  4707     06A2  1903               	btfsc	3,2
  4708     06A3  2EA5               	goto	u73_21
  4709     06A4  2EA6               	goto	u73_20
  4710     06A5                     u73_21:
  4711     06A5  2EAB               	goto	i1l1731
  4712     06A6                     u73_20:
  4713     06A6                     i1l1729:
  4714     06A6  09F7               	comf	i1___awdiv@quotient,f
  4715     06A7  09F8               	comf	i1___awdiv@quotient+1,f
  4716     06A8  0AF7               	incf	i1___awdiv@quotient,f
  4717     06A9  1903               	skipnz
  4718     06AA  0AF8               	incf	i1___awdiv@quotient+1,f
  4719     06AB                     i1l1731:
  4720     06AB  0878               	movf	i1___awdiv@quotient+1,w
  4721     06AC  00F1               	movwf	?i1___awdiv+1
  4722     06AD  0877               	movf	i1___awdiv@quotient,w
  4723     06AE  00F0               	movwf	?i1___awdiv
  4724     06AF                     i1l494:
  4725     06AF  0008               	return
  4726     06B0                     __end_ofi1___awdiv:
  4727                           
  4728                           	psect	text21
  4729     01FF                     __ptext21:	
  4730 ;; *************** function i1_SetSegments *****************
  4731 ;; Defined at:
  4732 ;;		line 129 in file "main.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  digit           1    wreg     PTR struct digit
  4735 ;;		 -> one(7), ten(7), hundred(7), 
  4736 ;;  a               2    0[COMMON] int 
  4737 ;;  blank           1    2[COMMON] unsigned char 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  digit           1    3[COMMON] PTR struct digit
  4740 ;;		 -> one(7), ten(7), hundred(7), 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4750 ;;      Params:         3       0       0       0       0       0       0
  4751 ;;      Locals:         1       0       0       0       0       0       0
  4752 ;;      Temps:          0       0       0       0       0       0       0
  4753 ;;      Totals:         4       0       0       0       0       0       0
  4754 ;;Total ram usage:        4 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		i1_Display
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763     01FF                     i1_SetSegments:	
  4764                           ;psect for function i1_SetSegments
  4765                           
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in i1_SetSegments: [wreg-fsr1h+status,2+status,0]
  4769                           ;i1SetSegments@digit stored from wreg
  4770     01FF  00F3               	movwf	i1SetSegments@digit
  4771     0200                     i1l1541:
  4772                           
  4773                           ;main.c: 130:     if (blank) {
  4774     0200  0872               	movf	i1SetSegments@blank,w
  4775     0201  1903               	btfsc	3,2
  4776     0202  2A04               	goto	u63_21
  4777     0203  2A05               	goto	u63_20
  4778     0204                     u63_21:
  4779     0204  2BAC               	goto	i1l1685
  4780     0205                     u63_20:
  4781     0205                     i1l1543:
  4782                           
  4783                           ;main.c: 131:         digit->a = 0;
  4784     0205  0873               	movf	i1SetSegments@digit,w
  4785     0206  0086               	movwf	6
  4786     0207  0187               	clrf	7
  4787     0208  0181               	clrf	1
  4788                           
  4789                           ;main.c: 132:         digit->b = 0;
  4790     0209  0A73               	incf	i1SetSegments@digit,w
  4791     020A  0086               	movwf	6
  4792     020B  0187               	clrf	7
  4793     020C  0181               	clrf	1
  4794     020D                     i1l1545:
  4795                           
  4796                           ;main.c: 133:         digit->c = 0;
  4797     020D  0873               	movf	i1SetSegments@digit,w
  4798     020E  3E02               	addlw	2
  4799     020F  0086               	movwf	6
  4800     0210  0187               	clrf	7
  4801     0211  0181               	clrf	1
  4802     0212                     i1l1547:
  4803                           
  4804                           ;main.c: 134:         digit->d = 0;
  4805     0212  0873               	movf	i1SetSegments@digit,w
  4806     0213  3E03               	addlw	3
  4807     0214  0086               	movwf	6
  4808     0215  0187               	clrf	7
  4809     0216  0181               	clrf	1
  4810     0217                     i1l1549:
  4811                           
  4812                           ;main.c: 135:         digit->e = 0;
  4813     0217  0873               	movf	i1SetSegments@digit,w
  4814     0218  3E04               	addlw	4
  4815     0219  0086               	movwf	6
  4816     021A  0187               	clrf	7
  4817     021B  0181               	clrf	1
  4818     021C                     i1l1551:
  4819                           
  4820                           ;main.c: 136:         digit->f = 0;
  4821     021C  0873               	movf	i1SetSegments@digit,w
  4822     021D  3E05               	addlw	5
  4823     021E  0086               	movwf	6
  4824     021F  0187               	clrf	7
  4825     0220  0181               	clrf	1
  4826     0221                     i1l1553:
  4827                           
  4828                           ;main.c: 137:         digit->g = 0;
  4829     0221  0873               	movf	i1SetSegments@digit,w
  4830     0222  3E06               	addlw	6
  4831     0223  0086               	movwf	6
  4832     0224  0187               	clrf	7
  4833     0225  0181               	clrf	1
  4834                           
  4835                           ;main.c: 138:     } else {
  4836     0226  2BD1               	goto	i1l259
  4837     0227                     i1l1555:
  4838                           
  4839                           ;main.c: 141:                 digit->a = 1;
  4840     0227  0873               	movf	i1SetSegments@digit,w
  4841     0228  0086               	movwf	6
  4842     0229  0187               	clrf	7
  4843     022A  0181               	clrf	1
  4844     022B  0A81               	incf	1,f
  4845                           
  4846                           ;main.c: 142:                 digit->b = 1;
  4847     022C  0A73               	incf	i1SetSegments@digit,w
  4848     022D  0086               	movwf	6
  4849     022E  0187               	clrf	7
  4850     022F  0181               	clrf	1
  4851     0230  0A81               	incf	1,f
  4852     0231                     i1l1557:
  4853                           
  4854                           ;main.c: 143:                 digit->c = 1;
  4855     0231  0873               	movf	i1SetSegments@digit,w
  4856     0232  3E02               	addlw	2
  4857     0233  0086               	movwf	6
  4858     0234  0187               	clrf	7
  4859     0235  0181               	clrf	1
  4860     0236  0A81               	incf	1,f
  4861     0237                     i1l1559:
  4862                           
  4863                           ;main.c: 144:                 digit->d = 1;
  4864     0237  0873               	movf	i1SetSegments@digit,w
  4865     0238  3E03               	addlw	3
  4866     0239  0086               	movwf	6
  4867     023A  0187               	clrf	7
  4868     023B  0181               	clrf	1
  4869     023C  0A81               	incf	1,f
  4870     023D                     i1l1561:
  4871                           
  4872                           ;main.c: 145:                 digit->e = 1;
  4873     023D  0873               	movf	i1SetSegments@digit,w
  4874     023E  3E04               	addlw	4
  4875     023F  0086               	movwf	6
  4876     0240  0187               	clrf	7
  4877     0241  0181               	clrf	1
  4878     0242  0A81               	incf	1,f
  4879     0243                     i1l1563:
  4880                           
  4881                           ;main.c: 146:                 digit->f = 1;
  4882     0243  0873               	movf	i1SetSegments@digit,w
  4883     0244  3E05               	addlw	5
  4884     0245  0086               	movwf	6
  4885     0246  0187               	clrf	7
  4886     0247  0181               	clrf	1
  4887     0248  0A81               	incf	1,f
  4888     0249                     i1l1565:
  4889                           
  4890                           ;main.c: 147:                 digit->g = 0;
  4891     0249  0873               	movf	i1SetSegments@digit,w
  4892     024A  3E06               	addlw	6
  4893     024B  0086               	movwf	6
  4894     024C  0187               	clrf	7
  4895     024D  0181               	clrf	1
  4896                           
  4897                           ;main.c: 148:                 break;
  4898     024E  2BD1               	goto	i1l259
  4899     024F                     i1l1567:
  4900                           
  4901                           ;main.c: 151:                 digit->a = 0;
  4902     024F  0873               	movf	i1SetSegments@digit,w
  4903     0250  0086               	movwf	6
  4904     0251  0187               	clrf	7
  4905     0252  0181               	clrf	1
  4906     0253                     i1l1569:
  4907                           
  4908                           ;main.c: 152:                 digit->b = 1;
  4909     0253  0A73               	incf	i1SetSegments@digit,w
  4910     0254  0086               	movwf	6
  4911     0255  0187               	clrf	7
  4912     0256  0181               	clrf	1
  4913     0257  0A81               	incf	1,f
  4914     0258                     i1l1571:
  4915                           
  4916                           ;main.c: 153:                 digit->c = 1;
  4917     0258  0873               	movf	i1SetSegments@digit,w
  4918     0259  3E02               	addlw	2
  4919     025A  0086               	movwf	6
  4920     025B  0187               	clrf	7
  4921     025C  0181               	clrf	1
  4922     025D  0A81               	incf	1,f
  4923     025E                     i1l1573:
  4924                           
  4925                           ;main.c: 154:                 digit->d = 0;
  4926     025E  0873               	movf	i1SetSegments@digit,w
  4927     025F  3E03               	addlw	3
  4928     0260  0086               	movwf	6
  4929     0261  0187               	clrf	7
  4930     0262  0181               	clrf	1
  4931     0263                     i1l1575:
  4932                           
  4933                           ;main.c: 155:                 digit->e = 0;
  4934     0263  0873               	movf	i1SetSegments@digit,w
  4935     0264  3E04               	addlw	4
  4936     0265  0086               	movwf	6
  4937     0266  0187               	clrf	7
  4938     0267  0181               	clrf	1
  4939     0268                     i1l1577:
  4940                           
  4941                           ;main.c: 156:                 digit->f = 0;
  4942     0268  0873               	movf	i1SetSegments@digit,w
  4943     0269  3E05               	addlw	5
  4944     026A  0086               	movwf	6
  4945     026B  0187               	clrf	7
  4946     026C  0181               	clrf	1
  4947     026D                     i1l1579:
  4948                           
  4949                           ;main.c: 157:                 digit->g = 0;
  4950     026D  0873               	movf	i1SetSegments@digit,w
  4951     026E  3E06               	addlw	6
  4952     026F  0086               	movwf	6
  4953     0270  0187               	clrf	7
  4954     0271  0181               	clrf	1
  4955                           
  4956                           ;main.c: 158:                 break;
  4957     0272  2BD1               	goto	i1l259
  4958     0273                     i1l1581:
  4959                           
  4960                           ;main.c: 161:                 digit->a = 1;
  4961     0273  0873               	movf	i1SetSegments@digit,w
  4962     0274  0086               	movwf	6
  4963     0275  0187               	clrf	7
  4964     0276  0181               	clrf	1
  4965     0277  0A81               	incf	1,f
  4966                           
  4967                           ;main.c: 162:                 digit->b = 1;
  4968     0278  0A73               	incf	i1SetSegments@digit,w
  4969     0279  0086               	movwf	6
  4970     027A  0187               	clrf	7
  4971     027B  0181               	clrf	1
  4972     027C  0A81               	incf	1,f
  4973     027D                     i1l1583:
  4974                           
  4975                           ;main.c: 163:                 digit->c = 0;
  4976     027D  0873               	movf	i1SetSegments@digit,w
  4977     027E  3E02               	addlw	2
  4978     027F  0086               	movwf	6
  4979     0280  0187               	clrf	7
  4980     0281  0181               	clrf	1
  4981     0282                     i1l1585:
  4982                           
  4983                           ;main.c: 164:                 digit->d = 1;
  4984     0282  0873               	movf	i1SetSegments@digit,w
  4985     0283  3E03               	addlw	3
  4986     0284  0086               	movwf	6
  4987     0285  0187               	clrf	7
  4988     0286  0181               	clrf	1
  4989     0287  0A81               	incf	1,f
  4990     0288                     i1l1587:
  4991                           
  4992                           ;main.c: 165:                 digit->e = 1;
  4993     0288  0873               	movf	i1SetSegments@digit,w
  4994     0289  3E04               	addlw	4
  4995     028A  0086               	movwf	6
  4996     028B  0187               	clrf	7
  4997     028C  0181               	clrf	1
  4998     028D  0A81               	incf	1,f
  4999     028E                     i1l1589:
  5000                           
  5001                           ;main.c: 166:                 digit->f = 0;
  5002     028E  0873               	movf	i1SetSegments@digit,w
  5003     028F  3E05               	addlw	5
  5004     0290  0086               	movwf	6
  5005     0291  0187               	clrf	7
  5006     0292  0181               	clrf	1
  5007     0293                     i1l1591:
  5008                           
  5009                           ;main.c: 167:                 digit->g = 1;
  5010     0293  0873               	movf	i1SetSegments@digit,w
  5011     0294  3E06               	addlw	6
  5012     0295  0086               	movwf	6
  5013     0296  0187               	clrf	7
  5014     0297  0181               	clrf	1
  5015     0298  0A81               	incf	1,f
  5016                           
  5017                           ;main.c: 168:                 break;
  5018     0299  2BD1               	goto	i1l259
  5019     029A                     i1l1593:
  5020                           
  5021                           ;main.c: 171:                 digit->a = 1;
  5022     029A  0873               	movf	i1SetSegments@digit,w
  5023     029B  0086               	movwf	6
  5024     029C  0187               	clrf	7
  5025     029D  0181               	clrf	1
  5026     029E  0A81               	incf	1,f
  5027                           
  5028                           ;main.c: 172:                 digit->b = 1;
  5029     029F  0A73               	incf	i1SetSegments@digit,w
  5030     02A0  0086               	movwf	6
  5031     02A1  0187               	clrf	7
  5032     02A2  0181               	clrf	1
  5033     02A3  0A81               	incf	1,f
  5034     02A4                     i1l1595:
  5035                           
  5036                           ;main.c: 173:                 digit->c = 1;
  5037     02A4  0873               	movf	i1SetSegments@digit,w
  5038     02A5  3E02               	addlw	2
  5039     02A6  0086               	movwf	6
  5040     02A7  0187               	clrf	7
  5041     02A8  0181               	clrf	1
  5042     02A9  0A81               	incf	1,f
  5043     02AA                     i1l1597:
  5044                           
  5045                           ;main.c: 174:                 digit->d = 1;
  5046     02AA  0873               	movf	i1SetSegments@digit,w
  5047     02AB  3E03               	addlw	3
  5048     02AC  0086               	movwf	6
  5049     02AD  0187               	clrf	7
  5050     02AE  0181               	clrf	1
  5051     02AF  0A81               	incf	1,f
  5052     02B0                     i1l1599:
  5053                           
  5054                           ;main.c: 175:                 digit->e = 0;
  5055     02B0  0873               	movf	i1SetSegments@digit,w
  5056     02B1  3E04               	addlw	4
  5057     02B2  0086               	movwf	6
  5058     02B3  0187               	clrf	7
  5059     02B4  0181               	clrf	1
  5060     02B5                     i1l1601:
  5061                           
  5062                           ;main.c: 176:                 digit->f = 0;
  5063     02B5  0873               	movf	i1SetSegments@digit,w
  5064     02B6  3E05               	addlw	5
  5065     02B7  0086               	movwf	6
  5066     02B8  0187               	clrf	7
  5067     02B9  0181               	clrf	1
  5068     02BA                     i1l1603:
  5069                           
  5070                           ;main.c: 177:                 digit->g = 1;
  5071     02BA  0873               	movf	i1SetSegments@digit,w
  5072     02BB  3E06               	addlw	6
  5073     02BC  0086               	movwf	6
  5074     02BD  0187               	clrf	7
  5075     02BE  0181               	clrf	1
  5076     02BF  0A81               	incf	1,f
  5077                           
  5078                           ;main.c: 178:                 break;
  5079     02C0  2BD1               	goto	i1l259
  5080     02C1                     i1l1605:
  5081                           
  5082                           ;main.c: 181:                 digit->a = 0;
  5083     02C1  0873               	movf	i1SetSegments@digit,w
  5084     02C2  0086               	movwf	6
  5085     02C3  0187               	clrf	7
  5086     02C4  0181               	clrf	1
  5087     02C5                     i1l1607:
  5088                           
  5089                           ;main.c: 182:                 digit->b = 1;
  5090     02C5  0A73               	incf	i1SetSegments@digit,w
  5091     02C6  0086               	movwf	6
  5092     02C7  0187               	clrf	7
  5093     02C8  0181               	clrf	1
  5094     02C9  0A81               	incf	1,f
  5095     02CA                     i1l1609:
  5096                           
  5097                           ;main.c: 183:                 digit->c = 1;
  5098     02CA  0873               	movf	i1SetSegments@digit,w
  5099     02CB  3E02               	addlw	2
  5100     02CC  0086               	movwf	6
  5101     02CD  0187               	clrf	7
  5102     02CE  0181               	clrf	1
  5103     02CF  0A81               	incf	1,f
  5104     02D0                     i1l1611:
  5105                           
  5106                           ;main.c: 184:                 digit->d = 0;
  5107     02D0  0873               	movf	i1SetSegments@digit,w
  5108     02D1  3E03               	addlw	3
  5109     02D2  0086               	movwf	6
  5110     02D3  0187               	clrf	7
  5111     02D4  0181               	clrf	1
  5112     02D5                     i1l1613:
  5113                           
  5114                           ;main.c: 185:                 digit->e = 0;
  5115     02D5  0873               	movf	i1SetSegments@digit,w
  5116     02D6  3E04               	addlw	4
  5117     02D7  0086               	movwf	6
  5118     02D8  0187               	clrf	7
  5119     02D9  0181               	clrf	1
  5120     02DA                     i1l1615:
  5121                           
  5122                           ;main.c: 186:                 digit->f = 1;
  5123     02DA  0873               	movf	i1SetSegments@digit,w
  5124     02DB  3E05               	addlw	5
  5125     02DC  0086               	movwf	6
  5126     02DD  0187               	clrf	7
  5127     02DE  0181               	clrf	1
  5128     02DF  0A81               	incf	1,f
  5129     02E0                     i1l1617:
  5130                           
  5131                           ;main.c: 187:                 digit->g = 1;
  5132     02E0  0873               	movf	i1SetSegments@digit,w
  5133     02E1  3E06               	addlw	6
  5134     02E2  0086               	movwf	6
  5135     02E3  0187               	clrf	7
  5136     02E4  0181               	clrf	1
  5137     02E5  0A81               	incf	1,f
  5138                           
  5139                           ;main.c: 188:                 break;
  5140     02E6  2BD1               	goto	i1l259
  5141     02E7                     i1l1619:
  5142                           
  5143                           ;main.c: 191:                 digit->a = 1;
  5144     02E7  0873               	movf	i1SetSegments@digit,w
  5145     02E8  0086               	movwf	6
  5146     02E9  0187               	clrf	7
  5147     02EA  0181               	clrf	1
  5148     02EB  0A81               	incf	1,f
  5149     02EC                     i1l1621:
  5150                           
  5151                           ;main.c: 192:                 digit->b = 0;
  5152     02EC  0A73               	incf	i1SetSegments@digit,w
  5153     02ED  0086               	movwf	6
  5154     02EE  0187               	clrf	7
  5155     02EF  0181               	clrf	1
  5156     02F0                     i1l1623:
  5157                           
  5158                           ;main.c: 193:                 digit->c = 1;
  5159     02F0  0873               	movf	i1SetSegments@digit,w
  5160     02F1  3E02               	addlw	2
  5161     02F2  0086               	movwf	6
  5162     02F3  0187               	clrf	7
  5163     02F4  0181               	clrf	1
  5164     02F5  0A81               	incf	1,f
  5165     02F6                     i1l1625:
  5166                           
  5167                           ;main.c: 194:                 digit->d = 1;
  5168     02F6  0873               	movf	i1SetSegments@digit,w
  5169     02F7  3E03               	addlw	3
  5170     02F8  0086               	movwf	6
  5171     02F9  0187               	clrf	7
  5172     02FA  0181               	clrf	1
  5173     02FB  0A81               	incf	1,f
  5174     02FC                     i1l1627:
  5175                           
  5176                           ;main.c: 195:                 digit->e = 0;
  5177     02FC  0873               	movf	i1SetSegments@digit,w
  5178     02FD  3E04               	addlw	4
  5179     02FE  0086               	movwf	6
  5180     02FF  0187               	clrf	7
  5181     0300  0181               	clrf	1
  5182     0301                     i1l1629:
  5183                           
  5184                           ;main.c: 196:                 digit->f = 1;
  5185     0301  0873               	movf	i1SetSegments@digit,w
  5186     0302  3E05               	addlw	5
  5187     0303  0086               	movwf	6
  5188     0304  0187               	clrf	7
  5189     0305  0181               	clrf	1
  5190     0306  0A81               	incf	1,f
  5191     0307                     i1l1631:
  5192                           
  5193                           ;main.c: 197:                 digit->g = 1;
  5194     0307  0873               	movf	i1SetSegments@digit,w
  5195     0308  3E06               	addlw	6
  5196     0309  0086               	movwf	6
  5197     030A  0187               	clrf	7
  5198     030B  0181               	clrf	1
  5199     030C  0A81               	incf	1,f
  5200                           
  5201                           ;main.c: 198:                 break;
  5202     030D  2BD1               	goto	i1l259
  5203     030E                     i1l1633:
  5204                           
  5205                           ;main.c: 201:                 digit->a = 1;
  5206     030E  0873               	movf	i1SetSegments@digit,w
  5207     030F  0086               	movwf	6
  5208     0310  0187               	clrf	7
  5209     0311  0181               	clrf	1
  5210     0312  0A81               	incf	1,f
  5211     0313                     i1l1635:
  5212                           
  5213                           ;main.c: 202:                 digit->b = 0;
  5214     0313  0A73               	incf	i1SetSegments@digit,w
  5215     0314  0086               	movwf	6
  5216     0315  0187               	clrf	7
  5217     0316  0181               	clrf	1
  5218     0317                     i1l1637:
  5219                           
  5220                           ;main.c: 203:                 digit->c = 1;
  5221     0317  0873               	movf	i1SetSegments@digit,w
  5222     0318  3E02               	addlw	2
  5223     0319  0086               	movwf	6
  5224     031A  0187               	clrf	7
  5225     031B  0181               	clrf	1
  5226     031C  0A81               	incf	1,f
  5227     031D                     i1l1639:
  5228                           
  5229                           ;main.c: 204:                 digit->d = 1;
  5230     031D  0873               	movf	i1SetSegments@digit,w
  5231     031E  3E03               	addlw	3
  5232     031F  0086               	movwf	6
  5233     0320  0187               	clrf	7
  5234     0321  0181               	clrf	1
  5235     0322  0A81               	incf	1,f
  5236     0323                     i1l1641:
  5237                           
  5238                           ;main.c: 205:                 digit->e = 1;
  5239     0323  0873               	movf	i1SetSegments@digit,w
  5240     0324  3E04               	addlw	4
  5241     0325  0086               	movwf	6
  5242     0326  0187               	clrf	7
  5243     0327  0181               	clrf	1
  5244     0328  0A81               	incf	1,f
  5245     0329                     i1l1643:
  5246                           
  5247                           ;main.c: 206:                 digit->f = 1;
  5248     0329  0873               	movf	i1SetSegments@digit,w
  5249     032A  3E05               	addlw	5
  5250     032B  0086               	movwf	6
  5251     032C  0187               	clrf	7
  5252     032D  0181               	clrf	1
  5253     032E  0A81               	incf	1,f
  5254     032F                     i1l1645:
  5255                           
  5256                           ;main.c: 207:                 digit->g = 1;
  5257     032F  0873               	movf	i1SetSegments@digit,w
  5258     0330  3E06               	addlw	6
  5259     0331  0086               	movwf	6
  5260     0332  0187               	clrf	7
  5261     0333  0181               	clrf	1
  5262     0334  0A81               	incf	1,f
  5263                           
  5264                           ;main.c: 208:                 break;
  5265     0335  2BD1               	goto	i1l259
  5266     0336                     i1l1647:
  5267                           
  5268                           ;main.c: 211:                 digit->a = 1;
  5269     0336  0873               	movf	i1SetSegments@digit,w
  5270     0337  0086               	movwf	6
  5271     0338  0187               	clrf	7
  5272     0339  0181               	clrf	1
  5273     033A  0A81               	incf	1,f
  5274                           
  5275                           ;main.c: 212:                 digit->b = 1;
  5276     033B  0A73               	incf	i1SetSegments@digit,w
  5277     033C  0086               	movwf	6
  5278     033D  0187               	clrf	7
  5279     033E  0181               	clrf	1
  5280     033F  0A81               	incf	1,f
  5281     0340                     i1l1649:
  5282                           
  5283                           ;main.c: 213:                 digit->c = 1;
  5284     0340  0873               	movf	i1SetSegments@digit,w
  5285     0341  3E02               	addlw	2
  5286     0342  0086               	movwf	6
  5287     0343  0187               	clrf	7
  5288     0344  0181               	clrf	1
  5289     0345  0A81               	incf	1,f
  5290     0346                     i1l1651:
  5291                           
  5292                           ;main.c: 214:                 digit->d = 0;
  5293     0346  0873               	movf	i1SetSegments@digit,w
  5294     0347  3E03               	addlw	3
  5295     0348  0086               	movwf	6
  5296     0349  0187               	clrf	7
  5297     034A  0181               	clrf	1
  5298     034B                     i1l1653:
  5299                           
  5300                           ;main.c: 215:                 digit->e = 0;
  5301     034B  0873               	movf	i1SetSegments@digit,w
  5302     034C  3E04               	addlw	4
  5303     034D  0086               	movwf	6
  5304     034E  0187               	clrf	7
  5305     034F  0181               	clrf	1
  5306     0350                     i1l1655:
  5307                           
  5308                           ;main.c: 216:                 digit->f = 0;
  5309     0350  0873               	movf	i1SetSegments@digit,w
  5310     0351  3E05               	addlw	5
  5311     0352  0086               	movwf	6
  5312     0353  0187               	clrf	7
  5313     0354  0181               	clrf	1
  5314     0355                     i1l1657:
  5315                           
  5316                           ;main.c: 217:                 digit->g = 0;
  5317     0355  0873               	movf	i1SetSegments@digit,w
  5318     0356  3E06               	addlw	6
  5319     0357  0086               	movwf	6
  5320     0358  0187               	clrf	7
  5321     0359  0181               	clrf	1
  5322                           
  5323                           ;main.c: 218:                 break;
  5324     035A  2BD1               	goto	i1l259
  5325     035B                     i1l1659:
  5326                           
  5327                           ;main.c: 221:                 digit->a = 1;
  5328     035B  0873               	movf	i1SetSegments@digit,w
  5329     035C  0086               	movwf	6
  5330     035D  0187               	clrf	7
  5331     035E  0181               	clrf	1
  5332     035F  0A81               	incf	1,f
  5333                           
  5334                           ;main.c: 222:                 digit->b = 1;
  5335     0360  0A73               	incf	i1SetSegments@digit,w
  5336     0361  0086               	movwf	6
  5337     0362  0187               	clrf	7
  5338     0363  0181               	clrf	1
  5339     0364  0A81               	incf	1,f
  5340     0365                     i1l1661:
  5341                           
  5342                           ;main.c: 223:                 digit->c = 1;
  5343     0365  0873               	movf	i1SetSegments@digit,w
  5344     0366  3E02               	addlw	2
  5345     0367  0086               	movwf	6
  5346     0368  0187               	clrf	7
  5347     0369  0181               	clrf	1
  5348     036A  0A81               	incf	1,f
  5349     036B                     i1l1663:
  5350                           
  5351                           ;main.c: 224:                 digit->d = 1;
  5352     036B  0873               	movf	i1SetSegments@digit,w
  5353     036C  3E03               	addlw	3
  5354     036D  0086               	movwf	6
  5355     036E  0187               	clrf	7
  5356     036F  0181               	clrf	1
  5357     0370  0A81               	incf	1,f
  5358     0371                     i1l1665:
  5359                           
  5360                           ;main.c: 225:                 digit->e = 1;
  5361     0371  0873               	movf	i1SetSegments@digit,w
  5362     0372  3E04               	addlw	4
  5363     0373  0086               	movwf	6
  5364     0374  0187               	clrf	7
  5365     0375  0181               	clrf	1
  5366     0376  0A81               	incf	1,f
  5367     0377                     i1l1667:
  5368                           
  5369                           ;main.c: 226:                 digit->f = 1;
  5370     0377  0873               	movf	i1SetSegments@digit,w
  5371     0378  3E05               	addlw	5
  5372     0379  0086               	movwf	6
  5373     037A  0187               	clrf	7
  5374     037B  0181               	clrf	1
  5375     037C  0A81               	incf	1,f
  5376     037D                     i1l1669:
  5377                           
  5378                           ;main.c: 227:                 digit->g = 1;
  5379     037D  0873               	movf	i1SetSegments@digit,w
  5380     037E  3E06               	addlw	6
  5381     037F  0086               	movwf	6
  5382     0380  0187               	clrf	7
  5383     0381  0181               	clrf	1
  5384     0382  0A81               	incf	1,f
  5385                           
  5386                           ;main.c: 228:                 break;
  5387     0383  2BD1               	goto	i1l259
  5388     0384                     i1l1671:
  5389                           
  5390                           ;main.c: 231:                 digit->a = 1;
  5391     0384  0873               	movf	i1SetSegments@digit,w
  5392     0385  0086               	movwf	6
  5393     0386  0187               	clrf	7
  5394     0387  0181               	clrf	1
  5395     0388  0A81               	incf	1,f
  5396                           
  5397                           ;main.c: 232:                 digit->b = 1;
  5398     0389  0A73               	incf	i1SetSegments@digit,w
  5399     038A  0086               	movwf	6
  5400     038B  0187               	clrf	7
  5401     038C  0181               	clrf	1
  5402     038D  0A81               	incf	1,f
  5403     038E                     i1l1673:
  5404                           
  5405                           ;main.c: 233:                 digit->c = 1;
  5406     038E  0873               	movf	i1SetSegments@digit,w
  5407     038F  3E02               	addlw	2
  5408     0390  0086               	movwf	6
  5409     0391  0187               	clrf	7
  5410     0392  0181               	clrf	1
  5411     0393  0A81               	incf	1,f
  5412     0394                     i1l1675:
  5413                           
  5414                           ;main.c: 234:                 digit->d = 1;
  5415     0394  0873               	movf	i1SetSegments@digit,w
  5416     0395  3E03               	addlw	3
  5417     0396  0086               	movwf	6
  5418     0397  0187               	clrf	7
  5419     0398  0181               	clrf	1
  5420     0399  0A81               	incf	1,f
  5421     039A                     i1l1677:
  5422                           
  5423                           ;main.c: 235:                 digit->e = 0;
  5424     039A  0873               	movf	i1SetSegments@digit,w
  5425     039B  3E04               	addlw	4
  5426     039C  0086               	movwf	6
  5427     039D  0187               	clrf	7
  5428     039E  0181               	clrf	1
  5429     039F                     i1l1679:
  5430                           
  5431                           ;main.c: 236:                 digit->f = 1;
  5432     039F  0873               	movf	i1SetSegments@digit,w
  5433     03A0  3E05               	addlw	5
  5434     03A1  0086               	movwf	6
  5435     03A2  0187               	clrf	7
  5436     03A3  0181               	clrf	1
  5437     03A4  0A81               	incf	1,f
  5438     03A5                     i1l1681:
  5439                           
  5440                           ;main.c: 237:                 digit->g = 1;
  5441     03A5  0873               	movf	i1SetSegments@digit,w
  5442     03A6  3E06               	addlw	6
  5443     03A7  0086               	movwf	6
  5444     03A8  0187               	clrf	7
  5445     03A9  0181               	clrf	1
  5446     03AA  0A81               	incf	1,f
  5447                           
  5448                           ;main.c: 238:                 break;
  5449     03AB  2BD1               	goto	i1l259
  5450     03AC                     i1l1685:
  5451                           
  5452                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5453                           ; Switch size 1, requested type "simple"
  5454                           ; Number of cases is 1, Range of values is 0 to 0
  5455                           ; switch strategies available:
  5456                           ; Name         Instructions Cycles
  5457                           ; simple_byte            4     3 (average)
  5458                           ; direct_byte            8     6 (fixed)
  5459                           ; jumptable            260     6 (fixed)
  5460                           ;	Chosen strategy is simple_byte
  5461     03AC  0871               	movf	i1SetSegments@a+1,w
  5462     03AD  3A00               	xorlw	0	; case 0
  5463     03AE  1903               	skipnz
  5464     03AF  2BB1               	goto	i1l2549
  5465     03B0  2BD1               	goto	i1l259
  5466     03B1                     i1l2549:
  5467                           
  5468                           ; Switch size 1, requested type "simple"
  5469                           ; Number of cases is 10, Range of values is 0 to 9
  5470                           ; switch strategies available:
  5471                           ; Name         Instructions Cycles
  5472                           ; direct_byte           26     6 (fixed)
  5473                           ; simple_byte           31    16 (average)
  5474                           ; jumptable            260     6 (fixed)
  5475                           ;	Chosen strategy is simple_byte
  5476     03B1  0870               	movf	i1SetSegments@a,w
  5477     03B2  3A00               	xorlw	0	; case 0
  5478     03B3  1903               	skipnz
  5479     03B4  2A27               	goto	i1l1555
  5480     03B5  3A01               	xorlw	1	; case 1
  5481     03B6  1903               	skipnz
  5482     03B7  2A4F               	goto	i1l1567
  5483     03B8  3A03               	xorlw	3	; case 2
  5484     03B9  1903               	skipnz
  5485     03BA  2A73               	goto	i1l1581
  5486     03BB  3A01               	xorlw	1	; case 3
  5487     03BC  1903               	skipnz
  5488     03BD  2A9A               	goto	i1l1593
  5489     03BE  3A07               	xorlw	7	; case 4
  5490     03BF  1903               	skipnz
  5491     03C0  2AC1               	goto	i1l1605
  5492     03C1  3A01               	xorlw	1	; case 5
  5493     03C2  1903               	skipnz
  5494     03C3  2AE7               	goto	i1l1619
  5495     03C4  3A03               	xorlw	3	; case 6
  5496     03C5  1903               	skipnz
  5497     03C6  2B0E               	goto	i1l1633
  5498     03C7  3A01               	xorlw	1	; case 7
  5499     03C8  1903               	skipnz
  5500     03C9  2B36               	goto	i1l1647
  5501     03CA  3A0F               	xorlw	15	; case 8
  5502     03CB  1903               	skipnz
  5503     03CC  2B5B               	goto	i1l1659
  5504     03CD  3A01               	xorlw	1	; case 9
  5505     03CE  1903               	skipnz
  5506     03CF  2B84               	goto	i1l1671
  5507     03D0  2BD1               	goto	i1l259
  5508     03D1                     i1l259:
  5509     03D1  0008               	return
  5510     03D2                     __end_ofi1_SetSegments:
  5511                           
  5512                           	psect	text22
  5513     07B2                     __ptext22:	
  5514 ;; *************** function _TMR1_Write *****************
  5515 ;; Defined at:
  5516 ;;		line 108 in file "mcc_generated_files/timer/src/tmr1.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;  timerVal        2    0[COMMON] unsigned int 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5530 ;;      Params:         2       0       0       0       0       0       0
  5531 ;;      Locals:         0       0       0       0       0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0
  5533 ;;      Totals:         2       0       0       0       0       0       0
  5534 ;;Total ram usage:        2 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_TMR1_OverflowISR
  5540 ;;		_TMR1_Reload
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544     07B2                     _TMR1_Write:	
  5545                           ;psect for function _TMR1_Write
  5546                           
  5547     07B2                     i1l1845:	
  5548                           ;incstack = 0
  5549                           ; Regs used in _TMR1_Write: [wreg+status,2]
  5550                           
  5551                           
  5552                           ;mcc_generated_files/timer/src/tmr1.c: 108: static void TMR1_Write(size_t timerVal);mcc_
      +                          generated_files/timer/src/tmr1.c: 109: {;mcc_generated_files/timer/src/tmr1.c: 110:     
      +                          if (T1CONbits.nT1SYNC == 1)
  5553     07B2  0020               	movlb	0	; select bank0
  5554     07B3  1D18               	btfss	24,2	;volatile
  5555     07B4  2FB6               	goto	u87_21
  5556     07B5  2FB7               	goto	u87_20
  5557     07B6                     u87_21:
  5558     07B6  2FBE               	goto	i1l1855
  5559     07B7                     u87_20:
  5560     07B7                     i1l1847:
  5561                           
  5562                           ;mcc_generated_files/timer/src/tmr1.c: 111:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          113:         T1CONbits.TMR1ON = 0;
  5563     07B7  1018               	bcf	24,0	;volatile
  5564     07B8                     i1l1849:
  5565                           
  5566                           ;mcc_generated_files/timer/src/tmr1.c: 116:         TMR1H = (uint8_t)(timerVal >> 8);
  5567     07B8  0871               	movf	TMR1_Write@timerVal+1,w
  5568     07B9  0097               	movwf	23	;volatile
  5569     07BA                     i1l1851:
  5570                           
  5571                           ;mcc_generated_files/timer/src/tmr1.c: 117:         TMR1L = (uint8_t)timerVal;
  5572     07BA  0870               	movf	TMR1_Write@timerVal,w
  5573     07BB  0096               	movwf	22	;volatile
  5574     07BC                     i1l1853:
  5575                           
  5576                           ;mcc_generated_files/timer/src/tmr1.c: 120:         T1CONbits.TMR1ON = 1;
  5577     07BC  1418               	bsf	24,0	;volatile
  5578                           
  5579                           ;mcc_generated_files/timer/src/tmr1.c: 121:     }
  5580     07BD  2FC2               	goto	i1l179
  5581     07BE                     i1l1855:
  5582                           
  5583                           ;mcc_generated_files/timer/src/tmr1.c: 123:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          125:         TMR1H = (uint8_t)(timerVal >> 8);
  5584     07BE  0871               	movf	TMR1_Write@timerVal+1,w
  5585     07BF  0097               	movwf	23	;volatile
  5586     07C0                     i1l1857:
  5587                           
  5588                           ;mcc_generated_files/timer/src/tmr1.c: 126:         TMR1L = (uint8_t)timerVal;
  5589     07C0  0870               	movf	TMR1_Write@timerVal,w
  5590     07C1  0096               	movwf	22	;volatile
  5591     07C2                     i1l179:
  5592     07C2  0008               	return
  5593     07C3                     __end_of_TMR1_Write:
  5594     007E                     btemp	set	126	;btemp
  5595     007E                     int$flags	set	126
  5596     007E                     wtemp0	set	126
  5597                           
  5598                           	psect	idloc
  5599                           
  5600                           ;Config register IDLOC0 @ 0x8000
  5601                           ;	unspecified, using default values
  5602     8000                     	org	32768
  5603     8000  3FFF               	dw	16383
  5604                           
  5605                           ;Config register IDLOC1 @ 0x8001
  5606                           ;	unspecified, using default values
  5607     8001                     	org	32769
  5608     8001  3FFF               	dw	16383
  5609                           
  5610                           ;Config register IDLOC2 @ 0x8002
  5611                           ;	unspecified, using default values
  5612     8002                     	org	32770
  5613     8002  3FFF               	dw	16383
  5614                           
  5615                           ;Config register IDLOC3 @ 0x8003
  5616                           ;	unspecified, using default values
  5617     8003                     	org	32771
  5618     8003  3FFF               	dw	16383
  5619                           
  5620                           	psect	config
  5621                           
  5622                           ;Config register CONFIG1 @ 0x8007
  5623                           ;	Oscillator Selection Bits
  5624                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5625                           ;	Watchdog Timer Enable
  5626                           ;	WDTE = OFF, WDT disabled
  5627                           ;	Power-up Timer Enable
  5628                           ;	PWRTE = OFF, PWRT disabled
  5629                           ;	MCLR Pin Function Select
  5630                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5631                           ;	Flash Program Memory Code Protection
  5632                           ;	CP = OFF, Program memory code protection is disabled
  5633                           ;	Brown-out Reset Enable
  5634                           ;	BOREN = ON, Brown-out Reset enabled
  5635                           ;	Clock Out Enable
  5636                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5637                           ;	Internal/External Switchover Mode
  5638                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  5639                           ;	Fail-Safe Clock Monitor Enable
  5640                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5641     8007                     	org	32775
  5642     8007  3FE4               	dw	16356
  5643                           
  5644                           ;Config register CONFIG2 @ 0x8008
  5645                           ;	Flash Memory Self-Write Protection
  5646                           ;	WRT = OFF, Write protection off
  5647                           ;	Stack Overflow/Underflow Reset Enable
  5648                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5649                           ;	Brown-out Reset Voltage Selection
  5650                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5651                           ;	Low-Power Brown Out Reset
  5652                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5653                           ;	Low-Voltage Programming Enable
  5654                           ;	LVP = ON, Low-voltage programming enabled
  5655     8008                     	org	32776
  5656     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    12
    Data        1
    BSS         25
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      63
    BANK1            80     17      17
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    S328$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> Tmr1CallBack(), TMR1_DefaultOverflowCallback(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    SetSegments@digit	PTR struct digit size(1) Largest target is 7
		 -> one(BANK0[7]), ten(BANK0[7]), hundred(BANK0[7]), 

    ClearDigit@digit	PTR struct digit size(1) Largest target is 7
		 -> one(BANK0[7]), ten(BANK0[7]), hundred(BANK0[7]), 

    TMR1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Tmr1CallBack(), TMR1_DefaultOverflowCallback(), 

    TMR1_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Tmr1CallBack(), TMR1_DefaultOverflowCallback(), Absolute function(), 

    S328TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    tmr1.Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S328TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR1_OverflowCallbackRegister(), 

    tmr1.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR1_OverflowCallbackRegister(), 

    S328TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR1_PeriodCountSet(), 

    tmr1.PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR1_PeriodCountSet(), 

    S328TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), 

    tmr1.Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Stop(), 

    S328TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), 

    tmr1.Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Start(), 

    S328TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Initialize(), 

    tmr1.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Initialize(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    IO_RA0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RA0Callback(), IO_RA0_DefaultInterruptHandler(), 

    IO_RA0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RA0Callback(), Absolute function(), IO_RA0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_Display->i1___awmod
    i1___awmod->i1___awdiv

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_OverflowCallbackRegister
    _PIN_MANAGER_Initialize->_IO_RA0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _Display->___awmod
    ___awmod->___awdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_OverflowISR->_Tmr1CallBack
    _Tmr1CallBack->i1_Display
    i1_Display->i1___awmod

Critical Paths under _main in BANK1

    _main->_Display
    _Display->___awmod

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5933
                                             15 BANK1      2     2      0
                         _ClearDigit
                            _Display
         _IO_RA0_SetInterruptHandler
                  _SYSTEM_Initialize
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     446
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
      _TMR1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR1_OverflowCallbackRegister                        2     0      2     174
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IO_RA0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IO_RA0_SetInterruptHandler                           2     0      2     174
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display                                             11     9      2    4886
                                              4 BANK1     11     9      2
                        _SetSegments
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                             26 BANK0      3     3      0
                                              0 BANK1      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                             17 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _SetSegments                                          4     1      3    3097
                                             17 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _ClearDigit                                           1     1      0     253
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3093
                   _TMR1_OverflowISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_OverflowISR                                     0     0      0    3093
                   Absolute function *
       _TMR1_DefaultOverflowCallback *
                         _TMR1_Write
                       _Tmr1CallBack *
 ---------------------------------------------------------------------------------
 (6) _Tmr1CallBack                                         4     4      0    2853
                                             13 BANK0      4     4      0
                          i1_Display
 ---------------------------------------------------------------------------------
 (7) i1_Display                                           11     9      2    2829
                                              2 BANK0     11     9      2
                      i1_SetSegments
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (8) i1___awmod                                            7     3      4     400
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                          i1___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (8) i1_SetSegments                                        4     1      3    1894
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR1_Write                                           2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearDigit
   _Display
     _SetSegments
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _IO_RA0_SetInterruptHandler
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
       _IO_RA0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_OverflowCallbackRegister
   _TMR1_OverflowCallbackRegister

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_OverflowISR
     Absolute function(Fake) *
     _TMR1_DefaultOverflowCallback *
     _TMR1_Write *
     _Tmr1CallBack *
       i1_Display
         i1_SetSegments
         i1___awdiv
         i1___awmod
           i1___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      3F       6       78.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     11      11       8       21.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0      5E      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 04 10:10:33 2025

                                           l7 0FFF                                            l58 075E  
                                          l83 07CF                                            l69 07F9  
                                ___awdiv@sign 0037                                           l104 07E7  
                                         l123 07FF                                           l165 079B  
                                         l238 0782                                           l262 0522  
                                         l270 0737                                           l271 0737  
                                         l259 01FE                                           l507 0650  
                                         l198 07F3                                           l494 05F1  
                             _timer1ReloadVal 0058                                           _one 004F  
                                         _ten 0048                                  ___awmod@sign 003C  
                                         wreg 0009                                          l2113 07C3  
                                        l2131 0778                                          l2123 0761  
                                        l2133 077D                                          l2125 0769  
                                        l2301 00E2                                          l2127 076E  
                                        l2311 00FD                                          l2303 00E7  
                                        l2129 0773                                          l2321 0119  
                                        l2313 0102                                          l2305 00EE  
                                        l2241 002D                                          l2401 05A3  
                                        l2331 0134                                          l2323 011D  
                                        l2315 0107                                          l2307 00F2  
                                        l2251 0049                                          l2243 0032  
                                        l2411 05B7                                          l2403 05A8  
                                        l2341 0150                                          l2333 013B  
                                        l2325 0123                                          l2317 010D  
                                        l2309 00F7                                          l2261 006A  
                                        l2253 004E                                          l2245 003A  
                                        l2421 05D7                                          l2413 05BC  
                                        l2405 05AC                                          l2501 0729  
                                        l2351 0173                                          l2343 0156  
                                        l2335 0140                                          l2327 0129  
                                        l2319 0114                                          l2271 0085  
                                        l2263 0070                                          l2255 0054  
                                        l2247 003F                                          l2431 05ED  
                                        l2423 05D8                                          l2415 05C0  
                                        l2407 05AE                                          l2503 072A  
                                        l2361 0192                                          l2353 0178  
                                        l2345 015C                                          l2337 0144  
                                        l2329 012E                                          l2281 00A0  
                                        l2273 008B                                          l2265 0076  
                                        l2257 005E                                          l2249 0044  
                                        l2425 05DD                                          l2417 05C4  
                                        l2409 05B4                                          l2441 05FE  
                                        l1801 0743                                          l2505 072B  
                                        l2371 01B1                                          l2363 0198  
                                        l2355 017D                                          l2347 0163  
                                        l2339 014A                                          l2291 00C0  
                                        l2283 00AA                                          l2275 0090  
                                        l2267 007C                                          l2259 0064  
                                        l2419 05D3                                          l2427 05E3  
                                        l2451 0615                                          l2443 0601  
                                        l2435 05F2                                          l1811 074D  
                                        l1803 0745                                          l2381 01D2  
                                        l2373 01BB                                          l2365 019E  
                                        l2357 0182                                          l2349 016D  
                                        l2293 00C7                                          l2285 00AF  
                                        l2277 0095                                          l2269 0080  
                                        l2429 05E8                                          l2461 0633  
                                        l2453 061A                                          l2445 0606  
                                        l2437 05F4                                          l1821 0755  
                                        l1813 0751                                          l1805 0746  
                                        l2375 01C1                                          l2367 01A4  
                                        l2359 0188                                          l2295 00D1  
                                        l2287 00B5                                          l2279 009A  
                                        l2391 0592                                          l2463 0638  
                                        l2455 061F                                          l2447 060B  
                                        l2439 05F9                                          l1823 075D  
                                        l1815 0752                                          l1807 074A  
                                        l1831 0789                                          l2377 01C7  
                                        l2369 01AA                                          l2297 00D7  
                                        l2289 00BB                                          l2385 01D9  
                                        l2393 0594                                          l2457 0624  
                                        l2449 0611                                          l2465 063F  
                                        l2481 0515                                          l2473 04A0  
                                        l1841 07DC                                          l1817 0753  
                                        l1809 074B                                          l1833 078D  
                                        l1825 0783                                          l2547 01DE  
                                        l2379 01CC                                          l2299 00DD  
                                        l2395 0598                                          l2467 0645  
                                        l2459 062F                                          l2475 04D5  
                                        l1843 07DF                                          l1819 0754  
                                        l1835 0794                                          l1827 0785  
                                        l2491 0711                                          l2483 0704  
                                        l2397 059D                                          l2469 064B  
                                        l2477 04EB                                          l1773 07F4  
                                        l1837 0796                                          l1829 0787  
                                        l2493 0715                                          l2485 0707  
                                        l2399 059F                                          l2479 04F7  
                                        l1791 0FFD                                          l1775 07FA  
                                        l1839 0798                                          l2495 0718  
                                        l2487 0709                                          l1793 073A  
                                        l1777 07EE                                          l2497 071A  
                                        l2489 070D                                          l1795 073E  
                                        l2499 0721                                          l1789 0FFA  
                                        l1797 0741                                          l1799 0742  
                                        u1300 05C4                                          u1301 05C3  
                                        u1320 05D3                                          u1400 0624  
                                        u1321 05D2                                          u1401 0623  
                                        u1250 0032                                          u1410 062F  
                                        u1251 0031                                          u1315 05C5  
                                        u1411 062E                                          u1340 05E3  
                                        u1260 0598                                          u1341 05E2  
                                        u1325 05CF                                          u1261 0597  
                                        _LATA 010C                                          u1350 05E8  
                                        u1270 05A3                                          u1430 063F  
                                        _LATB 010D                                          u1351 05E7  
                                        u1335 05D9                                          u1271 05A2  
                                        u1431 063E                                          u1415 062B  
                                        _LATC 010E                                          u1280 05B4  
                                        u1440 0645                                          u1360 05F9  
                                        u1281 05B3                                          u1441 0644  
                                        u1425 0634                                          u1361 05F8  
                                        u1370 0606                                          u1450 04E3  
                                        u1371 0605                                          u1451 04E1  
                                        u1380 0611                                          u1460 04E4  
                                        u1381 0610                                          u1470 050E  
                                        u1295 05B8                                          u1471 050C  
                                        u1455 04DE                                          u1480 050F  
                                        u1395 0616                                          u1475 0509  
                                        _WPUA 020C                                          _WPUB 020D  
                                        _main 0704                                          _tmr1 07D0  
                                  _ClearDigit 075F                                          fsr0h 0005  
                                        fsr1h 0007                                          indf0 0000  
                                        fsr0l 0004                                          indf1 0001  
                                        fsr1l 0006                                          btemp 007E  
                 _INT_DefaultInterruptHandler 0000                                          start 0019  
             __end_of_INT_SetInterruptHandler 0800                               __end_of_Display 0523  
                           i1Display@hundreds 002B                ??_TMR1_DefaultOverflowCallback 0070  
                                       ?_main 0070                                i1___awdiv@sign 0076  
                             ??i1_SetSegments 0073                               __end_of___awdiv 05F2  
                             __end_of___awmod 0651                               ___awdiv@divisor 0031  
                                       _T1CON 0018                                         _IOCAF 0393  
                                       _IOCBF 0396                                         _IOCAN 0392  
                                       _IOCAP 0391                                         _IOCBN 0395  
                                       _IOCBP 0394                                         i1l201 0FF9  
                                       i1l113 0017                                         i1l242 049F  
                                       i1l262 0591                                         i1l179 07C2  
                                       i1l259 03D1                                         i1l507 0703  
                                       i1l195 07B1                                         i1l494 06AF  
                             ___awdiv@counter 0036                                         _TMR1H 0017  
                                       _TMR1L 0016                                         u70_20 0691  
                                       u70_21 0690                                         u70_25 068D  
                                       u63_20 0205                                         u63_21 0204  
                                       u71_25 0697                                         u72_20 06A1  
                                       u64_20 0656                                         u72_21 06A0  
                                       u64_21 0655                                         u80_25 06EB  
                                       u73_20 06A6                                         u65_20 0661  
                                       u81_20 06F5                                         u73_21 06A5  
                                       u65_21 0660                                         u81_21 06F4  
                                       _TRISA 008C                                         _TRISB 008D  
                                       _TRISC 008E                                         u66_20 0672  
                                       u82_20 06FA                                         u74_20 06B6  
                                       u90_20 03EB                                         u66_21 0671  
                                       u82_21 06F9                                         u74_21 06B5  
                                       u90_21 03EA                                         u75_20 06C1  
                                       u83_20 055D                                         u91_20 03F0  
                                       u75_21 06C0                                         u83_21 055B  
                                       u91_21 03EF                                         u67_25 0676  
                                       u83_25 0558                                         u68_20 0682  
                                       u76_20 06CC                                         u84_20 055E  
                                       u92_20 03F5                                         u68_21 0681  
                                       u76_21 06CB                                         u92_21 03F4  
                                       u85_20 0581                                         u93_20 0490  
                                       u85_21 057F                                         u93_21 048F  
                                       u69_25 0683                                         u77_25 06D0  
                                       u85_25 057C                                         u78_20 06DC  
                                       u86_20 0582                                         u78_21 06DB  
                                       u87_20 07B7                                         u79_20 06E6  
                                       u87_21 07B6                                         u79_21 06E5  
                                       u79_25 06E2                                         u88_20 03E1  
                                       u88_21 03E0                                         u89_20 03E6  
                                       u89_21 03E5                                i1___awmod@sign 0021  
                                 ?_TMR1_Write 0070                       __end_of_TMR1_Initialize 079C  
                                       pclath 000A                                         status 0003  
                                       wtemp0 007E                               __initialization 001B  
                                __end_of_main 073A                                  __end_of_tmr1 07DC  
                            _TMR1_OverflowISR 079C                   ?_INTERRUPT_InterruptManager 0070  
                                      ??_main 00AF                                 ??_SetSegments 0034  
                            ___awdiv@dividend 0033         __end_of_TMR1_OverflowCallbackRegister 07F4  
               _TMR1_OverflowCallbackRegister 07EE                                        _ANSELA 018C  
                                      _ANSELB 018D                                        _ANSELC 018E  
                               ?_Tmr1CallBack 0070                                        _BORCON 0116  
                                      _T1GCON 0019                                        i1l2121 07AC  
                                      i1l2115 079C                                        i1l2117 079E  
                                      i1l2119 07A5                                        i1l1601 02B5  
                                      i1l2161 0014                                        i1l1611 02D0  
                                      i1l1603 02BA                                        i1l2155 0006  
                                      i1l1621 02EC                                        i1l1613 02D5  
                                      i1l1605 02C1                                        i1l1541 0200  
                                      i1l1701 0661                                        i1l2157 000A  
                                      i1l1631 0307                                        i1l1623 02F0  
                                      i1l1615 02DA                                        i1l1607 02C5  
                                      i1l1551 021C                                        i1l1543 0205  
                                      i1l1711 0675                                        i1l1703 0666  
                                      i1l2159 000F                                        u121_20 000A  
                                      i1l1641 0323                                        i1l1633 030E  
                                      i1l1625 02F6                                        i1l1617 02E0  
                                      i1l1609 02CA                                        i1l1561 023D  
                                      i1l1553 0221                                        i1l1545 020D  
                                      i1l1721 0695                                        i1l1713 067A  
                                      i1l1705 066A                                        u121_21 0009  
                                      i1l1651 0346                                        i1l1643 0329  
                                      i1l1635 0313                                        i1l1627 02FC  
                                      i1l1619 02E7                                        i1l1571 0258  
                                      i1l1563 0243                                        i1l1555 0227  
                                      i1l1547 0212                                        i1l1731 06AB  
                                      i1l1723 0696                                        i1l1715 067E  
                                      i1l1707 066C                                        i1l1661 0365  
                                      i1l1653 034B                                        i1l1645 032F  
                                      i1l1637 0317                                        i1l1629 0301  
                                      i1l1581 0273                                        i1l1573 025E  
                                      i1l1565 0249                                        i1l1557 0231  
                                      i1l1549 0217                                        i1l1725 069B  
                                      i1l1717 0682                                        i1l1709 0672  
                                      i1l1741 06BB                                        i1l1671 0384  
                                      i1l1663 036B                                        i1l1655 0350  
                                      i1l1647 0336                                        i1l1639 031D  
                                      i1l1591 0293                                        i1l1583 027D  
                                      i1l1575 0263                                        i1l1567 024F  
                                      i1l1559 0237                                        i1l1719 0691  
                                      i1l1727 06A1                                        i1l1751 06CF  
                                      i1l1743 06BD                                        i1l1735 06B0  
                                      u114_20 07AC                                        u122_20 000F  
                                      i1l1681 03A5                                        i1l1673 038E  
                                      i1l1665 0371                                        i1l1657 0355  
                                      i1l1649 0340                                        i1l1593 029A  
                                      i1l1585 0282                                        i1l1577 0268  
                                      i1l1569 0253                                        i1l1729 06A6  
                                      i1l1761 06EA                                        i1l1753 06D4  
                                      i1l1745 06C1                                        i1l1737 06B2  
                                      u114_21 07AB                                        u122_21 000E  
                                      i1l1851 07BA                                        i1l1675 0394  
                                      i1l1667 0377                                        i1l1659 035B  
                                      i1l1595 02A4                                        i1l1587 0288  
                                      i1l1579 026D                                        i1l1691 0651  
                                      i1l1763 06EF                                        i1l1755 06D8  
                                      i1l1747 06C6                                        i1l1739 06B6  
                                      i1l1853 07BC                                        i1l1845 07B2  
                                      i1l2549 03B1                                        i1l1677 039A  
                                      i1l1669 037D                                        i1l1597 02AA  
                                      i1l1589 028E                                        i1l1685 03AC  
                                      i1l1693 0652                                        i1l1757 06DC  
                                      i1l1749 06CC                                        i1l1765 06F5  
                                      i1l1781 054F                                        i1l1861 03D6  
                                      i1l1847 07B7                                        i1l1855 07BE  
                                      i1l1679 039F                                        i1l1599 02B0  
                                      i1l1695 0656                                        i1l1767 06FA  
                                      i1l1759 06E6                                        i1l1783 0565  
                                      i1l1871 03F0                                        i1l1863 03DC  
                                      u123_20 0014                                        i1l1857 07C0  
                                      i1l1849 07B8                                        i1l1697 065B  
                                      i1l1769 06FF                                        i1l1785 056E  
                                      i1l1873 03F5                                        i1l1865 03E1  
                                      u123_21 0013                                        i1l1699 065D  
                                      i1l1787 0587                                        i1l1779 0523  
                                      i1l1867 03E6                                        i1l1875 03F7  
                                      i1l1859 03D2                                        i1l1877 0490  
                                      i1l1869 03EB                                        i1l1879 0491  
                                      _OSCCON 0099                                   ?_ClearDigit 0070  
                                   ??_Display 00A6                             __end_ofi1_Display 0592  
                                   ??___awdiv 0035                                     ??___awmod 003A  
                            ___awdiv@quotient 0038                               ___awmod@divisor 00A0  
                             ___awmod@counter 003B                                        _toggle 0040  
                           ?_CLOCK_Initialize 0070                             __end_ofi1___awdiv 06B0  
                           __end_ofi1___awmod 0704                            ??_CLOCK_Initialize 0031  
                            SetSegments@blank 0033                              SetSegments@digit 0034  
     INT_SetInterruptHandler@InterruptHandler 0031    IO_RA0_SetInterruptHandler@InterruptHandler 0031  
                              ??_Tmr1CallBack 002D                           __end_of_SetSegments 01FF  
                            ?_TMR1_Initialize 0070                             _SYSTEM_Initialize 07C3  
                     __end_of__initialization 0027                            ?_SYSTEM_Initialize 0070  
                              __pcstackCOMMON 0070                                  __pidataBANK0 0003  
                         ??_SYSTEM_Initialize 0033                                _OPTION_REGbits 0095  
                   __end_of_SYSTEM_Initialize 07D0                  ??_IO_RA0_SetInterruptHandler 0033  
                                  __pbssBANK0 003D                ?_TMR1_OverflowCallbackRegister 0031  
                                  __pmaintext 0704                                    __pintentry 0004  
                          i1___awdiv@dividend 0072                                   _SetSegments 002B  
                         _TMR1_PeriodCountSet 0000                                  ??_TMR1_Write 0072  
                    __end_of_TMR1_OverflowISR 07B2                                       _Display 04A0  
                          i1___awdiv@quotient 0077                                       ___awdiv 0592  
                                     ___awmod 05F2                          __end_of_Tmr1CallBack 04A0  
                          __end_of_TMR1_Write 07C3                            i1SetSegments@blank 0072  
                          i1SetSegments@digit 0073                                       __ptext1 07C3  
                                     __ptext2 0783                                       __ptext3 07EE  
                                     __ptext4 073A                                       __ptext5 07F4  
                                     __ptext6 07DC                                       __ptext7 07FA  
                                     __ptext8 0FFA                                       __ptext9 04A0  
                                   _T1CONbits 0018                                       _counter 003F  
                       __end_ofi1_SetSegments 03D2                              ___awmod@dividend 00A2  
                                     _hundred 0041                      ??_PIN_MANAGER_Initialize 0033  
                                   _IOCAFbits 0393                       _INT_SetInterruptHandler 07FA  
                                     clrloop0 07E9                          end_of_initialization 0027  
                                ??_ClearDigit 0031                               Display@hundreds 00AD  
                                   i1_Display 0523                                     _PORTAbits 000C  
                                   _PORTBbits 000D                                     _PORTCbits 000E  
                                   _TMR1_Stop 0000                         _TMR1_OverflowCallback 0056  
                          __end_of_ClearDigit 0783  TMR1_OverflowCallbackRegister@CallbackHandler 0031  
                                   i1___awdiv 0651                                     i1___awmod 06B0  
                               i1Display@ones 0027                                 i1Display@tens 0029  
          __end_of_IO_RA0_SetInterruptHandler 07FA                    _IO_RA0_SetInterruptHandler 07F4  
                     _IO_RA0_InterruptHandler 005C                  __end_of_INTERRUPT_Initialize 07E8  
                                  ?i1_Display 0022                     ??_INT_SetInterruptHandler 0033  
                             ClearDigit@digit 0031                           start_initialization 001B  
                                  ?i1___awdiv 0070                                    ?i1___awmod 0079  
                          TMR1_Write@timerVal 0070                                  SetSegments@a 0031  
                                 __pdataBANK0 005E                            i1___awmod@dividend 007B  
             ??_TMR1_OverflowCallbackRegister 0033                                  ?_SetSegments 0031  
                           _Tmr1CallBack$1136 0030                                     ___latbits 0002  
                               __pcstackBANK0 0020                                 __pcstackBANK1 00A0  
                           ?_TMR1_OverflowISR 0070                                  _Tmr1CallBack 03D2  
                              i1SetSegments@a 0070                            ??_TMR1_OverflowISR 007E  
                                    ?_Display 00A4                                     __pnvBANK0 0056  
                      _PIN_MANAGER_Initialize 073A                                      ?___awdiv 0031  
                                    ?___awmod 00A0                             i1___awdiv@divisor 0070  
                           i1___awdiv@counter 0075                                   ??i1_Display 0024  
                ??_INTERRUPT_InterruptManager 007E                                   ??i1___awdiv 0074  
                                 ??i1___awmod 007D                          _INTERRUPT_Initialize 07DC  
                                 _RA0Callback 0000                              _CLOCK_Initialize 0FFA  
                                    _RA0Value 005E                                     clear_ram0 07E8  
                                    _PIE1bits 0091                                      _PIR1bits 0011  
                                    Display@a 00A4                             ??_TMR1_Initialize 0033  
                 ?_IO_RA0_SetInterruptHandler 0031                         ?_INTERRUPT_Initialize 0070  
              _IO_RA0_DefaultInterruptHandler 0000                             i1___awmod@divisor 0079  
                           i1___awmod@counter 0020                         _TMR1_InterruptHandler 003D  
                                    __ptext10 05F2                                      __ptext11 0592  
                                    __ptext20 0651                                      __ptext12 002B  
                                    __ptext21 01FF                                      __ptext13 075F  
                                  _T1GCONbits 0019                                      __ptext22 07B2  
                                    __ptext15 079C                                      __ptext16 0FF9  
                                    __ptext17 03D2                                      __ptext18 0523  
                                    __ptext19 06B0          __end_of_TMR1_DefaultOverflowCallback 0FFA  
                _TMR1_DefaultOverflowCallback 0FF9                                      int$flags 007E  
          __end_of_INTERRUPT_InterruptManager 0019                    _INTERRUPT_InterruptManager 0004  
                                  _INTCONbits 000B                                 i1_SetSegments 01FF  
                        _INT_InterruptHandler 005A                        ??_INTERRUPT_Initialize 0033  
                                    intlevel1 0000                       ?_PIN_MANAGER_Initialize 0070  
                                  i1Display@a 0022                 ?_TMR1_DefaultOverflowCallback 0070  
                    ?_INT_SetInterruptHandler 0031                      __end_of_CLOCK_Initialize 1000  
                               __pstringtext1 07D0                                ?i1_SetSegments 0070  
                                 Display@ones 00A9                                   Display@tens 00AB  
                                  _TMR1_Start 0000                                    _TMR1_Write 07B2  
              __end_of_PIN_MANAGER_Initialize 075F                               _TMR1_Initialize 0783  
